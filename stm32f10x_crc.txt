; generated by ARM C/C++ Compiler, RVCT4.0 [Build 728]
; commandline ArmCC [--debug -c --asm --interleave -ostm32f10x_crc.o --depend=stm32f10x_crc.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\user\inc -I.\stdperiph_driver\inc -I.\cmsis -ID:\ARM\INC -ID:\ARM\INC\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_MD --omf_browse=stm32f10x_crc.crf stdperiph_driver\src\stm32f10x_crc.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  CRC_ResetDR PROC
;;;82       */
;;;83     void CRC_ResetDR(void)
000000  2001              MOVS     r0,#1
;;;84     {
;;;85       /* Reset CRC generator */
;;;86       CRC->CR = CRC_CR_RESET;
000002  4910              LDR      r1,|L1.68|
000004  6088              STR      r0,[r1,#8]
;;;87     }
000006  4770              BX       lr
;;;88     
                          ENDP

                  CRC_CalcCRC PROC
;;;93       */
;;;94     uint32_t CRC_CalcCRC(uint32_t Data)
000008  4601              MOV      r1,r0
;;;95     {
;;;96       CRC->DR = Data;
00000a  480e              LDR      r0,|L1.68|
00000c  6001              STR      r1,[r0,#0]
;;;97       
;;;98       return (CRC->DR);
00000e  6800              LDR      r0,[r0,#0]
;;;99     }
000010  4770              BX       lr
;;;100    
                          ENDP

                  CRC_CalcBlockCRC PROC
;;;106      */
;;;107    uint32_t CRC_CalcBlockCRC(uint32_t pBuffer[], uint32_t BufferLength)
000012  b510              PUSH     {r4,lr}
;;;108    {
000014  4603              MOV      r3,r0
;;;109      uint32_t index = 0;
000016  2200              MOVS     r2,#0
;;;110      
;;;111      for(index = 0; index < BufferLength; index++)
000018  bf00              NOP      
00001a  e004              B        |L1.38|
                  |L1.28|
;;;112      {
;;;113        CRC->DR = pBuffer[index];
00001c  f8530022          LDR      r0,[r3,r2,LSL #2]
000020  4c08              LDR      r4,|L1.68|
000022  6020              STR      r0,[r4,#0]
000024  1c52              ADDS     r2,r2,#1              ;111
                  |L1.38|
000026  428a              CMP      r2,r1                 ;111
000028  d3f8              BCC      |L1.28|
;;;114      }
;;;115      return (CRC->DR);
00002a  4806              LDR      r0,|L1.68|
00002c  6800              LDR      r0,[r0,#0]
;;;116    }
00002e  bd10              POP      {r4,pc}
;;;117    
                          ENDP

                  CRC_GetCRC PROC
;;;122      */
;;;123    uint32_t CRC_GetCRC(void)
000030  4804              LDR      r0,|L1.68|
;;;124    {
;;;125      return (CRC->DR);
000032  6800              LDR      r0,[r0,#0]
;;;126    }
000034  4770              BX       lr
;;;127    
                          ENDP

                  CRC_SetIDRegister PROC
;;;132      */
;;;133    void CRC_SetIDRegister(uint8_t IDValue)
000036  4903              LDR      r1,|L1.68|
;;;134    {
;;;135      CRC->IDR = IDValue;
000038  7108              STRB     r0,[r1,#4]
;;;136    }
00003a  4770              BX       lr
;;;137    
                          ENDP

                  CRC_GetIDRegister PROC
;;;142      */
;;;143    uint8_t CRC_GetIDRegister(void)
00003c  4801              LDR      r0,|L1.68|
;;;144    {
;;;145      return (CRC->IDR);
00003e  7900              LDRB     r0,[r0,#4]
;;;146    }
000040  4770              BX       lr
;;;147    
                          ENDP

000042  0000              DCW      0x0000
                  |L1.68|
                          DCD      0x40023000
