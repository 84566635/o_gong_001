; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\main.o --asm_dir=.\lis\ --list_dir=.\lis\ --depend=.\main.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931 -I.\user\inc -I.\stdperiph_driver\inc -I.\cmsis -ID:\Keil_v5\ARM\RV31\INC -Id:\Keil_v5\ARM\RV31\INC -Id:\Keil_v5\ARM\CMSIS\Include -Id:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=521 -DUSE_STDPERIPH_DRIVER -DSTM32F10X_MD --omf_browse=.\main.crf user\src\main.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  getCheckSum PROC
;;;63     
;;;64     char getCheckSum(char *packet)
000000  2200              MOVS     r2,#0
;;;65     {
;;;66     	char i=0,checksum=0;
;;;67     	for(i = 1;i<8;i++)
000002  2101              MOVS     r1,#1
                  |L1.4|
;;;68     	{
;;;69     		checksum += packet[i];
000004  5c43              LDRB     r3,[r0,r1]
000006  1c49              ADDS     r1,r1,#1
000008  441a              ADD      r2,r2,r3
00000a  b2c9              UXTB     r1,r1                 ;67
00000c  b2d2              UXTB     r2,r2
00000e  2908              CMP      r1,#8                 ;67
000010  d3f8              BCC      |L1.4|
;;;70       }
;;;71     	checksum = 0xff -checksum;
000012  f5c27080          RSB      r0,r2,#0x100
;;;72     	checksum += 1;
000016  b2c0              UXTB     r0,r0
;;;73     	return checksum;
;;;74     }
000018  4770              BX       lr
;;;75     	
                          ENDP

                  Do_Xor PROC
;;;76     u8 Do_Xor(u8 *p,u8 length) //数组，异或操作数组结束长度 指针参数不支持inline关键字？？？
00001a  b510              PUSH     {r4,lr}
;;;77     {
00001c  4603              MOV      r3,r0
;;;78       u8 i,result;
;;;79       result = *p;
00001e  7800              LDRB     r0,[r0,#0]
;;;80       for(i=1;i<length;i++)
000020  2201              MOVS     r2,#1
000022  e004              B        |L1.46|
                  |L1.36|
;;;81       {
;;;82         result ^= *(++p);
000024  f8134f01          LDRB     r4,[r3,#1]!
000028  4060              EORS     r0,r0,r4
00002a  1c52              ADDS     r2,r2,#1
00002c  b2d2              UXTB     r2,r2                 ;80
                  |L1.46|
00002e  428a              CMP      r2,r1                 ;80
000030  d3f8              BCC      |L1.36|
;;;83       }
;;;84       return result;
;;;85     }
000032  bd10              POP      {r4,pc}
;;;86     
                          ENDP

                  speak_one_time PROC
;;;87     void speak_one_time()
000034  b510              PUSH     {r4,lr}
;;;88     {
;;;89     	SPEAKER_EN;//20161110 need del
000036  48f7              LDR      r0,|L1.1044|
000038  f44f5480          MOV      r4,#0x1000
00003c  6004              STR      r4,[r0,#0]
;;;90     	delay_ms(100);
00003e  2064              MOVS     r0,#0x64
000040  f7fffffe          BL       delay_ms
;;;91     	SPEAKER_DISABLE;
000044  48f3              LDR      r0,|L1.1044|
000046  1d00              ADDS     r0,r0,#4
000048  6004              STR      r4,[r0,#0]
;;;92     }
00004a  bd10              POP      {r4,pc}
;;;93     
                          ENDP

                  clear_PM_rec PROC
;;;94     
;;;95     void clear_PM_rec()
00004c  2000              MOVS     r0,#0
;;;96     {
;;;97     	int i;
;;;98     	for(i=0;i<PM_DATA_NUM;i++)
;;;99     	{
;;;100    		PM25DMABuffer[i]= 0;
00004e  49f2              LDR      r1,|L1.1048|
000050  4602              MOV      r2,r0                 ;98
                  |L1.82|
000052  540a              STRB     r2,[r1,r0]
000054  1c40              ADDS     r0,r0,#1
000056  2823              CMP      r0,#0x23              ;98
000058  dbfb              BLT      |L1.82|
;;;101    	}
;;;102    }
00005a  4770              BX       lr
;;;103    void decode_PM_data()
                          ENDP

                  decode_PM_data PROC
00005c  49ee              LDR      r1,|L1.1048|
;;;104    {
;;;105    	int i,data_st_p;
;;;106    	
;;;107    	for(i=0;i<PM_DATA_NUM;i++)
00005e  2000              MOVS     r0,#0
                  |L1.96|
;;;108    	{
;;;109    		if(PM25DMABuffer[i]==0x4D)
000060  5c0b              LDRB     r3,[r1,r0]
000062  2b4d              CMP      r3,#0x4d
000064  d017              BEQ      |L1.150|
000066  1c40              ADDS     r0,r0,#1
000068  2823              CMP      r0,#0x23              ;107
00006a  dbf9              BLT      |L1.96|
                  |L1.108|
;;;110    		{
;;;111    			data_st_p = i;
;;;112    		  break;
;;;113    		}
;;;114    	}
;;;115    	if(data_st_p<(PM_DATA_NUM-17))
00006c  2a12              CMP      r2,#0x12
00006e  da11              BGE      |L1.148|
;;;116    	{
;;;117    		if(PM25DMABuffer[data_st_p+1] == 0x50)
000070  1888              ADDS     r0,r1,r2
000072  7841              LDRB     r1,[r0,#1]
000074  2950              CMP      r1,#0x50
000076  d10d              BNE      |L1.148|
;;;118    		{
;;;119    		  PM2_5_concentration.Buf8[1]=PM25DMABuffer[data_st_p+4];
000078  7902              LDRB     r2,[r0,#4]
00007a  49e8              LDR      r1,|L1.1052|
00007c  704a              STRB     r2,[r1,#1]
;;;120    			PM2_5_concentration.Buf8[0]=PM25DMABuffer[data_st_p+5];
00007e  7942              LDRB     r2,[r0,#5]
000080  700a              STRB     r2,[r1,#0]
;;;121    			PM2_5_value.Buf8[3] = PM25DMABuffer[data_st_p+8];
000082  7a02              LDRB     r2,[r0,#8]
000084  3118              ADDS     r1,r1,#0x18
000086  70ca              STRB     r2,[r1,#3]
;;;122    			PM2_5_value.Buf8[2] = PM25DMABuffer[data_st_p+9];
000088  7a42              LDRB     r2,[r0,#9]
00008a  708a              STRB     r2,[r1,#2]
;;;123    			PM2_5_value.Buf8[1] = PM25DMABuffer[data_st_p+10];
00008c  7a82              LDRB     r2,[r0,#0xa]
00008e  704a              STRB     r2,[r1,#1]
;;;124    			PM2_5_value.Buf8[0] = PM25DMABuffer[data_st_p+8];
000090  7a00              LDRB     r0,[r0,#8]
000092  7008              STRB     r0,[r1,#0]
                  |L1.148|
;;;125    		}
;;;126    	}
;;;127    }
000094  4770              BX       lr
                  |L1.150|
000096  4602              MOV      r2,r0                 ;111
000098  e7e8              B        |L1.108|
;;;128    
                          ENDP

                  conv_CO2_conc_str PROC
;;;129    void conv_CO2_conc_str(uint val)
00009a  f2427210          MOV      r2,#0x2710
;;;130    {
;;;131    	uint temp= 0;
;;;132    	temp = val;
;;;133    
;;;134    	display_CO2_conc[0] =  temp/10000 + 48;
00009e  fbb0f3f2          UDIV     r3,r0,r2
0000a2  49de              LDR      r1,|L1.1052|
0000a4  3330              ADDS     r3,r3,#0x30
0000a6  3123              ADDS     r1,r1,#0x23
0000a8  700b              STRB     r3,[r1,#0]
;;;135    	temp = temp%10000;
0000aa  fbb0f3f2          UDIV     r3,r0,r2
0000ae  fb020013          MLS      r0,r2,r3,r0
;;;136    	display_CO2_conc[1] =  temp/1000 + 48;
0000b2  f44f727a          MOV      r2,#0x3e8
0000b6  fbb0f3f2          UDIV     r3,r0,r2
0000ba  3330              ADDS     r3,r3,#0x30
0000bc  704b              STRB     r3,[r1,#1]
;;;137    	temp = temp%1000;
0000be  fbb0f3f2          UDIV     r3,r0,r2
0000c2  fb020013          MLS      r0,r2,r3,r0
;;;138    	display_CO2_conc[2] =  temp/100 + 48;
0000c6  2264              MOVS     r2,#0x64
0000c8  fbb0f3f2          UDIV     r3,r0,r2
0000cc  3330              ADDS     r3,r3,#0x30
0000ce  708b              STRB     r3,[r1,#2]
;;;139    	temp = temp%100;
0000d0  fbb0f3f2          UDIV     r3,r0,r2
0000d4  fb020013          MLS      r0,r2,r3,r0
;;;140    	display_CO2_conc[3] =  temp/10 + 48;
0000d8  220a              MOVS     r2,#0xa
0000da  fbb0f3f2          UDIV     r3,r0,r2
0000de  3330              ADDS     r3,r3,#0x30
0000e0  70cb              STRB     r3,[r1,#3]
;;;141    	display_CO2_conc[4] =  temp%10 + 48;
0000e2  fbb0f3f2          UDIV     r3,r0,r2
0000e6  fb020013          MLS      r0,r2,r3,r0
0000ea  3030              ADDS     r0,r0,#0x30
0000ec  7108              STRB     r0,[r1,#4]
;;;142    }
0000ee  4770              BX       lr
;;;143    
                          ENDP

                  conv_PM_num_str PROC
;;;144    void conv_PM_num_str(uint val)
0000f0  4acb              LDR      r2,|L1.1056|
;;;145    {
;;;146    	uint temp= 0;
;;;147    	temp = val;
;;;148    	display_num_PM[0] =  temp/10000000 + 48;
0000f2  49cc              LDR      r1,|L1.1060|
0000f4  fbb0f3f2          UDIV     r3,r0,r2
0000f8  3330              ADDS     r3,r3,#0x30
0000fa  700b              STRB     r3,[r1,#0]
;;;149    	temp = temp%10000000;
0000fc  fbb0f3f2          UDIV     r3,r0,r2
000100  fb020013          MLS      r0,r2,r3,r0
;;;150    	display_num_PM[1] =  temp/1000000 + 48;
000104  4ac8              LDR      r2,|L1.1064|
000106  fbb0f3f2          UDIV     r3,r0,r2
00010a  3330              ADDS     r3,r3,#0x30
00010c  704b              STRB     r3,[r1,#1]
;;;151    	temp = temp%1000000;
00010e  fbb0f3f2          UDIV     r3,r0,r2
000112  fb020013          MLS      r0,r2,r3,r0
;;;152    	display_num_PM[2] =  temp/100000 + 48;
000116  4ac5              LDR      r2,|L1.1068|
000118  fbb0f3f2          UDIV     r3,r0,r2
00011c  3330              ADDS     r3,r3,#0x30
00011e  708b              STRB     r3,[r1,#2]
;;;153    	temp = temp%100000;
000120  fbb0f3f2          UDIV     r3,r0,r2
000124  fb020013          MLS      r0,r2,r3,r0
;;;154    	display_num_PM[3] =  temp/10000 + 48;
000128  f2427210          MOV      r2,#0x2710
00012c  fbb0f3f2          UDIV     r3,r0,r2
000130  3330              ADDS     r3,r3,#0x30
000132  70cb              STRB     r3,[r1,#3]
;;;155    	temp = temp%10000;
000134  fbb0f3f2          UDIV     r3,r0,r2
000138  fb020013          MLS      r0,r2,r3,r0
;;;156    	display_num_PM[4] =  temp/1000 + 48;
00013c  f44f727a          MOV      r2,#0x3e8
000140  fbb0f3f2          UDIV     r3,r0,r2
000144  3330              ADDS     r3,r3,#0x30
000146  710b              STRB     r3,[r1,#4]
;;;157    	temp = temp%1000;
000148  fbb0f3f2          UDIV     r3,r0,r2
00014c  fb020013          MLS      r0,r2,r3,r0
;;;158    	display_num_PM[5] =  temp/100 + 48;
000150  2264              MOVS     r2,#0x64
000152  fbb0f3f2          UDIV     r3,r0,r2
000156  3330              ADDS     r3,r3,#0x30
000158  714b              STRB     r3,[r1,#5]
;;;159    	temp = temp%100;
00015a  fbb0f3f2          UDIV     r3,r0,r2
00015e  fb020013          MLS      r0,r2,r3,r0
;;;160    	display_num_PM[6] =  temp/10 + 48;
000162  220a              MOVS     r2,#0xa
000164  fbb0f2f2          UDIV     r2,r0,r2
000168  3230              ADDS     r2,r2,#0x30
00016a  718a              STRB     r2,[r1,#6]
;;;161    	display_num_PM[7] =  temp% + 48;
00016c  2230              MOVS     r2,#0x30
00016e  fbb0f3f2          UDIV     r3,r0,r2
000172  fb020013          MLS      r0,r2,r3,r0
000176  71c8              STRB     r0,[r1,#7]
;;;162    }
000178  4770              BX       lr
;;;163    
                          ENDP

                  conv_PM_conc_str PROC
;;;164    void conv_PM_conc_str(uint val)
00017a  f2427210          MOV      r2,#0x2710
;;;165    {
;;;166    	uint temp= 0;
;;;167    	temp = val;
;;;168    	display_conc_PM[0] =  temp/10000 + 48;
00017e  fbb0f3f2          UDIV     r3,r0,r2
000182  49a6              LDR      r1,|L1.1052|
000184  3330              ADDS     r3,r3,#0x30
000186  311c              ADDS     r1,r1,#0x1c
000188  700b              STRB     r3,[r1,#0]
;;;169    	temp = temp%10000;
00018a  fbb0f3f2          UDIV     r3,r0,r2
00018e  fb020013          MLS      r0,r2,r3,r0
;;;170    	display_conc_PM[1] =  temp/1000 + 48;
000192  f44f727a          MOV      r2,#0x3e8
000196  fbb0f3f2          UDIV     r3,r0,r2
00019a  3330              ADDS     r3,r3,#0x30
00019c  704b              STRB     r3,[r1,#1]
;;;171    	temp = temp%1000;
00019e  fbb0f3f2          UDIV     r3,r0,r2
0001a2  fb020013          MLS      r0,r2,r3,r0
;;;172    	display_conc_PM[2] =  temp/100 + 48;
0001a6  2264              MOVS     r2,#0x64
0001a8  fbb0f3f2          UDIV     r3,r0,r2
0001ac  3330              ADDS     r3,r3,#0x30
0001ae  708b              STRB     r3,[r1,#2]
;;;173    	temp = temp%100;
0001b0  fbb0f3f2          UDIV     r3,r0,r2
0001b4  fb020013          MLS      r0,r2,r3,r0
;;;174    	display_conc_PM[3] =  temp/10 + 48;
0001b8  220a              MOVS     r2,#0xa
0001ba  fbb0f3f2          UDIV     r3,r0,r2
0001be  3330              ADDS     r3,r3,#0x30
0001c0  70cb              STRB     r3,[r1,#3]
;;;175    	display_conc_PM[4] =  temp%10 + 48;
0001c2  fbb0f3f2          UDIV     r3,r0,r2
0001c6  fb020013          MLS      r0,r2,r3,r0
0001ca  3030              ADDS     r0,r0,#0x30
0001cc  7108              STRB     r0,[r1,#4]
;;;176    }
0001ce  4770              BX       lr
;;;177    
                          ENDP

                  delay_us_motor PROC
;;;178    void delay_us_motor(int usneed)
0001d0  b510              PUSH     {r4,lr}
;;;179    {
;;;180    	int i;
;;;181    	for(i=0;i<usneed;i++)
0001d2  2100              MOVS     r1,#0
;;;182    	{
;;;183    		GPIOC->ODR ^= GPIO_Pin_12;
0001d4  4a96              LDR      r2,|L1.1072|
;;;184    		GPIOD->ODR ^= GPIO_Pin_2;
0001d6  4b97              LDR      r3,|L1.1076|
0001d8  e008              B        |L1.492|
                  |L1.474|
0001da  68d4              LDR      r4,[r2,#0xc]          ;183
0001dc  f4845480          EOR      r4,r4,#0x1000         ;183
0001e0  60d4              STR      r4,[r2,#0xc]          ;183
0001e2  681c              LDR      r4,[r3,#0]
0001e4  f0840404          EOR      r4,r4,#4
0001e8  601c              STR      r4,[r3,#0]
0001ea  1c49              ADDS     r1,r1,#1
                  |L1.492|
0001ec  4281              CMP      r1,r0                 ;181
0001ee  dbf4              BLT      |L1.474|
;;;185    	}
;;;186    }
0001f0  bd10              POP      {r4,pc}
;;;187    
                          ENDP

                  motor_step_move PROC
;;;190    static char step_motor_moving_flag = 0;
;;;191    void motor_step_move(int step_num,char direct)
0001f2  e92d5ff3          PUSH     {r0,r1,r4-r12,lr}
;;;192    {
;;;193    	static int step_state = 0;
;;;194    	unsigned int i =0;
;;;195    	//M_EN1_DISABLE;
;;;196    	//M_EN2_DISABLE;
;;;197    	M_EN1_EN;
0001f6  4c8e              LDR      r4,|L1.1072|
0001f8  f44f5880          MOV      r8,#0x1000
0001fc  4607              MOV      r7,r0                 ;192
0001fe  2600              MOVS     r6,#0                 ;194
000200  f8c48010          STR      r8,[r4,#0x10]
;;;198    	M_EN2_EN;
000204  498b              LDR      r1,|L1.1076|
000206  f04f0904          MOV      r9,#4
00020a  1d09              ADDS     r1,r1,#4
00020c  f8c19000          STR      r9,[r1,#0]
;;;199    	while(i<step_num)
;;;200    	{
;;;201    		step_motor_moving_flag = 1;
000210  4d82              LDR      r5,|L1.1052|
;;;202    		switch(step_state)
;;;203    		{
;;;204    				case 0:
;;;205    								M_IN1_LOW;
000212  f44f6a80          MOV      r10,#0x400
;;;206    								M_IN2_HIGH;
000216  f44f6b00          MOV      r11,#0x800
00021a  3d1c              SUBS     r5,r5,#0x1c           ;201
00021c  e05d              B        |L1.730|
                  |L1.542|
00021e  2001              MOVS     r0,#1                 ;201
000220  7168              STRB     r0,[r5,#5]            ;201
000222  6ae9              LDR      r1,[r5,#0x2c]         ;202  ; step_state
000224  2908              CMP      r1,#8                 ;202
000226  d246              BCS      |L1.694|
000228  e8dff001          TBB      [pc,r1]               ;202
00022c  04091015          DCB      0x04,0x09,0x10,0x15
000230  2630393c          DCB      0x26,0x30,0x39,0x3c
000234  f8c4a014          STR      r10,[r4,#0x14]        ;205
000238  f8c4b010          STR      r11,[r4,#0x10]
;;;207    								M_IN3_HIGH;
;;;208    								M_IN4_HIGH;
;;;209    								break;
00023c  e002              B        |L1.580|
;;;210    				case 1:
;;;211    								M_IN1_LOW;
00023e  f8c4a014          STR      r10,[r4,#0x14]
;;;212    								M_IN2_LOW;
;;;213    								M_IN3_HIGH;
;;;214    								M_IN4_HIGH;
;;;215    								break;
000242  e005              B        |L1.592|
                  |L1.580|
000244  4a7c              LDR      r2,|L1.1080|
000246  e027              B        |L1.664|
                  |L1.584|
000248  6010              STR      r0,[r2,#0]            ;208
00024a  e00e              B        |L1.618|
;;;216    				case 2:
;;;217    								M_IN1_HIGH;
00024c  f8c4a010          STR      r10,[r4,#0x10]
                  |L1.592|
;;;218    								M_IN2_LOW;
000250  f8c4b014          STR      r11,[r4,#0x14]
000254  e7f6              B        |L1.580|
;;;219    								M_IN3_HIGH;
;;;220    								M_IN4_HIGH;
;;;221    								break;
;;;222    				case 3:
;;;223    								M_IN1_HIGH;
000256  f8c4a010          STR      r10,[r4,#0x10]
;;;224    								M_IN2_LOW;
00025a  f8c4b014          STR      r11,[r4,#0x14]
;;;225    								M_IN3_LOW;
00025e  4a76              LDR      r2,|L1.1080|
000260  1d12              ADDS     r2,r2,#4
000262  6010              STR      r0,[r2,#0]
;;;226    								M_IN4_HIGH;
000264  4874              LDR      r0,|L1.1080|
000266  2210              MOVS     r2,#0x10
000268  6002              STR      r2,[r0,#0]
                  |L1.618|
;;;227    								break;
;;;228    				case 4:
;;;229    								M_IN1_HIGH;
;;;230    								M_IN2_HIGH;
;;;231    								M_IN3_LOW;
;;;232    								M_IN4_HIGH;
;;;233    								break;
;;;234    				case 5:
;;;235    								M_IN1_HIGH;
;;;236    								M_IN2_HIGH;
;;;237    								M_IN3_LOW;
;;;238    								M_IN4_LOW;
;;;239    								break;
;;;240    				case 6:
;;;241    								M_IN1_HIGH;
;;;242    								M_IN2_HIGH;
;;;243    								M_IN3_HIGH;
;;;244    								M_IN4_LOW;
;;;245    								break;
;;;246    				case 7:
;;;247    								M_IN1_LOW;
;;;248    								M_IN2_HIGH;
;;;249    								M_IN3_HIGH;
;;;250    								M_IN4_LOW;
;;;251    								break;
;;;252    				default:
;;;253    					      M_IN1_LOW;
;;;254    								M_IN2_LOW;
;;;255    								M_IN3_LOW;
;;;256    								M_IN4_LOW;
;;;257    				        break;
;;;258    		}
;;;259    		if(direct==0)
00026a  9801              LDR      r0,[sp,#4]
00026c  b340              CBZ      r0,|L1.704|
;;;260    		{
;;;261    			step_state ++;
;;;262    			if(step_state>=8)
;;;263    			{
;;;264    				step_state = 0;
;;;265          }
;;;266        }
;;;267    		else
;;;268    		{
;;;269    			if(step_state>0)
00026e  2900              CMP      r1,#0
000270  dd2c              BLE      |L1.716|
000272  1e49              SUBS     r1,r1,#1
;;;270    			{
;;;271    			  step_state--;
000274  62e9              STR      r1,[r5,#0x2c]  ; step_state
000276  e02b              B        |L1.720|
000278  f8c4a010          STR      r10,[r4,#0x10]        ;229
00027c  f8c4b010          STR      r11,[r4,#0x10]        ;230
000280  4a6d              LDR      r2,|L1.1080|
000282  1d12              ADDS     r2,r2,#4              ;231
000284  6010              STR      r0,[r2,#0]            ;231
000286  2010              MOVS     r0,#0x10              ;232
000288  1f12              SUBS     r2,r2,#4              ;232
00028a  e7dd              B        |L1.584|
00028c  f8c4a010          STR      r10,[r4,#0x10]        ;235
000290  f8c4b010          STR      r11,[r4,#0x10]        ;236
                  |L1.660|
000294  4a68              LDR      r2,|L1.1080|
000296  1d12              ADDS     r2,r2,#4              ;255
                  |L1.664|
000298  6010              STR      r0,[r2,#0]            ;255
00029a  2010              MOVS     r0,#0x10              ;256
00029c  e7d4              B        |L1.584|
00029e  f8c4a010          STR      r10,[r4,#0x10]        ;241
0002a2  e001              B        |L1.680|
0002a4  f8c4a014          STR      r10,[r4,#0x14]        ;247
                  |L1.680|
0002a8  f8c4b010          STR      r11,[r4,#0x10]        ;248
0002ac  4a62              LDR      r2,|L1.1080|
0002ae  6010              STR      r0,[r2,#0]            ;249
0002b0  2010              MOVS     r0,#0x10              ;250
0002b2  1d12              ADDS     r2,r2,#4              ;250
0002b4  e7c8              B        |L1.584|
                  |L1.694|
0002b6  f8c4a014          STR      r10,[r4,#0x14]        ;253
0002ba  f8c4b014          STR      r11,[r4,#0x14]        ;254
0002be  e7e9              B        |L1.660|
                  |L1.704|
0002c0  1c49              ADDS     r1,r1,#1              ;257
0002c2  62e9              STR      r1,[r5,#0x2c]         ;262  ; step_state
0002c4  2908              CMP      r1,#8                 ;262
0002c6  db03              BLT      |L1.720|
0002c8  2000              MOVS     r0,#0                 ;264
0002ca  e000              B        |L1.718|
                  |L1.716|
;;;272    			}
;;;273    			else
;;;274    			{
;;;275    				step_state = 7;
0002cc  2007              MOVS     r0,#7
                  |L1.718|
0002ce  62e8              STR      r0,[r5,#0x2c]  ; step_state
                  |L1.720|
;;;276          }
;;;277    			
;;;278        }
;;;279    		i++;
;;;280    		//delay_us_motor(50);
;;;281    		delay_us(5000);
0002d0  f2413088          MOV      r0,#0x1388
0002d4  1c76              ADDS     r6,r6,#1
0002d6  f7fffffe          BL       delay_us
                  |L1.730|
0002da  42be              CMP      r6,r7                 ;199
0002dc  d39f              BCC      |L1.542|
;;;282    	}
;;;283    	step_motor_moving_flag = 0;
0002de  2000              MOVS     r0,#0
0002e0  7168              STRB     r0,[r5,#5]
;;;284    	M_EN1_DISABLE;
0002e2  f8c48014          STR      r8,[r4,#0x14]
;;;285    	M_EN2_DISABLE;
0002e6  4953              LDR      r1,|L1.1076|
0002e8  3108              ADDS     r1,r1,#8
0002ea  f8c19000          STR      r9,[r1,#0]
;;;286    }
0002ee  e8bd9ffc          POP      {r2-r12,pc}
;;;287    
                          ENDP

                  start_motor PROC
;;;288    void start_motor(void)
0002f2  b510              PUSH     {r4,lr}
;;;289    {
;;;290    	 bsp_StartTimer(2,3000);//led start question
0002f4  f64031b8          MOV      r1,#0xbb8
0002f8  2002              MOVS     r0,#2
0002fa  f7fffffe          BL       bsp_StartTimer
;;;291    	 TIM3->CCR2 = 12;//48;
0002fe  494f              LDR      r1,|L1.1084|
000300  200c              MOVS     r0,#0xc
000302  8008              STRH     r0,[r1,#0]
                  |L1.772|
;;;292    	 while(bsp_CheckTimer(2)==0);	 
000304  2002              MOVS     r0,#2
000306  f7fffffe          BL       bsp_CheckTimer
00030a  2800              CMP      r0,#0
00030c  d0fa              BEQ      |L1.772|
;;;293    }
00030e  bd10              POP      {r4,pc}
;;;294    
                          ENDP

                  step_motor_init PROC
;;;295    void step_motor_init(void)
000310  e92d5ff0          PUSH     {r4-r12,lr}
;;;296    {
;;;297    	static int step_state_init = 0;
;;;298    	M_EN1_EN;
000314  4c46              LDR      r4,|L1.1072|
000316  f44f5680          MOV      r6,#0x1000
00031a  6126              STR      r6,[r4,#0x10]
;;;299    	M_EN2_EN;
00031c  4845              LDR      r0,|L1.1076|
00031e  2704              MOVS     r7,#4
000320  1d00              ADDS     r0,r0,#4
000322  6007              STR      r7,[r0,#0]
;;;300    	while((GPIOA->IDR & GPIO_Pin_5)!=0)
;;;301    	{
;;;302    		switch(step_state_init)
000324  4d3d              LDR      r5,|L1.1052|
000326  f8df8110          LDR      r8,|L1.1080|
00032a  f04f0901          MOV      r9,#1
;;;303    		{
;;;304    				case 0:
;;;305    								M_IN1_LOW;
00032e  f44f6a80          MOV      r10,#0x400
;;;306    								M_IN2_HIGH;
000332  f44f6b00          MOV      r11,#0x800
000336  3d1c              SUBS     r5,r5,#0x1c           ;302
000338  f1a80808          SUB      r8,r8,#8              ;300
00033c  e05e              B        |L1.1020|
                  |L1.830|
00033e  6b28              LDR      r0,[r5,#0x30]         ;302  ; step_state_init
000340  2808              CMP      r0,#8                 ;302
000342  d247              BCS      |L1.980|
000344  e8dff000          TBB      [pc,r0]               ;302
000348  040e111b          DCB      0x04,0x0e,0x11,0x1b
00034c  2430383b          DCB      0x24,0x30,0x38,0x3b
000350  f8c4a014          STR      r10,[r4,#0x14]        ;305
000354  f8c4b010          STR      r11,[r4,#0x10]
;;;307    								M_IN3_HIGH;
000358  4837              LDR      r0,|L1.1080|
00035a  f8c09000          STR      r9,[r0,#0]
;;;308    								M_IN4_HIGH;
00035e  2110              MOVS     r1,#0x10
000360  6001              STR      r1,[r0,#0]
;;;309    								break;
000362  e045              B        |L1.1008|
;;;310    				case 1:
;;;311    								M_IN1_LOW;
000364  f8c4a014          STR      r10,[r4,#0x14]
;;;312    								M_IN2_LOW;
;;;313    								M_IN3_HIGH;
;;;314    								M_IN4_HIGH;
;;;315    								break;
000368  e001              B        |L1.878|
;;;316    				case 2:
;;;317    								M_IN1_HIGH;
00036a  f8c4a010          STR      r10,[r4,#0x10]
                  |L1.878|
00036e  f8c4b014          STR      r11,[r4,#0x14]        ;312
000372  4931              LDR      r1,|L1.1080|
000374  464a              MOV      r2,r9                 ;313
                  |L1.886|
000376  600a              STR      r2,[r1,#0]            ;313
000378  2210              MOVS     r2,#0x10              ;314
00037a  600a              STR      r2,[r1,#0]            ;314
00037c  e036              B        |L1.1004|
;;;318    								M_IN2_LOW;
;;;319    								M_IN3_HIGH;
;;;320    								M_IN4_HIGH;
;;;321    								break;
;;;322    				case 3:
;;;323    								M_IN1_HIGH;
00037e  f8c4a010          STR      r10,[r4,#0x10]
;;;324    								M_IN2_LOW;
000382  f8c4b014          STR      r11,[r4,#0x14]
;;;325    								M_IN3_LOW;
000386  4a2c              LDR      r2,|L1.1080|
000388  1d12              ADDS     r2,r2,#4
00038a  f8c29000          STR      r9,[r2,#0]
;;;326    								M_IN4_HIGH;
;;;327    								break;
00038e  e007              B        |L1.928|
;;;328    				case 4:
;;;329    								M_IN1_HIGH;
000390  f8c4a010          STR      r10,[r4,#0x10]
;;;330    								M_IN2_HIGH;
000394  f8c4b010          STR      r11,[r4,#0x10]
;;;331    								M_IN3_LOW;
000398  4927              LDR      r1,|L1.1080|
00039a  1d09              ADDS     r1,r1,#4
00039c  f8c19000          STR      r9,[r1,#0]
                  |L1.928|
0003a0  4a25              LDR      r2,|L1.1080|
0003a2  2110              MOVS     r1,#0x10              ;326
                  |L1.932|
0003a4  6011              STR      r1,[r2,#0]            ;326
0003a6  e021              B        |L1.1004|
;;;332    								M_IN4_HIGH;
;;;333    								break;
;;;334    				case 5:
;;;335    								M_IN1_HIGH;
0003a8  f8c4a010          STR      r10,[r4,#0x10]
;;;336    								M_IN2_HIGH;
0003ac  f8c4b010          STR      r11,[r4,#0x10]
;;;337    								M_IN3_LOW;
0003b0  4921              LDR      r1,|L1.1080|
0003b2  464a              MOV      r2,r9
0003b4  1d09              ADDS     r1,r1,#4
;;;338    								M_IN4_LOW;
;;;339    								break;
0003b6  e7de              B        |L1.886|
;;;340    				case 6:
;;;341    								M_IN1_HIGH;
0003b8  f8c4a010          STR      r10,[r4,#0x10]
;;;342    								M_IN2_HIGH;
;;;343    								M_IN3_HIGH;
;;;344    								M_IN4_LOW;
;;;345    								break;
0003bc  e001              B        |L1.962|
;;;346    				case 7:
;;;347    								M_IN1_LOW;
0003be  f8c4a014          STR      r10,[r4,#0x14]
                  |L1.962|
;;;348    								M_IN2_HIGH;
0003c2  f8c4b010          STR      r11,[r4,#0x10]
;;;349    								M_IN3_HIGH;
0003c6  491c              LDR      r1,|L1.1080|
0003c8  f8c19000          STR      r9,[r1,#0]
;;;350    								M_IN4_LOW;
0003cc  4a1a              LDR      r2,|L1.1080|
0003ce  2110              MOVS     r1,#0x10
0003d0  1d12              ADDS     r2,r2,#4
0003d2  e7e7              B        |L1.932|
                  |L1.980|
;;;351    								break;
;;;352    				default:
;;;353    					      M_IN1_LOW;
0003d4  f8c4a014          STR      r10,[r4,#0x14]
;;;354    								M_IN2_LOW;
0003d8  f8c4b014          STR      r11,[r4,#0x14]
;;;355    								M_IN3_LOW;
0003dc  4916              LDR      r1,|L1.1080|
0003de  1d09              ADDS     r1,r1,#4
0003e0  f8c19000          STR      r9,[r1,#0]
;;;356    								M_IN4_LOW;
0003e4  2210              MOVS     r2,#0x10
0003e6  600a              STR      r2,[r1,#0]
;;;357    				        break;
;;;358    		}
;;;359    		if(step_state_init>0)
0003e8  2800              CMP      r0,#0
0003ea  dd01              BLE      |L1.1008|
                  |L1.1004|
0003ec  1e40              SUBS     r0,r0,#1              ;357
;;;360    		{
;;;361    			step_state_init--;
0003ee  e000              B        |L1.1010|
                  |L1.1008|
;;;362    		}
;;;363    		else
;;;364    		{
;;;365    			step_state_init = 7;
0003f0  2007              MOVS     r0,#7
                  |L1.1010|
;;;366    		}
;;;367    		delay_us(5000);
0003f2  6328              STR      r0,[r5,#0x30]  ; step_state_init
0003f4  f2413088          MOV      r0,#0x1388
0003f8  f7fffffe          BL       delay_us
                  |L1.1020|
0003fc  f8d80000          LDR      r0,[r8,#0]            ;300
000400  0680              LSLS     r0,r0,#26             ;300
000402  d49c              BMI      |L1.830|
;;;368    	}
;;;369    	step_motor_position = 0;
000404  2000              MOVS     r0,#0
000406  7128              STRB     r0,[r5,#4]
;;;370    	M_EN1_DISABLE;
000408  6166              STR      r6,[r4,#0x14]
;;;371    	M_EN2_DISABLE;
00040a  480a              LDR      r0,|L1.1076|
00040c  3008              ADDS     r0,r0,#8
00040e  6007              STR      r7,[r0,#0]
;;;372    }
000410  e8bd9ff0          POP      {r4-r12,pc}
                  |L1.1044|
                          DCD      0x40010c10
                  |L1.1048|
                          DCD      PM25DMABuffer
                  |L1.1052|
                          DCD      ||.data||+0x1c
                  |L1.1056|
                          DCD      0x00989680
                  |L1.1060|
                          DCD      ||.bss||
                  |L1.1064|
                          DCD      0x000f4240
                  |L1.1068|
                          DCD      0x000186a0
                  |L1.1072|
                          DCD      0x40011000
                  |L1.1076|
                          DCD      0x4001140c
                  |L1.1080|
                          DCD      0x40010810
                  |L1.1084|
                          DCD      0x40000438
                          ENDP

                  step_motor_out PROC
;;;373    void step_motor_out(void)
000440  b510              PUSH     {r4,lr}
;;;374    {
;;;375    	
;;;376    	switch(step_motor_position)
000442  4cfb              LDR      r4,|L1.2096|
000444  7920              LDRB     r0,[r4,#4]  ; step_motor_position
000446  b110              CBZ      r0,|L1.1102|
000448  2801              CMP      r0,#1
00044a  d109              BNE      |L1.1120|
00044c  e003              B        |L1.1110|
                  |L1.1102|
;;;377    	{
;;;378    			case 0:
;;;379    				     motor_step_move(1700,0);
00044e  2100              MOVS     r1,#0
000450  f24060a4          MOV      r0,#0x6a4
;;;380    						 break;
000454  e002              B        |L1.1116|
                  |L1.1110|
;;;381    			case 1:
;;;382    				     motor_step_move(1400,0);
000456  2100              MOVS     r1,#0
000458  f44f60af          MOV      r0,#0x578
                  |L1.1116|
00045c  f7fffffe          BL       motor_step_move
                  |L1.1120|
;;;383    						 break;
;;;384    			case 2:
;;;385    				     
;;;386    						 break;
;;;387    			case 3:
;;;388    				     
;;;389    						 break;
;;;390    			default:
;;;391    						 break;
;;;392      }
;;;393    	step_motor_position = 2;
000460  2002              MOVS     r0,#2
000462  7120              STRB     r0,[r4,#4]
;;;394    }
000464  bd10              POP      {r4,pc}
;;;395    void step_motor_in(void)
                          ENDP

                  step_motor_in PROC
000466  b510              PUSH     {r4,lr}
;;;396    {
;;;397    	switch(step_motor_position)
000468  4cf1              LDR      r4,|L1.2096|
00046a  7920              LDRB     r0,[r4,#4]  ; step_motor_position
00046c  b120              CBZ      r0,|L1.1144|
00046e  2801              CMP      r0,#1
000470  d00b              BEQ      |L1.1162|
000472  2802              CMP      r0,#2
000474  d109              BNE      |L1.1162|
000476  e003              B        |L1.1152|
                  |L1.1144|
;;;398    	{
;;;399    			case 0:
;;;400    				     motor_step_move(300,0);
000478  2100              MOVS     r1,#0
00047a  f44f7096          MOV      r0,#0x12c
;;;401    						 break;
00047e  e002              B        |L1.1158|
                  |L1.1152|
;;;402    			case 1:
;;;403    				     
;;;404    						 break;
;;;405    			case 2:
;;;406    				     motor_step_move(1400,1);
000480  2101              MOVS     r1,#1
000482  f44f60af          MOV      r0,#0x578
                  |L1.1158|
000486  f7fffffe          BL       motor_step_move
                  |L1.1162|
;;;407    						 break;
;;;408    			case 3:
;;;409    						 break;
;;;410    			default:
;;;411    						 break;			
;;;412      }
;;;413    	step_motor_position = 1;
00048a  2001              MOVS     r0,#1
00048c  7120              STRB     r0,[r4,#4]
;;;414    }
00048e  bd10              POP      {r4,pc}
;;;415    // void step_motor_out(void)
                          ENDP

                  get_co2_value PROC
;;;475    // }
;;;476    void get_co2_value(void)
000490  4ae7              LDR      r2,|L1.2096|
;;;477    {
;;;478    	char i;
;;;479    	for(i=0;i<9;i++)
;;;480    	{ 
;;;481    		while((USART1->SR&0X40)==0);
000492  49e8              LDR      r1,|L1.2100|
000494  b510              PUSH     {r4,lr}               ;477
000496  2000              MOVS     r0,#0                 ;479
;;;482    		USART1->DR = get_CO2_CMD[i];
000498  3246              ADDS     r2,r2,#0x46
00049a  1d0b              ADDS     r3,r1,#4
                  |L1.1180|
00049c  880c              LDRH     r4,[r1,#0]            ;481
00049e  0664              LSLS     r4,r4,#25             ;481
0004a0  d5fc              BPL      |L1.1180|
0004a2  5c14              LDRB     r4,[r2,r0]
0004a4  801c              STRH     r4,[r3,#0]
0004a6  1c40              ADDS     r0,r0,#1
0004a8  b2c0              UXTB     r0,r0                 ;479
0004aa  2809              CMP      r0,#9                 ;479
0004ac  d3f6              BCC      |L1.1180|
;;;483      }
;;;484    }
0004ae  bd10              POP      {r4,pc}
;;;485    
                          ENDP

                  power_off PROC
;;;492      static char start_delay_30_flag = 0;
;;;493    void power_off(void)
0004b0  b570              PUSH     {r4-r6,lr}
;;;494    {
;;;495    	bsp_LedOff(1);
0004b2  2001              MOVS     r0,#1
0004b4  f7fffffe          BL       bsp_LedOff
;;;496    	bsp_LedOff(2);
0004b8  2002              MOVS     r0,#2
0004ba  f7fffffe          BL       bsp_LedOff
;;;497    	bsp_LedOff(3);
0004be  2003              MOVS     r0,#3
0004c0  f7fffffe          BL       bsp_LedOff
;;;498    	bsp_LedOff(4);
0004c4  2004              MOVS     r0,#4
0004c6  f7fffffe          BL       bsp_LedOff
;;;499    	bsp_LedOff(5);
0004ca  2005              MOVS     r0,#5
0004cc  f7fffffe          BL       bsp_LedOff
;;;500    	bsp_LedOff(6);
0004d0  2006              MOVS     r0,#6
0004d2  f7fffffe          BL       bsp_LedOff
;;;501    	bsp_LedOff(7);
0004d6  2007              MOVS     r0,#7
0004d8  f7fffffe          BL       bsp_LedOff
;;;502    	bsp_LedOff(8);
0004dc  2008              MOVS     r0,#8
0004de  f7fffffe          BL       bsp_LedOff
;;;503    	
;;;504    	flag_CO_PW = 0;
0004e2  4dd3              LDR      r5,|L1.2096|
0004e4  2400              MOVS     r4,#0
;;;505    	flag_PM_PW = 0;
;;;506    	CO2_PW_DISABLE;
0004e6  49d4              LDR      r1,|L1.2104|
0004e8  706c              STRB     r4,[r5,#1]            ;504
0004ea  702c              STRB     r4,[r5,#0]            ;505
0004ec  f44f4000          MOV      r0,#0x8000
0004f0  6008              STR      r0,[r1,#0]
;;;507    	TIM3->CCR2 = 0;
0004f2  48d2              LDR      r0,|L1.2108|
0004f4  8004              STRH     r4,[r0,#0]
;;;508    	DC_MOTOR_DISABLE;
0004f6  49d1              LDR      r1,|L1.2108|
0004f8  1400              ASRS     r0,r0,#16
0004fa  3920              SUBS     r1,r1,#0x20
0004fc  8008              STRH     r0,[r1,#0]
0004fe  48cf              LDR      r0,|L1.2108|
000500  4621              MOV      r1,r4
000502  3838              SUBS     r0,r0,#0x38
000504  f7fffffe          BL       TIM_Cmd
;;;509    //	clear_screen();
;;;510    	Clear_LCD();
000508  f7fffffe          BL       Clear_LCD
;;;511    	clear_PM_rec();
00050c  f7fffffe          BL       clear_PM_rec
;;;512    	flag_getCO2_value = 0;
000510  48cb              LDR      r0,|L1.2112|
000512  7004              STRB     r4,[r0,#0]
;;;513    	flag_getPM_value = 0;
000514  48cb              LDR      r0,|L1.2116|
000516  7004              STRB     r4,[r0,#0]
;;;514    
;;;515    	timing_count = 0;
;;;516    	timing_flag = 0;
000518  622c              STR      r4,[r5,#0x20]  ; timing_count
00051a  71ec              STRB     r4,[r5,#7]
;;;517    	timing_time_min_value = 0;
;;;518    	bsp_StopTimer(0);
00051c  2000              MOVS     r0,#0
00051e  626c              STR      r4,[r5,#0x24]  ; timing_time_min_value
000520  f7fffffe          BL       bsp_StopTimer
;;;519    	bsp_StopTimer(1);
000524  2001              MOVS     r0,#1
000526  f7fffffe          BL       bsp_StopTimer
;;;520    	
;;;521    	work_0_1_mode_state = 0;
00052a  72ac              STRB     r4,[r5,#0xa]
;;;522    	mode_time_switch_flag = 0;
00052c  726c              STRB     r4,[r5,#9]
;;;523    	mode_time_count =0;	
;;;524    	work_mode = 0;
00052e  62ac              STR      r4,[r5,#0x28]  ; mode_time_count
000530  72ec              STRB     r4,[r5,#0xb]
;;;525    	all_power_state = 0;
000532  736c              STRB     r4,[r5,#0xd]
;;;526    	//display_chang_face_flag = 0;
;;;527    	co2_pollute_flag = 0;
000534  73ec              STRB     r4,[r5,#0xf]
;;;528    	PM2_5_pollute_flag = 0 ;
;;;529    	power_on_init_time_flag = 0;
;;;530    	
;;;531    	ANION_DISABLE;
000536  49c4              LDR      r1,|L1.2120|
000538  742c              STRB     r4,[r5,#0x10]         ;528
00053a  746c              STRB     r4,[r5,#0x11]         ;529
00053c  f44f7080          MOV      r0,#0x100
000540  6148              STR      r0,[r1,#0x14]
;;;532    	anion_PW_state = 0;
;;;533    	pollute_flag_last = 0;
;;;534    	LCD_buffer[7] &= 0x07;//display_graphic_tree_clear();
000542  48c2              LDR      r0,|L1.2124|
000544  722c              STRB     r4,[r5,#8]            ;532
000546  74ac              STRB     r4,[r5,#0x12]         ;533
000548  79c1              LDRB     r1,[r0,#7]  ; LCD_buffer
00054a  f0010107          AND      r1,r1,#7
00054e  71c1              STRB     r1,[r0,#7]
;;;535    	start_delay_30_flag = 0;
000550  74ec              STRB     r4,[r5,#0x13]
;;;536    	last_recycle_shut_flag = 0;
000552  71ac              STRB     r4,[r5,#6]
;;;537    }
000554  bd70              POP      {r4-r6,pc}
;;;538    
                          ENDP

                  main PROC
;;;542    
;;;543    int main(void)
000556  b086              SUB      sp,sp,#0x18
;;;544    {
;;;545    	
;;;546      static char dc_motor_speed_count = 0,air_dir_recycle_count=0,timing_state = 0;
;;;547    	static char last_dc_motor_speed_count = 0;
;;;548    	static char led_off_flag = 0;
;;;549    	RCC_ClocksTypeDef check_clock;
;;;550      uint8_t ucKeyCode;
;;;551    	char co2_crc_value = 0;
;;;552    	char co2_decode_count;
;;;553      sys();
000558  f7fffffe          BL       ||sys||
;;;554    	bsp_Init();
00055c  f7fffffe          BL       bsp_Init
;;;555    
;;;556    	bsp_InitIRD();		/* 配置GPIO  */
000560  f7fffffe          BL       bsp_InitIRD
;;;557      GPIO_Configuration();
000564  f7fffffe          BL       GPIO_Configuration
;;;558    	
;;;559    	CO2_CALIB_DISABLE;
000568  48b9              LDR      r0,|L1.2128|
00056a  f44f4580          MOV      r5,#0x4000
00056e  6005              STR      r5,[r0,#0]
;;;560      ANION_DISABLE;
000570  f8df82d4          LDR      r8,|L1.2120|
000574  f44f7980          MOV      r9,#0x100
000578  4646              MOV      r6,r8
00057a  f8c89014          STR      r9,[r8,#0x14]
;;;561    	LCD_buffer[7] &= 0x07;//display_graphic_tree_clear();
00057e  4cb3              LDR      r4,|L1.2124|
;;;562    	
;;;563    	PM_RST_DISABLE;
000580  2140              MOVS     r1,#0x40
000582  79e0              LDRB     r0,[r4,#7]            ;561  ; LCD_buffer
000584  f0000007          AND      r0,r0,#7              ;561
000588  71e0              STRB     r0,[r4,#7]            ;561
00058a  48ab              LDR      r0,|L1.2104|
00058c  1f00              SUBS     r0,r0,#4
00058e  6001              STR      r1,[r0,#0]
;;;564    	PM_PW_DISABLE;
000590  1487              ASRS     r7,r0,#18
000592  1d00              ADDS     r0,r0,#4
000594  6007              STR      r7,[r0,#0]
;;;565    	CO2_PW_DISABLE;
000596  f44f4b00          MOV      r11,#0x8000
00059a  f8c0b000          STR      r11,[r0,#0]
;;;566    	DMA_ITConfig(DMA1_Channel6, DMA_IT_TC, DISABLE); 
00059e  2200              MOVS     r2,#0
0005a0  2102              MOVS     r1,#2
0005a2  48ac              LDR      r0,|L1.2132|
0005a4  f7fffffe          BL       DMA_ITConfig
;;;567    	//PM_PW_EN;
;;;568      TIM2_Configuration();
0005a8  f7fffffe          BL       TIM2_Configuration
;;;569    	USART_InitFun();
0005ac  f7fffffe          BL       USART_InitFun
;;;570    	NVIC_Configuration();
0005b0  f7fffffe          BL       NVIC_Configuration
;;;571    	IRD_StartWork();
0005b4  f7fffffe          BL       IRD_StartWork
;;;572    	RCC_GetClocksFreq(&check_clock);
0005b8  4668              MOV      r0,sp
0005ba  f7fffffe          BL       RCC_GetClocksFreq
;;;573    	bsp_InitLed();
0005be  f7fffffe          BL       bsp_InitLed
;;;574    	//iic_init();
;;;575    
;;;576    	TIM3_Configuration();
0005c2  f7fffffe          BL       TIM3_Configuration
;;;577    	DC_MOTOR_DISABLE;
0005c6  f8dfa274          LDR      r10,|L1.2108|
0005ca  f1aa0a20          SUB      r10,r10,#0x20
0005ce  f8aa5000          STRH     r5,[r10,#0]
0005d2  489a              LDR      r0,|L1.2108|
0005d4  2100              MOVS     r1,#0
0005d6  3838              SUBS     r0,r0,#0x38
0005d8  f7fffffe          BL       TIM_Cmd
;;;578    //	motor_step_move(20000,0);
;;;579      Ht1621_Init();
0005dc  f7fffffe          BL       Ht1621_Init
;;;580      M_EN1_DISABLE;
0005e0  6177              STR      r7,[r6,#0x14]
;;;581    	M_EN2_DISABLE;
0005e2  489d              LDR      r0,|L1.2136|
0005e4  2704              MOVS     r7,#4
0005e6  6007              STR      r7,[r0,#0]
;;;582    	clear_PM_rec();
0005e8  f7fffffe          BL       clear_PM_rec
;;;583    	//display_graphic_33x64(display_S);
;;;584    	if((GPIOA->IDR & GPIO_Pin_5)!=0)	
0005ec  4892              LDR      r0,|L1.2104|
0005ee  380c              SUBS     r0,r0,#0xc
0005f0  6800              LDR      r0,[r0,#0]
0005f2  0680              LSLS     r0,r0,#26
0005f4  d501              BPL      |L1.1530|
;;;585    	{
;;;586    		step_motor_init();//20161110 need del
0005f6  f7fffffe          BL       step_motor_init
                  |L1.1530|
0005fa  2600              MOVS     r6,#0
                  |L1.1532|
;;;587    	}	
;;;588    	while (1)
;;;589    	{
;;;590    		bsp_Idle();		/* 空闲时执行的函数,比如喂狗. 在bsp.c中 */
0005fc  f7fffffe          BL       bsp_Idle
;;;591    		
;;;592    		if(all_power_state==1)
000600  4d8b              LDR      r5,|L1.2096|
000602  7b68              LDRB     r0,[r5,#0xd]  ; all_power_state
000604  2801              CMP      r0,#1
000606  d172              BNE      |L1.1774|
;;;593    		{
;;;594    			
;;;595    							if(bsp_CheckTimer(3)==1)
000608  2003              MOVS     r0,#3
00060a  f7fffffe          BL       bsp_CheckTimer
00060e  2801              CMP      r0,#1
000610  d100              BNE      |L1.1556|
;;;596    							{
;;;597    								start_delay_30_flag = 1;
000612  74e8              STRB     r0,[r5,#0x13]
                  |L1.1556|
;;;598    							}
;;;599    			
;;;600    							if(flag_getCO2_value==1&&shut_off_all_sensor==0&&start_delay_30_flag==1)
000614  488a              LDR      r0,|L1.2112|
000616  7800              LDRB     r0,[r0,#0]  ; flag_getCO2_value
000618  2801              CMP      r0,#1
00061a  d13c              BNE      |L1.1686|
00061c  78a8              LDRB     r0,[r5,#2]  ; shut_off_all_sensor
00061e  bb88              CBNZ     r0,|L1.1668|
000620  7ce8              LDRB     r0,[r5,#0x13]  ; start_delay_30_flag
000622  2801              CMP      r0,#1
000624  d137              BNE      |L1.1686|
;;;601    							{
;;;602                       // co2_crc_value = getCheckSum(&usart_CO2_rec_temp[1]);
;;;603    								    
;;;604    										if(0x86==usart_CO2_rec_temp[1]&&0xFF==usart_CO2_rec_temp[0])
000626  498d              LDR      r1,|L1.2140|
000628  7848              LDRB     r0,[r1,#1]  ; usart_CO2_rec_temp
00062a  2886              CMP      r0,#0x86
00062c  d102              BNE      |L1.1588|
00062e  7808              LDRB     r0,[r1,#0]  ; usart_CO2_rec_temp
000630  28ff              CMP      r0,#0xff
000632  d008              BEQ      |L1.1606|
                  |L1.1588|
;;;605    										{
;;;606    													Co2_value.Buf8[0] = usart_CO2_rec_temp[3];
;;;607    													Co2_value.Buf8[1] = usart_CO2_rec_temp[2];
;;;608    
;;;609    													if(Co2_value.Buf16 > HIGH_CO2)
;;;610    													{
;;;611    														  if(led_off_flag==0)
;;;612    															{
;;;613    															  co2_Purple_Led();
;;;614    															}
;;;615    														  co2_pollute_flag = 1;
;;;616    														  LCD_buffer[7] &= 0x0E;//display_graphic_led_clear();
;;;617    														  LCD_buffer[7] |= 0x02;
;;;618    													}
;;;619    													else if(Co2_value.Buf16 > MID_CO2)	
;;;620    													{
;;;621    														  if(led_off_flag==0)
;;;622    															{
;;;623    															   co2_Red_Led();
;;;624    															}
;;;625    														  co2_pollute_flag = 1;
;;;626    														  LCD_buffer[7] &= 0x0E;//display_graphic_led_clear();
;;;627    														  LCD_buffer[7] |= 0x02;
;;;628    													}
;;;629    													else if(Co2_value.Buf16 > MID_LOW_CO2)
;;;630    													{
;;;631    														  if(led_off_flag==0)
;;;632    															{
;;;633    															   co2_Yellow_Led();
;;;634    															}
;;;635    														  LCD_buffer[7] &= 0x0D;//display_graphic_led_clear();
;;;636    														 // LCD_buffer[7] |= 0x01;
;;;637    													}
;;;638    													else 
;;;639    													{
;;;640    														  if(led_off_flag==0)
;;;641    															{
;;;642    															   co2_Green_Led();
;;;643    															}
;;;644    														  co2_pollute_flag = 0;
;;;645    														 
;;;646    														  LCD_buffer[7] &= 0x0D;//display_graphic_led_clear();
;;;647    														 // LCD_buffer[7] |= 0x01;
;;;648    													}
;;;649    										}
;;;650    										else
;;;651    										{
;;;652    											for(co2_decode_count = 0;co2_decode_count<11;co2_decode_count++)
000634  2000              MOVS     r0,#0
                  |L1.1590|
;;;653    											{
;;;654    												if(usart_CO2_rec_temp[co2_decode_count]==0xFF)
000636  5c0a              LDRB     r2,[r1,r0]
000638  2aff              CMP      r2,#0xff
00063a  d037              BEQ      |L1.1708|
00063c  1c40              ADDS     r0,r0,#1
00063e  b2c0              UXTB     r0,r0                 ;652
000640  280b              CMP      r0,#0xb               ;652
000642  d3f8              BCC      |L1.1590|
000644  e025              B        |L1.1682|
                  |L1.1606|
000646  487a              LDR      r0,|L1.2096|
000648  78ca              LDRB     r2,[r1,#3]            ;606  ; usart_CO2_rec_temp
00064a  301a              ADDS     r0,r0,#0x1a           ;606
00064c  7002              STRB     r2,[r0,#0]            ;606
00064e  7889              LDRB     r1,[r1,#2]            ;607  ; usart_CO2_rec_temp
000650  7041              STRB     r1,[r0,#1]            ;607
000652  8801              LDRH     r1,[r0,#0]            ;609  ; Co2_value
000654  f64012c4          MOV      r2,#0x9c4             ;609
000658  4291              CMP      r1,r2                 ;609
00065a  d838              BHI      |L1.1742|
00065c  8801              LDRH     r1,[r0,#0]            ;619  ; Co2_value
00065e  f5b16faf          CMP      r1,#0x578             ;619
000662  d83e              BHI      |L1.1762|
000664  8801              LDRH     r1,[r0,#0]            ;629  ; Co2_value
000666  f24020ee          MOV      r0,#0x2ee             ;629
00066a  4281              CMP      r1,r0                 ;629
00066c  d918              BLS      |L1.1696|
00066e  7e28              LDRB     r0,[r5,#0x18]         ;631  ; led_off_flag
000670  b148              CBZ      r0,|L1.1670|
000672  e00a              B        |L1.1674|
                  |L1.1652|
000674  2001              MOVS     r0,#1                 ;615
000676  73e8              STRB     r0,[r5,#0xf]          ;615
000678  79e0              LDRB     r0,[r4,#7]            ;616  ; LCD_buffer
00067a  f000000e          AND      r0,r0,#0xe            ;616
00067e  f0400002          ORR      r0,r0,#2              ;617
000682  e005              B        |L1.1680|
                  |L1.1668|
000684  e007              B        |L1.1686|
                  |L1.1670|
000686  f7fffffe          BL       co2_Yellow_Led
                  |L1.1674|
00068a  79e0              LDRB     r0,[r4,#7]            ;635  ; LCD_buffer
00068c  f000000d          AND      r0,r0,#0xd            ;635
                  |L1.1680|
;;;655    													break;
;;;656                          }
;;;657    											if(co2_decode_count<11&&usart_CO2_rec_temp[co2_decode_count]==0x86)
;;;658    											{
;;;659    												  Co2_value.Buf8[0] = usart_CO2_rec_temp[co2_decode_count+2];
;;;660    													Co2_value.Buf8[1] = usart_CO2_rec_temp[co2_decode_count+1];
;;;661    													if(Co2_value.Buf16 > HIGH_CO2)
;;;662    													{
;;;663    														  if(led_off_flag==0)
;;;664    															{
;;;665    															   co2_Purple_Led();
;;;666    															}
;;;667    														  co2_pollute_flag = 1;
;;;668    														  LCD_buffer[7] &= 0x0E;//display_graphic_led_clear();
;;;669    														  LCD_buffer[7] |= 0x02;
;;;670    													}
;;;671    													else if(Co2_value.Buf16 > MID_CO2)	
;;;672    													{
;;;673    														  if(led_off_flag==0)
;;;674    															{
;;;675    															  co2_Red_Led();
;;;676    															}
;;;677    														  co2_pollute_flag = 1;
;;;678    														  LCD_buffer[7] &= 0x0E;//display_graphic_led_clear();
;;;679    														  LCD_buffer[7] |= 0x02;
;;;680    													}
;;;681    													else if(Co2_value.Buf16 > MID_LOW_CO2)
;;;682    													{
;;;683    														  if(led_off_flag==0)
;;;684    															{
;;;685    															   co2_Yellow_Led();
;;;686    															}
;;;687    														  //LCD_buffer[7] &= 0x0D;//display_graphic_led_clear();
;;;688    														  //LCD_buffer[7] |= 0x01;
;;;689    													}
;;;690    													else 
;;;691    													{
;;;692    														  if(led_off_flag==0)
;;;693    															{
;;;694    															  co2_Green_Led();
;;;695    															}
;;;696    														  co2_pollute_flag = 0;
;;;697    														  LCD_buffer[7] &= 0x0D;//display_graphic_led_clear();
000690  71e0              STRB     r0,[r4,#7]
                  |L1.1682|
;;;698    														  //LCD_buffer[7] |= 0x01;
;;;699    													}
;;;700                          }
;;;701                        }
;;;702    								flag_getCO2_value = 0;		
000692  486b              LDR      r0,|L1.2112|
000694  7006              STRB     r6,[r0,#0]
                  |L1.1686|
;;;703    										
;;;704    							}
;;;705    // 							if(flag_getPM_value==0&&flag_PM_PW==1)
;;;706    // 							{
;;;707    // 								USART_Cmd(USART2,ENABLE);
;;;708    // 							}
;;;709    							
;;;710    							if(flag_getPM_value==1&&shut_off_all_sensor==0&&start_delay_30_flag==1)
000696  486b              LDR      r0,|L1.2116|
000698  7800              LDRB     r0,[r0,#0]  ; flag_getPM_value
00069a  2801              CMP      r0,#1
00069c  d033              BEQ      |L1.1798|
00069e  e06d              B        |L1.1916|
                  |L1.1696|
0006a0  7e28              LDRB     r0,[r5,#0x18]         ;640  ; led_off_flag
0006a2  b908              CBNZ     r0,|L1.1704|
0006a4  f7fffffe          BL       co2_Green_Led
                  |L1.1704|
0006a8  73ee              STRB     r6,[r5,#0xf]          ;696
0006aa  e7ee              B        |L1.1674|
                  |L1.1708|
0006ac  280b              CMP      r0,#0xb               ;657
0006ae  d2f0              BCS      |L1.1682|
0006b0  b2d2              UXTB     r2,r2                 ;657
0006b2  2a86              CMP      r2,#0x86              ;657
0006b4  d1ed              BNE      |L1.1682|
0006b6  4408              ADD      r0,r0,r1              ;659
0006b8  495d              LDR      r1,|L1.2096|
0006ba  7882              LDRB     r2,[r0,#2]            ;659
0006bc  311a              ADDS     r1,r1,#0x1a           ;659
0006be  700a              STRB     r2,[r1,#0]            ;659
0006c0  7840              LDRB     r0,[r0,#1]            ;660
0006c2  7048              STRB     r0,[r1,#1]            ;660
0006c4  8808              LDRH     r0,[r1,#0]            ;661  ; Co2_value
0006c6  f64012c4          MOV      r2,#0x9c4             ;661
0006ca  4290              CMP      r0,r2                 ;661
0006cc  d905              BLS      |L1.1754|
                  |L1.1742|
0006ce  7e28              LDRB     r0,[r5,#0x18]         ;663  ; led_off_flag
0006d0  2800              CMP      r0,#0                 ;663
0006d2  d1cf              BNE      |L1.1652|
0006d4  f7fffffe          BL       co2_Purple_Led
0006d8  e7cc              B        |L1.1652|
                  |L1.1754|
0006da  8808              LDRH     r0,[r1,#0]            ;671  ; Co2_value
0006dc  f5b06faf          CMP      r0,#0x578             ;671
0006e0  d906              BLS      |L1.1776|
                  |L1.1762|
0006e2  7e28              LDRB     r0,[r5,#0x18]         ;673  ; led_off_flag
0006e4  2800              CMP      r0,#0                 ;673
0006e6  d1c5              BNE      |L1.1652|
0006e8  f7fffffe          BL       co2_Red_Led
0006ec  e7c2              B        |L1.1652|
                  |L1.1774|
0006ee  e18b              B        |L1.2568|
                  |L1.1776|
0006f0  8809              LDRH     r1,[r1,#0]            ;681  ; Co2_value
0006f2  f24020ee          MOV      r0,#0x2ee             ;681
0006f6  4281              CMP      r1,r0                 ;681
0006f8  d9d2              BLS      |L1.1696|
0006fa  7e28              LDRB     r0,[r5,#0x18]         ;683  ; led_off_flag
0006fc  2800              CMP      r0,#0                 ;683
0006fe  d1c8              BNE      |L1.1682|
000700  f7fffffe          BL       co2_Yellow_Led
000704  e7c5              B        |L1.1682|
                  |L1.1798|
000706  78a8              LDRB     r0,[r5,#2]  ; shut_off_all_sensor
000708  bbc0              CBNZ     r0,|L1.1916|
00070a  7ce8              LDRB     r0,[r5,#0x13]  ; start_delay_30_flag
00070c  2801              CMP      r0,#1
00070e  d135              BNE      |L1.1916|
;;;711    							{
;;;712    										decode_PM_data();
000710  f7fffffe          BL       decode_PM_data
;;;713    
;;;714    										if(PM2_5_concentration.Buf16 > HIGH_PM2_5)
000714  4846              LDR      r0,|L1.2096|
000716  301c              ADDS     r0,r0,#0x1c
000718  8801              LDRH     r1,[r0,#0]  ; PM2_5_concentration
00071a  2996              CMP      r1,#0x96
00071c  d909              BLS      |L1.1842|
;;;715    										{
;;;716    											  if(led_off_flag==0)
00071e  7e28              LDRB     r0,[r5,#0x18]  ; led_off_flag
000720  b908              CBNZ     r0,|L1.1830|
;;;717    												{
;;;718    												  PM2_5_Purple_Led();
000722  f7fffffe          BL       PM2_5_Purple_Led
                  |L1.1830|
;;;719    												}
;;;720    											  PM2_5_pollute_flag = 1;
000726  2001              MOVS     r0,#1
000728  7428              STRB     r0,[r5,#0x10]
;;;721    											  LCD_buffer[7] &= 0x0E;//display_graphic_led_clear();
00072a  79e0              LDRB     r0,[r4,#7]  ; LCD_buffer
00072c  f000000e          AND      r0,r0,#0xe
;;;722    											  LCD_buffer[7] |= 0x04;
000730  e013              B        |L1.1882|
                  |L1.1842|
;;;723    										}
;;;724    										else if(PM2_5_concentration.Buf16 > MID_PM2_5)	
000732  8801              LDRH     r1,[r0,#0]  ; PM2_5_concentration
000734  2964              CMP      r1,#0x64
000736  d905              BLS      |L1.1860|
;;;725    										{
;;;726    											  if(led_off_flag==0)
000738  7e28              LDRB     r0,[r5,#0x18]  ; led_off_flag
00073a  2800              CMP      r0,#0
00073c  d1f3              BNE      |L1.1830|
;;;727    												{
;;;728    												   PM2_5_Red_Led();
00073e  f7fffffe          BL       PM2_5_Red_Led
000742  e7f0              B        |L1.1830|
                  |L1.1860|
;;;729    												}
;;;730    											  PM2_5_pollute_flag = 1;
;;;731    											  LCD_buffer[7] &= 0x0E;//display_graphic_led_clear();
;;;732    											  LCD_buffer[7] |= 0x04;
;;;733    										}
;;;734    										else if(PM2_5_concentration.Buf16 > MID_LOW_PM2_5)
000744  8800              LDRH     r0,[r0,#0]  ; PM2_5_concentration
000746  283c              CMP      r0,#0x3c
;;;735    										{
;;;736    											  if(led_off_flag==0)
;;;737    												{
;;;738    												  PM2_5_Yellow_Led();
;;;739    												}
;;;740    											  if(PM2_5_pollute_flag==1)
;;;741    												{
;;;742    													LCD_buffer[7] |= 0x04;
;;;743                            }
;;;744    											  //LCD_buffer[7] &= 0x0B;//display_graphic_led_clear();
;;;745    										}
;;;746    										else
;;;747    										{
;;;748    											  if(led_off_flag==0)
000748  7e28              LDRB     r0,[r5,#0x18]  ; led_off_flag
00074a  d909              BLS      |L1.1888|
00074c  b908              CBNZ     r0,|L1.1874|
00074e  f7fffffe          BL       PM2_5_Yellow_Led
                  |L1.1874|
000752  7c28              LDRB     r0,[r5,#0x10]         ;740  ; PM2_5_pollute_flag
000754  2801              CMP      r0,#1                 ;740
000756  d10d              BNE      |L1.1908|
000758  79e0              LDRB     r0,[r4,#7]            ;742  ; LCD_buffer
                  |L1.1882|
00075a  f0400004          ORR      r0,r0,#4              ;722
00075e  e008              B        |L1.1906|
                  |L1.1888|
000760  b908              CBNZ     r0,|L1.1894|
;;;749    												{
;;;750    												   PM2_5_Green_Led();
000762  f7fffffe          BL       PM2_5_Green_Led
                  |L1.1894|
;;;751    												}
;;;752    												if(last_recycle_shut_flag==0)
000766  79a8              LDRB     r0,[r5,#6]  ; last_recycle_shut_flag
000768  b920              CBNZ     r0,|L1.1908|
;;;753    												{
;;;754    													PM2_5_pollute_flag = 0;
00076a  742e              STRB     r6,[r5,#0x10]
;;;755    													LCD_buffer[7] &= 0x0B;
00076c  79e0              LDRB     r0,[r4,#7]  ; LCD_buffer
00076e  f000000b          AND      r0,r0,#0xb
                  |L1.1906|
000772  71e0              STRB     r0,[r4,#7]
                  |L1.1908|
;;;756    												}
;;;757    										}
;;;758    										clear_PM_rec();
000774  f7fffffe          BL       clear_PM_rec
;;;759    										flag_getPM_value = 0;
000778  4832              LDR      r0,|L1.2116|
00077a  7006              STRB     r6,[r0,#0]
                  |L1.1916|
;;;760    							}
;;;761    							if(PM2_5_pollute_flag==0&&co2_pollute_flag==0&&shut_off_all_sensor==0)
00077c  7c28              LDRB     r0,[r5,#0x10]  ; PM2_5_pollute_flag
00077e  7be9              LDRB     r1,[r5,#0xf]  ; co2_pollute_flag
000780  4308              ORRS     r0,r0,r1
000782  78a9              LDRB     r1,[r5,#2]  ; shut_off_all_sensor
000784  4308              ORRS     r0,r0,r1
000786  d103              BNE      |L1.1936|
;;;762    							{
;;;763    								LCD_buffer[7] |= 0x01;
000788  79e0              LDRB     r0,[r4,#7]  ; LCD_buffer
00078a  f0400001          ORR      r0,r0,#1
00078e  71e0              STRB     r0,[r4,#7]
                  |L1.1936|
;;;764    							}
;;;765    							if((LCD_buffer[7]&0x07)==0&&led_off_flag==0&&shut_off_all_sensor==0)
000790  79e2              LDRB     r2,[r4,#7]  ; LCD_buffer
000792  7e2b              LDRB     r3,[r5,#0x18]  ; led_off_flag
000794  f0020007          AND      r0,r2,#7
000798  4318              ORRS     r0,r0,r3
00079a  4308              ORRS     r0,r0,r1
00079c  d102              BNE      |L1.1956|
;;;766    							{
;;;767    								LCD_buffer[7] |= 0x01;
00079e  f0420001          ORR      r0,r2,#1
0007a2  71e0              STRB     r0,[r4,#7]
                  |L1.1956|
;;;768    							}
;;;769    							
;;;770    							if(timing_flag==1)
0007a4  79e8              LDRB     r0,[r5,#7]  ; timing_flag
0007a6  2801              CMP      r0,#1
0007a8  d10e              BNE      |L1.1992|
;;;771    							{
;;;772    										if(bsp_CheckTimer(0))
0007aa  2000              MOVS     r0,#0
0007ac  f7fffffe          BL       bsp_CheckTimer
0007b0  b120              CBZ      r0,|L1.1980|
;;;773    										{
;;;774    											timing_count++;
0007b2  6a28              LDR      r0,[r5,#0x20]  ; timing_count
0007b4  1c40              ADDS     r0,r0,#1
;;;775    											power_on_init_time_flag = 1;
0007b6  6228              STR      r0,[r5,#0x20]  ; timing_count
0007b8  2001              MOVS     r0,#1
0007ba  7468              STRB     r0,[r5,#0x11]
                  |L1.1980|
0007bc  e9d50108          LDRD     r0,r1,[r5,#0x20]
;;;776    										}
;;;777    										if(timing_count>=timing_time_min_value)
0007c0  4288              CMP      r0,r1
0007c2  db01              BLT      |L1.1992|
;;;778    										{
;;;779    											 power_off();
0007c4  f7fffffe          BL       power_off
                  |L1.1992|
;;;780    										}
;;;781    							}
;;;782    							
;;;783    							if(mode_time_switch_flag)
0007c8  7a68              LDRB     r0,[r5,#9]  ; mode_time_switch_flag
0007ca  2800              CMP      r0,#0
0007cc  d006              BEQ      |L1.2012|
;;;784    							{
;;;785    								  if((co2_pollute_flag == 0)&&(PM2_5_pollute_flag == 0))
0007ce  7be8              LDRB     r0,[r5,#0xf]  ; co2_pollute_flag
0007d0  7c29              LDRB     r1,[r5,#0x10]  ; PM2_5_pollute_flag
0007d2  4301              ORRS     r1,r1,r0
0007d4  d003              BEQ      |L1.2014|
;;;786    									{
;;;787    																if(bsp_CheckTimer(1))
;;;788    																{
;;;789    																	mode_time_count++;
;;;790    																}
;;;791    																if(work_mode==0)//auto
;;;792    																{
;;;793    																	switch(work_0_1_mode_state)
;;;794    																	{
;;;795    																		
;;;796    																		 case 0:
;;;797    																					 if(mode_time_count>=3||pollute_flag_last==1)
;;;798    																					 {
;;;799    																						  pollute_flag_last = 0;
;;;800    																							work_0_1_mode_state = 1;
;;;801    																							mode_time_count =0;	
;;;802    																						  {
;;;803    																							    TIM3->CCR2 = DC_MOTOR_MID_SPEED;//48;
;;;804    																						  	 //display_graphic_speed_33x64(display_mid_speed);
;;;805    																									LCD_buffer[1] |= 0x08;//led speed
;;;806    																									LCD_buffer[2]  = 0x0C;
;;;807    																									dc_motor_speed_count = 2;
;;;808                                                  }
;;;809    																							dc_motor_speed_count = 2;
;;;810    																							
;;;811    																						  //if(display_chang_face_flag==0)
;;;812    																							{
;;;813    																							   //display_graphic_win_dir_39x64(display_out_dir);
;;;814    																								LCD_buffer[1] &= 0x08;
;;;815    																								LCD_buffer[1] |= 0x02;
;;;816    																							}
;;;817    																	
;;;818    																							{
;;;819    																								ANION_EN;
;;;820    																								anion_PW_state = 1;
;;;821    																								LCD_buffer[7] |= 0x08;//display_graphic_tree_32x64(display_tree);
;;;822    																							}
;;;823    																							Refresh_LCD();
;;;824    																							step_motor_out();
;;;825    																							
;;;826    																							//display_graphic_33x64(display_A);
;;;827    																					 }
;;;828    																					 break;
;;;829    																		case 1:
;;;830    																					 if(mode_time_count>=2||pollute_flag_last==1)
;;;831    																					 {
;;;832    																						 pollute_flag_last = 0;
;;;833    																							work_0_1_mode_state = 2;
;;;834    																							mode_time_count =0;	
;;;835    																							TIM3->CCR2 = 0;
;;;836    																							dc_motor_speed_count = 4;
;;;837    																							{
;;;838    																									//display_graphic_speed_33x64(display_no_speed);
;;;839    																									LCD_buffer[1] |= 0x08;//led speed
;;;840    																									LCD_buffer[2]  = 0x00;                                            
;;;841                                                   }
;;;842    																								
;;;843    																						  //if(display_chang_face_flag==0)
;;;844    																							{
;;;845    																							   //display_graphic_win_dir_39x64(display_out_dir);
;;;846    																								LCD_buffer[1] &= 0x08;
;;;847    																								LCD_buffer[1] |= 0x02;
;;;848    																							}
;;;849    
;;;850    																							{
;;;851    																								ANION_DISABLE;
;;;852    																								anion_PW_state = 0;
;;;853    																								LCD_buffer[7] &= 0x07;//display_graphic_tree_clear();
;;;854    																							}
;;;855    																							Refresh_LCD();
;;;856    																							step_motor_out();
;;;857    																							
;;;858    																					 }
;;;859    																					 break;
;;;860    																		case 2:							     
;;;861    																					 if(mode_time_count>=1||pollute_flag_last==1)
;;;862    																					 {
;;;863    																						  pollute_flag_last = 0;
;;;864    																							work_0_1_mode_state = 0;
;;;865    																							mode_time_count =0;	
;;;866                                                  {		
;;;867                                                      start_motor();																								
;;;868    																									TIM3->CCR2 = DC_MOTOR_MID_SPEED;//48;	
;;;869    																								 //display_graphic_speed_33x64(display_mid_speed);
;;;870    																									LCD_buffer[1] |= 0x08;//led speed
;;;871    																									LCD_buffer[2]  = 0x0C;
;;;872    																									dc_motor_speed_count = 2;
;;;873                                                  }
;;;874    																							
;;;875    																						  //if(display_chang_face_flag==0)
;;;876    																							{
;;;877    																							   LCD_buffer[1] &= 0x08;//display_graphic_win_dir_39x56(display_in_dir);
;;;878                                                     LCD_buffer[1] |= 0x03;																						
;;;879    																							}
;;;880    
;;;881    																							{
;;;882    																								ANION_EN;
;;;883    																								anion_PW_state = 1;
;;;884    																								LCD_buffer[7] |= 0x08;//display_graphic_tree_32x64(display_tree);
;;;885    																							}
;;;886    
;;;887                                                  Refresh_LCD();	
;;;888                                                  step_motor_in();																							
;;;889    																					 }										 
;;;890    																					 break;
;;;891    																	}
;;;892    																	
;;;893    																}
;;;894    																else if(work_mode==1||work_mode==2)
;;;895    																{
;;;896    																		switch(work_0_1_mode_state)
;;;897    																		{
;;;898    																			case 0:										 
;;;899    																						 if(mode_time_count>=3||pollute_flag_last==1)
;;;900    																						 {
;;;901    																							  pollute_flag_last = 0;
;;;902    																								work_0_1_mode_state = 1;
;;;903    																								mode_time_count =0;	
;;;904    																								TIM3->CCR2 = DC_MOTOR_LOW_SPEED;//48;
;;;905    																							  {
;;;906    																									//display_graphic_speed_33x64(display_low_speed);
;;;907    																									LCD_buffer[1] |= 0x08;//led speed
;;;908    																									LCD_buffer[2]  = 0x08;                                            
;;;909                                                    }
;;;910    																								dc_motor_speed_count = 3;
;;;911    																								
;;;912    																								//if(display_chang_face_flag==0)
;;;913    																								{
;;;914    																									 //display_graphic_win_dir_39x64(display_out_dir);
;;;915    																									LCD_buffer[1] &= 0x08;
;;;916    																									LCD_buffer[1] |= 0x02;
;;;917    																								}
;;;918    																								
;;;919    																								{
;;;920    																									ANION_EN;
;;;921    																									anion_PW_state = 1;
;;;922    																									LCD_buffer[7] |= 0x08;//display_graphic_tree_32x64(display_tree);
;;;923    																								}
;;;924    
;;;925    																								Refresh_LCD();
;;;926    																								step_motor_out();
;;;927    																								//display_graphic_33x64(display_A);
;;;928    																						 }										 
;;;929    																						 break;
;;;930    																			case 1:										 
;;;931    																						 if(mode_time_count>=2||pollute_flag_last==1)
;;;932    																						 {
;;;933    																							  pollute_flag_last = 0;
;;;934    																								work_0_1_mode_state = 2;
;;;935    																								mode_time_count =0;	
;;;936    																								TIM3->CCR2 = 0;
;;;937    																							  {
;;;938    																									//display_graphic_speed_33x64(display_no_speed);
;;;939    																									LCD_buffer[1] |= 0x08;//led speed
;;;940    																									LCD_buffer[2]  = 0x00;                                            
;;;941                                                    }
;;;942    																								dc_motor_speed_count = 4;
;;;943    																								
;;;944    																								//if(display_chang_face_flag==0)
;;;945    																								{
;;;946    																									 //display_graphic_win_dir_39x64(display_out_dir);
;;;947    																									LCD_buffer[1] &= 0x08;
;;;948    																									LCD_buffer[1] |= 0x02;
;;;949    																								}
;;;950    
;;;951    																								{
;;;952    																									ANION_DISABLE;
;;;953    																									anion_PW_state = 0;
;;;954    																									LCD_buffer[7] &= 0x07;//display_graphic_tree_clear();
;;;955    																								}
;;;956    																								Refresh_LCD();
;;;957    																								step_motor_out();
;;;958    																						 }
;;;959    																						 break;
;;;960    																		case 2:							     
;;;961    																						 if(mode_time_count>=1||pollute_flag_last==1)
;;;962    																						 {
;;;963    																							  pollute_flag_last = 0;
;;;964    																								work_0_1_mode_state = 0;
;;;965    																								mode_time_count =0;		
;;;966    																							  start_motor();
;;;967    																								TIM3->CCR2 = DC_MOTOR_LOW_SPEED;//48;
;;;968    																							  {
;;;969    																									//display_graphic_speed_33x64(display_low_speed);
;;;970    																									LCD_buffer[1] |= 0x08;//led speed
;;;971    																									LCD_buffer[2]  = 0x08;                                            
;;;972                                                    }
;;;973    																								dc_motor_speed_count = 3;
;;;974    																								
;;;975    																								//if(display_chang_face_flag==0)
;;;976    																								{
;;;977    																									 LCD_buffer[1] &= 0x08;//display_graphic_win_dir_39x56(display_in_dir);
;;;978    																									 LCD_buffer[1] |= 0x03;																						
;;;979    																								}	
;;;980    
;;;981    																								{
;;;982    																									ANION_EN;
;;;983    																									anion_PW_state = 1;
;;;984    																									LCD_buffer[7] |= 0x08;//display_graphic_tree_32x64(display_tree);
;;;985    																								}
;;;986    
;;;987                                                    Refresh_LCD();
;;;988                                                    step_motor_in();																								
;;;989    																						 }										 
;;;990    																						 break;
;;;991    																		}
;;;992    																}
;;;993    											}// if(PM2_5_pollute_flag = 0&&PM2_5_pollute_flag = 0)
;;;994    											else 
;;;995    											{
;;;996    												if(shut_off_all_sensor==0)
0007d6  78a9              LDRB     r1,[r5,#2]  ; shut_off_all_sensor
0007d8  2900              CMP      r1,#0
0007da  d070              BEQ      |L1.2238|
                  |L1.2012|
0007dc  e0e2              B        |L1.2468|
                  |L1.2014|
0007de  2001              MOVS     r0,#1                 ;787
0007e0  f7fffffe          BL       bsp_CheckTimer
0007e4  b110              CBZ      r0,|L1.2028|
0007e6  6aa8              LDR      r0,[r5,#0x28]         ;789  ; mode_time_count
0007e8  1c40              ADDS     r0,r0,#1              ;789
0007ea  62a8              STR      r0,[r5,#0x28]         ;789  ; mode_time_count
                  |L1.2028|
0007ec  7ae8              LDRB     r0,[r5,#0xb]          ;791  ; work_mode
0007ee  b120              CBZ      r0,|L1.2042|
0007f0  2801              CMP      r0,#1                 ;894
0007f2  d05d              BEQ      |L1.2224|
0007f4  2802              CMP      r0,#2                 ;894
0007f6  d05b              BEQ      |L1.2224|
0007f8  e0d4              B        |L1.2468|
                  |L1.2042|
0007fa  7aa8              LDRB     r0,[r5,#0xa]          ;793  ; work_0_1_mode_state
0007fc  b120              CBZ      r0,|L1.2056|
0007fe  2801              CMP      r0,#1                 ;793
000800  d02e              BEQ      |L1.2144|
000802  2802              CMP      r0,#2                 ;793
000804  d178              BNE      |L1.2296|
000806  e03f              B        |L1.2184|
                  |L1.2056|
000808  6aa8              LDR      r0,[r5,#0x28]         ;797  ; mode_time_count
00080a  2803              CMP      r0,#3                 ;797
00080c  da02              BGE      |L1.2068|
00080e  7ca8              LDRB     r0,[r5,#0x12]         ;797  ; pollute_flag_last
000810  2801              CMP      r0,#1                 ;797
000812  d171              BNE      |L1.2296|
                  |L1.2068|
000814  74ae              STRB     r6,[r5,#0x12]         ;799
000816  2101              MOVS     r1,#1                 ;800
000818  4808              LDR      r0,|L1.2108|
00081a  72a9              STRB     r1,[r5,#0xa]          ;800
00081c  62ae              STR      r6,[r5,#0x28]         ;803  ; mode_time_count
00081e  8007              STRH     r7,[r0,#0]            ;803
000820  7860              LDRB     r0,[r4,#1]            ;805  ; LCD_buffer
000822  220c              MOVS     r2,#0xc               ;806
000824  70a2              STRB     r2,[r4,#2]            ;806
000826  2202              MOVS     r2,#2                 ;807
000828  752a              STRB     r2,[r5,#0x14]         ;807
00082a  2008              MOVS     r0,#8                 ;814
00082c  e05a              B        |L1.2276|
00082e  0000              DCW      0x0000
                  |L1.2096|
                          DCD      ||.data||
                  |L1.2100|
                          DCD      0x40013800
                  |L1.2104|
                          DCD      0x40010814
                  |L1.2108|
                          DCD      0x40000438
                  |L1.2112|
                          DCD      flag_getCO2_value
                  |L1.2116|
                          DCD      flag_getPM_value
                  |L1.2120|
                          DCD      0x40011000
                  |L1.2124|
                          DCD      LCD_buffer
                  |L1.2128|
                          DCD      0x40010c10
                  |L1.2132|
                          DCD      0x4002006c
                  |L1.2136|
                          DCD      0x40011414
                  |L1.2140|
                          DCD      usart_CO2_rec_temp
                  |L1.2144|
000860  6aa8              LDR      r0,[r5,#0x28]         ;830  ; mode_time_count
000862  2802              CMP      r0,#2                 ;830
000864  da02              BGE      |L1.2156|
000866  7ca8              LDRB     r0,[r5,#0x12]         ;830  ; pollute_flag_last
000868  2801              CMP      r0,#1                 ;830
00086a  d145              BNE      |L1.2296|
                  |L1.2156|
00086c  74ae              STRB     r6,[r5,#0x12]         ;832
00086e  2002              MOVS     r0,#2                 ;833
000870  72a8              STRB     r0,[r5,#0xa]          ;833
000872  48fe              LDR      r0,|L1.3180|
000874  62ae              STR      r6,[r5,#0x28]         ;835  ; mode_time_count
000876  8006              STRH     r6,[r0,#0]            ;835
000878  752f              STRB     r7,[r5,#0x14]         ;836
00087a  7860              LDRB     r0,[r4,#1]            ;839  ; LCD_buffer
00087c  70a6              STRB     r6,[r4,#2]            ;840
00087e  200a              MOVS     r0,#0xa               ;847
000880  7060              STRB     r0,[r4,#1]            ;847
000882  f8c89014          STR      r9,[r8,#0x14]         ;851
000886  e04b              B        |L1.2336|
                  |L1.2184|
000888  6aa8              LDR      r0,[r5,#0x28]         ;861  ; mode_time_count
00088a  2801              CMP      r0,#1                 ;861
00088c  da02              BGE      |L1.2196|
00088e  7ca8              LDRB     r0,[r5,#0x12]         ;861  ; pollute_flag_last
000890  2801              CMP      r0,#1                 ;861
000892  d131              BNE      |L1.2296|
                  |L1.2196|
000894  74ae              STRB     r6,[r5,#0x12]         ;863
000896  72ae              STRB     r6,[r5,#0xa]          ;864
000898  62ae              STR      r6,[r5,#0x28]         ;867  ; mode_time_count
00089a  f7fffffe          BL       start_motor
00089e  48f3              LDR      r0,|L1.3180|
0008a0  8007              STRH     r7,[r0,#0]            ;868
0008a2  7860              LDRB     r0,[r4,#1]            ;870  ; LCD_buffer
0008a4  210c              MOVS     r1,#0xc               ;871
0008a6  70a1              STRB     r1,[r4,#2]            ;871
0008a8  f0400008          ORR      r0,r0,#8              ;870
0008ac  2102              MOVS     r1,#2                 ;872
0008ae  e050              B        |L1.2386|
                  |L1.2224|
0008b0  7aa8              LDRB     r0,[r5,#0xa]          ;896  ; work_0_1_mode_state
0008b2  b128              CBZ      r0,|L1.2240|
0008b4  2801              CMP      r0,#1                 ;896
0008b6  d020              BEQ      |L1.2298|
0008b8  2802              CMP      r0,#2                 ;896
0008ba  d173              BNE      |L1.2468|
0008bc  e036              B        |L1.2348|
                  |L1.2238|
0008be  e057              B        |L1.2416|
                  |L1.2240|
0008c0  6aa8              LDR      r0,[r5,#0x28]         ;899  ; mode_time_count
0008c2  2803              CMP      r0,#3                 ;899
0008c4  da02              BGE      |L1.2252|
0008c6  7ca8              LDRB     r0,[r5,#0x12]         ;899  ; pollute_flag_last
0008c8  2801              CMP      r0,#1                 ;899
0008ca  d16b              BNE      |L1.2468|
                  |L1.2252|
0008cc  2101              MOVS     r1,#1                 ;902
0008ce  74ae              STRB     r6,[r5,#0x12]         ;901
0008d0  4ae6              LDR      r2,|L1.3180|
0008d2  72a9              STRB     r1,[r5,#0xa]          ;902
0008d4  2003              MOVS     r0,#3                 ;904
0008d6  62ae              STR      r6,[r5,#0x28]         ;904  ; mode_time_count
0008d8  8010              STRH     r0,[r2,#0]            ;904
0008da  7862              LDRB     r2,[r4,#1]            ;907  ; LCD_buffer
0008dc  2308              MOVS     r3,#8                 ;908
0008de  70a3              STRB     r3,[r4,#2]            ;908
0008e0  7528              STRB     r0,[r5,#0x14]         ;910
0008e2  4618              MOV      r0,r3                 ;915
                  |L1.2276|
0008e4  f0400002          ORR      r0,r0,#2              ;815
0008e8  7060              STRB     r0,[r4,#1]            ;815
0008ea  f8c89010          STR      r9,[r8,#0x10]         ;819
0008ee  7229              STRB     r1,[r5,#8]            ;820
0008f0  79e0              LDRB     r0,[r4,#7]            ;821  ; LCD_buffer
0008f2  f0400008          ORR      r0,r0,#8              ;821
0008f6  e017              B        |L1.2344|
                  |L1.2296|
0008f8  e054              B        |L1.2468|
                  |L1.2298|
0008fa  6aa8              LDR      r0,[r5,#0x28]         ;931  ; mode_time_count
0008fc  2802              CMP      r0,#2                 ;931
0008fe  da02              BGE      |L1.2310|
000900  7ca8              LDRB     r0,[r5,#0x12]         ;931  ; pollute_flag_last
000902  2801              CMP      r0,#1                 ;931
000904  d14e              BNE      |L1.2468|
                  |L1.2310|
000906  74ae              STRB     r6,[r5,#0x12]         ;933
000908  2002              MOVS     r0,#2                 ;934
00090a  72a8              STRB     r0,[r5,#0xa]          ;934
00090c  48d7              LDR      r0,|L1.3180|
00090e  62ae              STR      r6,[r5,#0x28]         ;936  ; mode_time_count
000910  8006              STRH     r6,[r0,#0]            ;936
000912  7860              LDRB     r0,[r4,#1]            ;939  ; LCD_buffer
000914  70a6              STRB     r6,[r4,#2]            ;940
000916  752f              STRB     r7,[r5,#0x14]         ;942
000918  200a              MOVS     r0,#0xa               ;948
00091a  7060              STRB     r0,[r4,#1]            ;948
00091c  f8c89014          STR      r9,[r8,#0x14]         ;952
                  |L1.2336|
000920  722e              STRB     r6,[r5,#8]            ;852
000922  79e0              LDRB     r0,[r4,#7]            ;853  ; LCD_buffer
000924  f0000007          AND      r0,r0,#7              ;853
                  |L1.2344|
000928  71e0              STRB     r0,[r4,#7]            ;922
00092a  e054              B        |L1.2518|
                  |L1.2348|
00092c  6aa8              LDR      r0,[r5,#0x28]         ;961  ; mode_time_count
00092e  2801              CMP      r0,#1                 ;961
000930  da02              BGE      |L1.2360|
000932  7ca8              LDRB     r0,[r5,#0x12]         ;961  ; pollute_flag_last
000934  2801              CMP      r0,#1                 ;961
000936  d135              BNE      |L1.2468|
                  |L1.2360|
000938  74ae              STRB     r6,[r5,#0x12]         ;963
00093a  72ae              STRB     r6,[r5,#0xa]          ;964
00093c  62ae              STR      r6,[r5,#0x28]         ;966  ; mode_time_count
00093e  f7fffffe          BL       start_motor
000942  48ca              LDR      r0,|L1.3180|
000944  2103              MOVS     r1,#3                 ;967
000946  8001              STRH     r1,[r0,#0]            ;967
000948  7860              LDRB     r0,[r4,#1]            ;970  ; LCD_buffer
00094a  2208              MOVS     r2,#8                 ;971
00094c  f0400008          ORR      r0,r0,#8              ;970
000950  70a2              STRB     r2,[r4,#2]            ;971
                  |L1.2386|
000952  f0000008          AND      r0,r0,#8              ;977
000956  7529              STRB     r1,[r5,#0x14]         ;973
000958  f0400003          ORR      r0,r0,#3              ;978
00095c  7060              STRB     r0,[r4,#1]            ;978
00095e  f8c89010          STR      r9,[r8,#0x10]         ;982
000962  2001              MOVS     r0,#1                 ;983
000964  7228              STRB     r0,[r5,#8]            ;983
000966  79e0              LDRB     r0,[r4,#7]            ;984  ; LCD_buffer
000968  f0400008          ORR      r0,r0,#8              ;984
00096c  71e0              STRB     r0,[r4,#7]            ;984
00096e  e015              B        |L1.2460|
                  |L1.2416|
;;;997    												{
;;;998    													pollute_flag_last = 1;
000970  2101              MOVS     r1,#1
000972  74a9              STRB     r1,[r5,#0x12]
;;;999    													if(co2_pollute_flag==1)
000974  2801              CMP      r0,#1
000976  d019              BEQ      |L1.2476|
;;;1000   													{
;;;1001   														  
;;;1002   															
;;;1003   															 if(display_chang_face_flag==0)
;;;1004   															{
;;;1005   														     //display_graphic_win_dir_39x64(display_out_dir);
;;;1006   																 LCD_buffer[1] &= 0x08;
;;;1007   																 LCD_buffer[1] |= 0x02;
;;;1008   															}
;;;1009   															
;;;1010   															if(work_mode==0)
;;;1011   															{
;;;1012   														      TIM3->CCR2 = DC_MOTOR_HIGH_SPEED;//48;
;;;1013   																  //display_graphic_speed_33x64(display_high_speed);
;;;1014   																	LCD_buffer[1] |= 0x08;//led speed
;;;1015   																	LCD_buffer[2]  = 0x0E;
;;;1016   															}
;;;1017   															else
;;;1018   															{
;;;1019   																  TIM3->CCR2 = DC_MOTOR_MID_SPEED;//48;
;;;1020   																  //display_graphic_speed_33x64(display_mid_speed);
;;;1021   																	LCD_buffer[1] |= 0x08;//led speed
;;;1022   																	LCD_buffer[2]  = 0x0C;
;;;1023                                 }
;;;1024   															if(step_motor_position!=2)
;;;1025   															{
;;;1026   																Refresh_LCD();
;;;1027   																step_motor_out() ;
;;;1028   															}
;;;1029   													}
;;;1030   													else
;;;1031   													{
;;;1032   														  
;;;1033   //														// if(display_chang_face_flag==0)
;;;1034   															{
;;;1035   																 //display_graphic_win_dir_39x56(display_in_dir);
;;;1036   																 LCD_buffer[1] &= 0x08;
000978  7860              LDRB     r0,[r4,#1]  ; LCD_buffer
00097a  f0000008          AND      r0,r0,#8
;;;1037   																 LCD_buffer[1] |= 0x03;
00097e  f0400003          ORR      r0,r0,#3
000982  7060              STRB     r0,[r4,#1]
;;;1038   														     
;;;1039   															}
;;;1040   															
;;;1041   															if(work_mode==0)
000984  7ae9              LDRB     r1,[r5,#0xb]  ; work_mode
000986  b3a1              CBZ      r1,|L1.2546|
;;;1042   															{
;;;1043   														      TIM3->CCR2 = DC_MOTOR_HIGH_SPEED;//48;
;;;1044   																  //display_graphic_speed_33x64(display_high_speed);
;;;1045   																	LCD_buffer[1] |= 0x08;//led speed
;;;1046   																	LCD_buffer[2]  = 0x0E;
;;;1047   															}
;;;1048   															else
;;;1049   															{
;;;1050   																  TIM3->CCR2 = DC_MOTOR_MID_SPEED;//48;
000988  49b8              LDR      r1,|L1.3180|
00098a  800f              STRH     r7,[r1,#0]
;;;1051   																  //display_graphic_speed_33x64(display_mid_speed);
;;;1052   																	LCD_buffer[1] |= 0x08;//led speed
00098c  f0400008          ORR      r0,r0,#8
000990  7060              STRB     r0,[r4,#1]
;;;1053   																	LCD_buffer[2]  = 0x0C;
000992  200c              MOVS     r0,#0xc
                  |L1.2452|
000994  70a0              STRB     r0,[r4,#2]
;;;1054                                 }
;;;1055   															if(step_motor_position!=1)
000996  7928              LDRB     r0,[r5,#4]  ; step_motor_position
000998  2801              CMP      r0,#1
00099a  d003              BEQ      |L1.2468|
                  |L1.2460|
;;;1056   															{
;;;1057   																	Refresh_LCD();
00099c  f7fffffe          BL       Refresh_LCD
;;;1058   																	step_motor_in();
0009a0  f7fffffe          BL       step_motor_in
                  |L1.2468|
;;;1059   															}
;;;1060   															
;;;1061   													}
;;;1062                         }
;;;1063   										}//if(shut_off_all_sensor==0)
;;;1064   							}//if(mode_time_switch_flag)
;;;1065   							
;;;1066   							if(power_on_init_time_flag==1)
0009a4  7c68              LDRB     r0,[r5,#0x11]  ; power_on_init_time_flag
0009a6  2801              CMP      r0,#1
0009a8  d02c              BEQ      |L1.2564|
0009aa  e02d              B        |L1.2568|
                  |L1.2476|
0009ac  7ba8              LDRB     r0,[r5,#0xe]          ;1003  ; display_chang_face_flag
0009ae  b928              CBNZ     r0,|L1.2492|
0009b0  7860              LDRB     r0,[r4,#1]            ;1006  ; LCD_buffer
0009b2  f0000008          AND      r0,r0,#8              ;1006
0009b6  f0400002          ORR      r0,r0,#2              ;1007
0009ba  7060              STRB     r0,[r4,#1]            ;1007
                  |L1.2492|
0009bc  7ae8              LDRB     r0,[r5,#0xb]          ;1010  ; work_mode
0009be  b178              CBZ      r0,|L1.2528|
0009c0  48aa              LDR      r0,|L1.3180|
0009c2  8007              STRH     r7,[r0,#0]            ;1019
0009c4  7860              LDRB     r0,[r4,#1]            ;1021  ; LCD_buffer
0009c6  f0400008          ORR      r0,r0,#8              ;1021
0009ca  7060              STRB     r0,[r4,#1]            ;1021
0009cc  200c              MOVS     r0,#0xc               ;1022
                  |L1.2510|
0009ce  70a0              STRB     r0,[r4,#2]            ;1022
0009d0  7928              LDRB     r0,[r5,#4]            ;1024  ; step_motor_position
0009d2  2802              CMP      r0,#2                 ;1024
0009d4  d0e6              BEQ      |L1.2468|
                  |L1.2518|
0009d6  f7fffffe          BL       Refresh_LCD
0009da  f7fffffe          BL       step_motor_out
0009de  e7e1              B        |L1.2468|
                  |L1.2528|
0009e0  48a2              LDR      r0,|L1.3180|
0009e2  2109              MOVS     r1,#9                 ;1012
0009e4  8001              STRH     r1,[r0,#0]            ;1012
0009e6  7860              LDRB     r0,[r4,#1]            ;1014  ; LCD_buffer
0009e8  f0400008          ORR      r0,r0,#8              ;1014
0009ec  7060              STRB     r0,[r4,#1]            ;1014
0009ee  200e              MOVS     r0,#0xe               ;1015
0009f0  e7ed              B        |L1.2510|
                  |L1.2546|
0009f2  e7ff              B        |L1.2548|
                  |L1.2548|
0009f4  499d              LDR      r1,|L1.3180|
0009f6  2209              MOVS     r2,#9                 ;1043
0009f8  800a              STRH     r2,[r1,#0]            ;1043
0009fa  f0400008          ORR      r0,r0,#8              ;1045
0009fe  7060              STRB     r0,[r4,#1]            ;1045
000a00  200e              MOVS     r0,#0xe               ;1046
000a02  e7c7              B        |L1.2452|
                  |L1.2564|
;;;1067   							{
;;;1068   								  flag_CO_PW = 1;
000a04  2001              MOVS     r0,#1
000a06  7068              STRB     r0,[r5,#1]
                  |L1.2568|
;;;1069                 }
;;;1070   	   }//if(all_power_state==1)
;;;1071   		/* 按键滤波和检测由后台systick中断服务程序实现，我们只需要调用bsp_GetKey读取键值即可。 */
;;;1072   		ucKeyCode = bsp_GetKey();	/* 读取键值, 无键按下时返回 KEY_NONE = 0 */
000a08  f7fffffe          BL       bsp_GetKey
;;;1073   		#ifdef debug
;;;1074   // 		if(keys_show[keys_show_count]!=ucKeyCode&&ucKeyCode!=0)
;;;1075   // 		{
;;;1076   // 			if(keys_show_count<30)
;;;1077   // 			keys_show_count++;
;;;1078   // 			keys_show[keys_show_count] = ucKeyCode;//0xc6 0xc4 0xc0 0xc3  0x89 0x87
;;;1079   //     }
;;;1080   		#endif
;;;1081   		if (ucKeyCode != KEY_NONE)
000a0c  2800              CMP      r0,#0
000a0e  f43fadf5          BEQ      |L1.1532|
;;;1082   		{
;;;1083   			switch (ucKeyCode)
000a12  2887              CMP      r0,#0x87
000a14  d00e              BEQ      |L1.2612|
000a16  dc0e              BGT      |L1.2614|
000a18  280a              CMP      r0,#0xa
                  |L1.2586|
000a1a  d07c              BEQ      |L1.2838|
000a1c  dc06              BGT      |L1.2604|
000a1e  2801              CMP      r0,#1
000a20  d015              BEQ      |L1.2638|
000a22  2804              CMP      r0,#4
000a24  d078              BEQ      |L1.2840|
000a26  2807              CMP      r0,#7
                  |L1.2600|
000a28  d122              BNE      |L1.2672|
000a2a  e162              B        |L1.3314|
                  |L1.2604|
000a2c  280d              CMP      r0,#0xd
                  |L1.2606|
000a2e  d074              BEQ      |L1.2842|
000a30  2810              CMP      r0,#0x10
000a32  d1f9              BNE      |L1.2600|
                  |L1.2612|
000a34  e2a5              B        |L1.3970|
                  |L1.2614|
000a36  28c3              CMP      r0,#0xc3
000a38  d0ef              BEQ      |L1.2586|
000a3a  dc04              BGT      |L1.2630|
000a3c  2889              CMP      r0,#0x89
000a3e  d0f6              BEQ      |L1.2606|
000a40  28c0              CMP      r0,#0xc0
000a42  d1f1              BNE      |L1.2600|
000a44  e155              B        |L1.3314|
                  |L1.2630|
000a46  28c4              CMP      r0,#0xc4
000a48  d077              BEQ      |L1.2874|
000a4a  28c6              CMP      r0,#0xc6
000a4c  d1ec              BNE      |L1.2600|
                  |L1.2638|
;;;1084   			{
;;;1085   
;;;1086   				case IR_KEY_POWER:  //power 0xC6  
;;;1087   				case KEY_DOWN_K1:			/* 主板K1键按下 */	
;;;1088                               speak_one_time();					
000a4e  f7fffffe          BL       speak_one_time
;;;1089   				                    if(all_power_state==0x0000)
000a52  7b68              LDRB     r0,[r5,#0xd]  ; all_power_state
000a54  b168              CBZ      r0,|L1.2674|
;;;1090   														{
;;;1091   																 bsp_LedOn(7);
;;;1092                                    bsp_LedOn(8);															
;;;1093   															   //clear_screen();
;;;1094   															
;;;1095   															   pollute_flag_last = 0;
;;;1096   																 shut_off_all_sensor = 0;
;;;1097   																 //display_graphic_win_dir_39x64(display_in_dir);
;;;1098   															   LCD_buffer[1] &= 0x08;
;;;1099   																 LCD_buffer[1] |= 0x03;
;;;1100   																 //display_graphic_33x64(display_A);
;;;1101   															   LCD_buffer[0]  = 0x09;
;;;1102   																 mode_time_switch_flag = 1;
;;;1103   															   
;;;1104   															   //display_graphic_speed_33x64(display_mid_speed);
;;;1105   															   LCD_buffer[1] |= 0x08;//speed led
;;;1106   															   LCD_buffer[2]  = 0x0C;//speed led
;;;1107   																 bsp_StartAutoTimer(1,60000);
;;;1108   																// flag_CO_PW = 1;
;;;1109   																	CO2_PW_EN;
;;;1110   															    co2_Green_Led();
;;;1111   																	flag_PM_PW = 1;	
;;;1112   															    LCD_buffer[6] |= 0x08;//speed led
;;;1113   																  manul_flag = 0;
;;;1114   															    work_mode = 0;
;;;1115   															  
;;;1116   															   timing_flag = 0;
;;;1117   															   timing_state = 5;
;;;1118   																 //bsp_StartAutoTimer(0,60000);
;;;1119   															   //timing_time_min_value = 120;
;;;1120   																  //display_graphic_27x64_single(display_time_2);
;;;1121   																 LCD_buffer[3]  = 0x0F;//speed led
;;;1122   																 LCD_buffer[4]  = 0x0D;//speed led
;;;1123   																 LCD_buffer[5]  = 0x0F;//speed led
;;;1124   																 LCD_buffer[6] &= 0x08;//speed led
;;;1125   																 LCD_buffer[6] |= 0x05;//speed led
;;;1126   																 
;;;1127   // 																 LCD_buffer[3]  = 0x00;//speed led
;;;1128   // 																 LCD_buffer[4]  = 0x08;//speed led
;;;1129   // 																 LCD_buffer[5]  = 0x0D;//speed led
;;;1130   // 																 LCD_buffer[6] &= 0x08;//speed led
;;;1131   // 																 LCD_buffer[6] |= 0x03;//speed led
;;;1132   																 clear_PM_rec();
;;;1133   																 flag_getCO2_value = 0;
;;;1134   	                               flag_getPM_value = 0;
;;;1135   															
;;;1136   															    ANION_EN;
;;;1137   																	anion_PW_state = 1;
;;;1138   																	//display_graphic_tree_32x64(display_tree);
;;;1139   		                             	LCD_buffer[7] |= 0x08;																		
;;;1140                                    
;;;1141   																 bsp_StartTimer(3,30000);//led start question
;;;1142   																 PM2_5_Green_Led();
;;;1143   																 co2_Green_Led();
;;;1144   																 
;;;1145                                   Refresh_LCD();															 
;;;1146                                   step_motor_in();																	
;;;1147   																all_power_state = 1;
;;;1148   																DC_MOTOR_EN;
;;;1149   																start_motor();
;;;1150   																 TIM3->CCR2 = DC_MOTOR_MID_SPEED;//48;
;;;1151   															   dc_motor_speed_count = 1;
;;;1152   																flag_CO_PW = 1;
;;;1153   																
;;;1154   														}
;;;1155   														else
;;;1156   														{
;;;1157   															  LCD_buffer[1] &= 0x08;
000a56  7860              LDRB     r0,[r4,#1]  ; LCD_buffer
000a58  f0000008          AND      r0,r0,#8
;;;1158   																LCD_buffer[1] |= 0x03;
000a5c  f0400003          ORR      r0,r0,#3
000a60  7060              STRB     r0,[r4,#1]
;;;1159   															  Refresh_LCD();
000a62  f7fffffe          BL       Refresh_LCD
;;;1160   															  step_motor_in();
000a66  f7fffffe          BL       step_motor_in
;;;1161   																power_off();
000a6a  f7fffffe          BL       power_off
;;;1162   																all_power_state = 0;
000a6e  736e              STRB     r6,[r5,#0xd]
                  |L1.2672|
000a70  e2e5              B        |L1.4158|
                  |L1.2674|
000a72  2007              MOVS     r0,#7                 ;1091
000a74  f7fffffe          BL       bsp_LedOn
000a78  2008              MOVS     r0,#8                 ;1092
000a7a  f7fffffe          BL       bsp_LedOn
000a7e  487c              LDR      r0,|L1.3184|
000a80  2109              MOVS     r1,#9                 ;1101
000a82  2501              MOVS     r5,#1                 ;1102
000a84  7486              STRB     r6,[r0,#0x12]         ;1095
000a86  7086              STRB     r6,[r0,#2]            ;1096
000a88  7860              LDRB     r0,[r4,#1]            ;1098  ; LCD_buffer
000a8a  7021              STRB     r1,[r4,#0]            ;1101
000a8c  4978              LDR      r1,|L1.3184|
000a8e  200b              MOVS     r0,#0xb               ;1105
000a90  724d              STRB     r5,[r1,#9]            ;1102
000a92  7060              STRB     r0,[r4,#1]            ;1105
000a94  200c              MOVS     r0,#0xc               ;1106
000a96  70a0              STRB     r0,[r4,#2]            ;1106
000a98  f64e2160          MOV      r1,#0xea60            ;1107
000a9c  4628              MOV      r0,r5                 ;1107
000a9e  f7fffffe          BL       bsp_StartAutoTimer
000aa2  4974              LDR      r1,|L1.3188|
000aa4  f8c1b000          STR      r11,[r1,#0]           ;1109
000aa8  f7fffffe          BL       co2_Green_Led
000aac  4870              LDR      r0,|L1.3184|
000aae  4970              LDR      r1,|L1.3184|
000ab0  2205              MOVS     r2,#5                 ;1117
000ab2  7005              STRB     r5,[r0,#0]            ;1111
000ab4  79a0              LDRB     r0,[r4,#6]            ;1112  ; LCD_buffer
000ab6  730e              STRB     r6,[r1,#0xc]          ;1113
000ab8  72ce              STRB     r6,[r1,#0xb]          ;1114
000aba  71ce              STRB     r6,[r1,#7]            ;1116
000abc  758a              STRB     r2,[r1,#0x16]         ;1117
000abe  210f              MOVS     r1,#0xf               ;1121
000ac0  70e1              STRB     r1,[r4,#3]            ;1121
000ac2  220d              MOVS     r2,#0xd               ;1122
000ac4  7122              STRB     r2,[r4,#4]            ;1122
000ac6  7161              STRB     r1,[r4,#5]            ;1123
000ac8  200d              MOVS     r0,#0xd               ;1125
000aca  71a0              STRB     r0,[r4,#6]            ;1125
000acc  f7fffffe          BL       clear_PM_rec
000ad0  4869              LDR      r0,|L1.3192|
000ad2  7006              STRB     r6,[r0,#0]            ;1133
000ad4  4869              LDR      r0,|L1.3196|
000ad6  7006              STRB     r6,[r0,#0]            ;1134
000ad8  f8c89010          STR      r9,[r8,#0x10]         ;1136
000adc  4864              LDR      r0,|L1.3184|
000ade  f2475130          MOV      r1,#0x7530            ;1141
000ae2  7205              STRB     r5,[r0,#8]            ;1137
000ae4  79e0              LDRB     r0,[r4,#7]            ;1139  ; LCD_buffer
000ae6  f0400008          ORR      r0,r0,#8              ;1139
000aea  71e0              STRB     r0,[r4,#7]            ;1139
000aec  2003              MOVS     r0,#3                 ;1141
000aee  f7fffffe          BL       bsp_StartTimer
000af2  f7fffffe          BL       PM2_5_Green_Led
000af6  f7fffffe          BL       co2_Green_Led
000afa  f7fffffe          BL       Refresh_LCD
000afe  f7fffffe          BL       step_motor_in
000b02  485b              LDR      r0,|L1.3184|
000b04  f44f41c0          MOV      r1,#0x6000            ;1148
000b08  7345              STRB     r5,[r0,#0xd]          ;1147
000b0a  f8aa1000          STRH     r1,[r10,#0]           ;1148
000b0e  4857              LDR      r0,|L1.3180|
000b10  2101              MOVS     r1,#1                 ;1148
000b12  3838              SUBS     r0,r0,#0x38           ;1148
000b14  e002              B        |L1.2844|
                  |L1.2838|
000b16  e170              B        |L1.3578|
                  |L1.2840|
000b18  e00f              B        |L1.2874|
                  |L1.2842|
000b1a  e21a              B        |L1.3922|
                  |L1.2844|
000b1c  f7fffffe          BL       TIM_CtrlPWMOutputs
000b20  4852              LDR      r0,|L1.3180|
000b22  2101              MOVS     r1,#1                 ;1148
000b24  3838              SUBS     r0,r0,#0x38           ;1148
000b26  f7fffffe          BL       TIM_Cmd
000b2a  f7fffffe          BL       start_motor
000b2e  484f              LDR      r0,|L1.3180|
000b30  8007              STRH     r7,[r0,#0]            ;1150
000b32  484f              LDR      r0,|L1.3184|
000b34  7505              STRB     r5,[r0,#0x14]         ;1151
000b36  7045              STRB     r5,[r0,#1]            ;1152
000b38  e281              B        |L1.4158|
                  |L1.2874|
;;;1163   																//DMA_ITConfig(DMA1_Channel6, DMA_IT_TC, ENABLE);
;;;1164   														}
;;;1165   														
;;;1166   				                  	break;
;;;1167   
;;;1168   				case KEY_DOWN_K2:			/* 主板K2键按下 */
;;;1169   				case IR_KEY_MODE://0xc4
;;;1170   					                  
;;;1171   														if(all_power_state==1&&step_motor_moving_flag==0&&last_recycle_shut_flag == 0)
000b3a  7b68              LDRB     r0,[r5,#0xd]  ; all_power_state
000b3c  2801              CMP      r0,#1
000b3e  d197              BNE      |L1.2672|
000b40  7968              LDRB     r0,[r5,#5]  ; step_motor_moving_flag
000b42  2800              CMP      r0,#0
000b44  d194              BNE      |L1.2672|
000b46  79a8              LDRB     r0,[r5,#6]  ; last_recycle_shut_flag
000b48  2800              CMP      r0,#0
000b4a  d191              BNE      |L1.2672|
;;;1172   														{	
;;;1173   																	
;;;1174   //       															{
;;;1175   // 																			flag_PM_PW = 1;
;;;1176   //                                       LCD_buffer[6] |= 0x08;//speed led																			
;;;1177   // 																	    flag_CO_PW = 1;
;;;1178   // 																	    CO2_PW_EN;
;;;1179   // 																		}
;;;1180   															
;;;1181   															    speak_one_time();
000b4c  f7fffffe          BL       speak_one_time
;;;1182   															
;;;1183   															    if(work_mode<3)
000b50  7ae8              LDRB     r0,[r5,#0xb]  ; work_mode
000b52  2803              CMP      r0,#3
000b54  d202              BCS      |L1.2908|
000b56  1c40              ADDS     r0,r0,#1
;;;1184   																	{
;;;1185   																		work_mode++;
000b58  72e8              STRB     r0,[r5,#0xb]
000b5a  e000              B        |L1.2910|
                  |L1.2908|
;;;1186   																	}
;;;1187   																	else
;;;1188   																	{
;;;1189   																		work_mode = 0;
000b5c  72ee              STRB     r6,[r5,#0xb]
                  |L1.2910|
;;;1190   																	}
;;;1191   																	
;;;1192   																	if(manul_flag==1)
000b5e  7b28              LDRB     r0,[r5,#0xc]  ; manul_flag
000b60  2801              CMP      r0,#1
000b62  d102              BNE      |L1.2922|
;;;1193   																	{
;;;1194   																		manul_flag = 0;
000b64  732e              STRB     r6,[r5,#0xc]
;;;1195   																		work_mode = 0;
000b66  72ee              STRB     r6,[r5,#0xb]
;;;1196   																		last_recycle_shut_flag = 0;
000b68  71ae              STRB     r6,[r5,#6]
                  |L1.2922|
;;;1197   																	}
;;;1198   																	switch(work_mode)
000b6a  7ae8              LDRB     r0,[r5,#0xb]  ; work_mode
000b6c  b398              CBZ      r0,|L1.3030|
000b6e  2801              CMP      r0,#1
000b70  d060              BEQ      |L1.3124|
000b72  2802              CMP      r0,#2
000b74  d078              BEQ      |L1.3176|
000b76  2803              CMP      r0,#3
000b78  d077              BEQ      |L1.3178|
;;;1199   																	{
;;;1200   																		case 0:
;;;1201                                              bsp_LedOn(7);
;;;1202                                              
;;;1203   //																		       if(display_chang_face_flag==0)
;;;1204   																					 {
;;;1205   																		         //display_graphic_win_dir_39x64(display_out_dir);
;;;1206   																						 //LCD_buffer[1] &= 0x08;
;;;1207   																             //LCD_buffer[1] |= 0x01;
;;;1208   																						 LCD_buffer[1] &= 0x08;//display_graphic_win_dir_39x56(display_in_dir);
;;;1209                                                LCD_buffer[1] |= 0x03;	
;;;1210   																		         //display_graphic_33x64(display_A);
;;;1211   																						 LCD_buffer[0]  = 0x09;
;;;1212   																						 //display_graphic_speed_33x64(display_mid_speed);
;;;1213   																						 LCD_buffer[1] |= 0x08;//led speed
;;;1214   																						 LCD_buffer[2]  = 0x0C;
;;;1215   																						 
;;;1216   																					 }
;;;1217   																					 Refresh_LCD();
;;;1218   																					 step_motor_in();
;;;1219   																					 
;;;1220   																					 mode_time_switch_flag = 1;
;;;1221   																		       TIM3->CCR2 = DC_MOTOR_MID_SPEED;//48;
;;;1222   																		       DC_MOTOR_EN;
;;;1223   																		       dc_motor_speed_count = 2;
;;;1224   																		       
;;;1225   																		       bsp_StartAutoTimer(1,60000);
;;;1226                                              //flag_CO_PW = 1;
;;;1227   																					 CO2_PW_EN;
;;;1228   																					 flag_PM_PW = 1;																	
;;;1229                                              manul_flag = 0;	       
;;;1230   																					 led_off_flag = 0;															
;;;1231   																					 break;
;;;1232   																		case 1:
;;;1233   																			     bsp_LedOn(7);
;;;1234   																			     
;;;1235   //																		       if(display_chang_face_flag==0)
;;;1236   																					 {
;;;1237   																		          //display_graphic_win_dir_39x64(display_out_dir);
;;;1238   																						// LCD_buffer[1] &= 0x08;
;;;1239   																            // LCD_buffer[1] |= 0x01;
;;;1240   																						 LCD_buffer[1] &= 0x08;//display_graphic_win_dir_39x56(display_in_dir);
;;;1241                                                LCD_buffer[1] |= 0x03;	
;;;1242   																						  //display_graphic_speed_33x64(display_low_speed);
;;;1243   																						 LCD_buffer[1] |= 0x08;//led speed
;;;1244   																						 LCD_buffer[2]  = 0x08;
;;;1245   																						  //display_graphic_33x64(display_S);
;;;1246   																						 LCD_buffer[0] = 0x0A;
;;;1247   																					 }
;;;1248   																					 Refresh_LCD();
;;;1249   																					 step_motor_in();//step_motor_out();
;;;1250   																					 
;;;1251   																					 
;;;1252   																					 mode_time_switch_flag = 1;
;;;1253   																		       TIM3->CCR2 = DC_MOTOR_LOW_SPEED;//22;
;;;1254   																		       dc_motor_speed_count = 3;																		       
;;;1255   																		       bsp_StartAutoTimer(1,60000);	
;;;1256                                              //flag_CO_PW = 1;
;;;1257   																					 CO2_PW_EN;
;;;1258   																					 flag_PM_PW = 1;																					 
;;;1259   																		       manul_flag = 0;
;;;1260   																		       DC_MOTOR_EN;
;;;1261   																		       led_off_flag = 0;
;;;1262   																			     																	
;;;1263   																					 break;
;;;1264   																		case 2:
;;;1265   																			     bsp_LedOff(7);
;;;1266   																		       bsp_LedOff(1);
;;;1267   																						 bsp_LedOff(2);
;;;1268   																						 bsp_LedOff(3);
;;;1269   																			       bsp_LedOff(4);
;;;1270   																						 bsp_LedOff(5);
;;;1271   																						 bsp_LedOff(6);
;;;1272   																		         led_off_flag = 1;
;;;1273   																		         bsp_LedOff(5);
;;;1274   																						 bsp_LedOff(6);
;;;1275   																					 break;
;;;1276   																		
;;;1277   																		case 3:
;;;1278   																			      bsp_LedOn(7);
;;;1279                                               bsp_LedOn(8);
;;;1280   																		        led_off_flag = 0;
;;;1281   																					 break;
;;;1282   																		default:
;;;1283   																			     
;;;1284   																					 {
;;;1285   																		         //display_graphic_win_dir_39x64(display_out_dir);
;;;1286   																						 LCD_buffer[1] &= 0x08;
000b7a  7860              LDRB     r0,[r4,#1]  ; LCD_buffer
;;;1287   																             LCD_buffer[1] |= 0x02;
;;;1288   																		         //display_graphic_33x64(display_A);
;;;1289   																						 LCD_buffer[0]  = 0x09;
000b7c  2109              MOVS     r1,#9
000b7e  7021              STRB     r1,[r4,#0]
;;;1290   																						 //display_graphic_speed_33x64(display_mid_speed);
;;;1291   																						 LCD_buffer[1] |= 0x08;//led speed
000b80  200a              MOVS     r0,#0xa
000b82  7060              STRB     r0,[r4,#1]
;;;1292   																						 LCD_buffer[2]  = 0x0C;
000b84  200c              MOVS     r0,#0xc
000b86  70a0              STRB     r0,[r4,#2]
;;;1293   																						 
;;;1294   																					 }
;;;1295   																					 Refresh_LCD();
000b88  f7fffffe          BL       Refresh_LCD
;;;1296   																					 step_motor_out();
000b8c  f7fffffe          BL       step_motor_out
;;;1297   																					 
;;;1298   																					 
;;;1299   																					 mode_time_switch_flag = 1;
000b90  2001              MOVS     r0,#1
000b92  7268              STRB     r0,[r5,#9]
;;;1300   																		       TIM3->CCR2 = DC_MOTOR_MID_SPEED;//48;
000b94  4835              LDR      r0,|L1.3180|
000b96  8007              STRH     r7,[r0,#0]
;;;1301   																		       DC_MOTOR_EN;
000b98  f44f41c0          MOV      r1,#0x6000
000b9c  f8aa1000          STRH     r1,[r10,#0]
000ba0  4832              LDR      r0,|L1.3180|
000ba2  2101              MOVS     r1,#1
000ba4  3838              SUBS     r0,r0,#0x38
000ba6  f7fffffe          BL       TIM_CtrlPWMOutputs
000baa  4830              LDR      r0,|L1.3180|
000bac  2101              MOVS     r1,#1
000bae  3838              SUBS     r0,r0,#0x38
000bb0  f7fffffe          BL       TIM_Cmd
;;;1302   																		       dc_motor_speed_count = 2;
000bb4  2002              MOVS     r0,#2
000bb6  7528              STRB     r0,[r5,#0x14]
;;;1303   																		       led_off_flag = 0;
000bb8  762e              STRB     r6,[r5,#0x18]
;;;1304   																		       bsp_StartAutoTimer(1,60000);
000bba  f64e2160          MOV      r1,#0xea60
000bbe  2001              MOVS     r0,#1
000bc0  f7fffffe          BL       bsp_StartAutoTimer
;;;1305                                              //flag_CO_PW = 1;
;;;1306   																					 CO2_PW_EN;
000bc4  492b              LDR      r1,|L1.3188|
000bc6  f8c1b000          STR      r11,[r1,#0]
;;;1307   																					 flag_PM_PW = 1;																	
000bca  2001              MOVS     r0,#1
000bcc  7028              STRB     r0,[r5,#0]
;;;1308                                              manul_flag = 0;
000bce  732e              STRB     r6,[r5,#0xc]
                  |L1.3024|
;;;1309   																					 break;
;;;1310   																	}
;;;1311   																	work_0_1_mode_state = 0;
000bd0  72ae              STRB     r6,[r5,#0xa]
;;;1312   												          mode_time_count =0;	
;;;1313   																	shut_off_all_sensor = 0;
000bd2  62ae              STR      r6,[r5,#0x28]  ; mode_time_count
000bd4  e185              B        |L1.3810|
                  |L1.3030|
000bd6  e7ff              B        |L1.3032|
                  |L1.3032|
000bd8  2007              MOVS     r0,#7                 ;1201
000bda  f7fffffe          BL       bsp_LedOn
000bde  7860              LDRB     r0,[r4,#1]            ;1208  ; LCD_buffer
000be0  2109              MOVS     r1,#9                 ;1211
000be2  7021              STRB     r1,[r4,#0]            ;1211
000be4  200b              MOVS     r0,#0xb               ;1213
000be6  7060              STRB     r0,[r4,#1]            ;1213
000be8  200c              MOVS     r0,#0xc               ;1214
000bea  70a0              STRB     r0,[r4,#2]            ;1214
000bec  f7fffffe          BL       Refresh_LCD
000bf0  f7fffffe          BL       step_motor_in
000bf4  2001              MOVS     r0,#1                 ;1220
000bf6  7268              STRB     r0,[r5,#9]            ;1220
000bf8  481c              LDR      r0,|L1.3180|
000bfa  8007              STRH     r7,[r0,#0]            ;1221
000bfc  f44f41c0          MOV      r1,#0x6000            ;1222
000c00  f8aa1000          STRH     r1,[r10,#0]           ;1222
000c04  4819              LDR      r0,|L1.3180|
000c06  2101              MOVS     r1,#1                 ;1222
000c08  3838              SUBS     r0,r0,#0x38           ;1222
000c0a  f7fffffe          BL       TIM_CtrlPWMOutputs
000c0e  4817              LDR      r0,|L1.3180|
000c10  2101              MOVS     r1,#1                 ;1222
000c12  3838              SUBS     r0,r0,#0x38           ;1222
000c14  f7fffffe          BL       TIM_Cmd
000c18  2002              MOVS     r0,#2                 ;1223
000c1a  7528              STRB     r0,[r5,#0x14]         ;1223
000c1c  f64e2160          MOV      r1,#0xea60            ;1225
000c20  2001              MOVS     r0,#1                 ;1225
000c22  f7fffffe          BL       bsp_StartAutoTimer
000c26  4913              LDR      r1,|L1.3188|
000c28  f8c1b000          STR      r11,[r1,#0]           ;1227
000c2c  2001              MOVS     r0,#1                 ;1228
000c2e  7028              STRB     r0,[r5,#0]            ;1228
000c30  732e              STRB     r6,[r5,#0xc]          ;1229
000c32  e037              B        |L1.3236|
                  |L1.3124|
000c34  2007              MOVS     r0,#7                 ;1233
000c36  f7fffffe          BL       bsp_LedOn
000c3a  7860              LDRB     r0,[r4,#1]            ;1240  ; LCD_buffer
000c3c  200b              MOVS     r0,#0xb               ;1243
000c3e  7060              STRB     r0,[r4,#1]            ;1243
000c40  2008              MOVS     r0,#8                 ;1244
000c42  70a0              STRB     r0,[r4,#2]            ;1244
000c44  200a              MOVS     r0,#0xa               ;1246
000c46  7020              STRB     r0,[r4,#0]            ;1246
000c48  f7fffffe          BL       Refresh_LCD
000c4c  f7fffffe          BL       step_motor_in
000c50  2001              MOVS     r0,#1                 ;1252
000c52  4906              LDR      r1,|L1.3180|
000c54  7268              STRB     r0,[r5,#9]            ;1252
000c56  2003              MOVS     r0,#3                 ;1253
000c58  8008              STRH     r0,[r1,#0]            ;1253
000c5a  7528              STRB     r0,[r5,#0x14]         ;1254
000c5c  f64e2160          MOV      r1,#0xea60            ;1255
000c60  2001              MOVS     r0,#1                 ;1255
000c62  f7fffffe          BL       bsp_StartAutoTimer
000c66  e00b              B        |L1.3200|
                  |L1.3176|
000c68  e01e              B        |L1.3240|
                  |L1.3178|
000c6a  e03b              B        |L1.3300|
                  |L1.3180|
                          DCD      0x40000438
                  |L1.3184|
                          DCD      ||.data||
                  |L1.3188|
                          DCD      0x40010810
                  |L1.3192|
                          DCD      flag_getCO2_value
                  |L1.3196|
                          DCD      flag_getPM_value
                  |L1.3200|
000c80  49f1              LDR      r1,|L1.4168|
000c82  f8c1b000          STR      r11,[r1,#0]           ;1257
000c86  2001              MOVS     r0,#1                 ;1258
000c88  7028              STRB     r0,[r5,#0]            ;1258
000c8a  732e              STRB     r6,[r5,#0xc]          ;1259
000c8c  f44f40c0          MOV      r0,#0x6000            ;1260
000c90  f8aa0000          STRH     r0,[r10,#0]           ;1260
000c94  2101              MOVS     r1,#1                 ;1260
000c96  48ed              LDR      r0,|L1.4172|
000c98  f7fffffe          BL       TIM_CtrlPWMOutputs
000c9c  2101              MOVS     r1,#1                 ;1260
000c9e  48eb              LDR      r0,|L1.4172|
000ca0  f7fffffe          BL       TIM_Cmd
                  |L1.3236|
000ca4  762e              STRB     r6,[r5,#0x18]         ;1230
000ca6  e793              B        |L1.3024|
                  |L1.3240|
000ca8  2007              MOVS     r0,#7                 ;1265
000caa  f7fffffe          BL       bsp_LedOff
000cae  2001              MOVS     r0,#1                 ;1266
000cb0  f7fffffe          BL       bsp_LedOff
000cb4  2002              MOVS     r0,#2                 ;1267
000cb6  f7fffffe          BL       bsp_LedOff
000cba  2003              MOVS     r0,#3                 ;1268
000cbc  f7fffffe          BL       bsp_LedOff
000cc0  2004              MOVS     r0,#4                 ;1269
000cc2  f7fffffe          BL       bsp_LedOff
000cc6  2005              MOVS     r0,#5                 ;1270
000cc8  f7fffffe          BL       bsp_LedOff
000ccc  2006              MOVS     r0,#6                 ;1271
000cce  f7fffffe          BL       bsp_LedOff
000cd2  2001              MOVS     r0,#1                 ;1272
000cd4  7628              STRB     r0,[r5,#0x18]         ;1272
000cd6  2005              MOVS     r0,#5                 ;1273
000cd8  f7fffffe          BL       bsp_LedOff
000cdc  2006              MOVS     r0,#6                 ;1274
000cde  f7fffffe          BL       bsp_LedOff
000ce2  e775              B        |L1.3024|
                  |L1.3300|
000ce4  2007              MOVS     r0,#7                 ;1278
000ce6  f7fffffe          BL       bsp_LedOn
000cea  2008              MOVS     r0,#8                 ;1279
000cec  f7fffffe          BL       bsp_LedOn
000cf0  e7d8              B        |L1.3236|
                  |L1.3314|
;;;1314   														}
;;;1315   														//display_string_5x8(1,1,1,"kk");
;;;1316                               
;;;1317   														break;
;;;1318   				case IR_KEY_SPEED://dc motor speed
;;;1319           case KEY_DOWN_K3:				
;;;1320   					                  
;;;1321                               if(all_power_state==1&&shut_off_all_sensor == 0)
000cf2  7b68              LDRB     r0,[r5,#0xd]  ; all_power_state
000cf4  2801              CMP      r0,#1
                  |L1.3318|
000cf6  d171              BNE      |L1.3548|
000cf8  78a8              LDRB     r0,[r5,#2]  ; shut_off_all_sensor
000cfa  2800              CMP      r0,#0
000cfc  d1fb              BNE      |L1.3318|
;;;1322   														{				
;;;1323   															    speak_one_time();
000cfe  f7fffffe          BL       speak_one_time
;;;1324   															
;;;1325   															    bsp_LedOn(7);
000d02  2007              MOVS     r0,#7
000d04  f7fffffe          BL       bsp_LedOn
;;;1326   															    //if(speed_count_direct==0)
;;;1327                                     if(dc_motor_speed_count<3&&speed_count_direct==0)
000d08  7d28              LDRB     r0,[r5,#0x14]  ; dc_motor_speed_count
000d0a  2803              CMP      r0,#3
000d0c  d201              BCS      |L1.3346|
000d0e  78e9              LDRB     r1,[r5,#3]  ; speed_count_direct
000d10  b139              CBZ      r1,|L1.3362|
                  |L1.3346|
;;;1328   																	{	
;;;1329                                       speed_count_direct = 0;																		
;;;1330   																		dc_motor_speed_count++;
;;;1331   																	}
;;;1332   																	else
;;;1333   																	{
;;;1334   																		
;;;1335   																		speed_count_direct = 1;
000d12  2101              MOVS     r1,#1
000d14  1e40              SUBS     r0,r0,#1
000d16  70e9              STRB     r1,[r5,#3]
;;;1336   																		dc_motor_speed_count--;
000d18  f01000ff          ANDS     r0,r0,#0xff
000d1c  7528              STRB     r0,[r5,#0x14]
;;;1337   																		if(dc_motor_speed_count==0)
000d1e  d003              BEQ      |L1.3368|
000d20  e003              B        |L1.3370|
                  |L1.3362|
000d22  1c40              ADDS     r0,r0,#1
000d24  7528              STRB     r0,[r5,#0x14]         ;1330
000d26  e000              B        |L1.3370|
                  |L1.3368|
;;;1338   																		{
;;;1339   																			speed_count_direct = 0;
000d28  70ee              STRB     r6,[r5,#3]
                  |L1.3370|
;;;1340                                       }
;;;1341   																	}	
;;;1342                                     if(manul_flag==0)	
000d2a  7b28              LDRB     r0,[r5,#0xc]  ; manul_flag
000d2c  b918              CBNZ     r0,|L1.3382|
;;;1343   																	{
;;;1344   																		dc_motor_speed_count = 0;
000d2e  752e              STRB     r6,[r5,#0x14]
;;;1345   																		air_dir_recycle_count = 0;//recycle need clear beacase shutdown display is 2
000d30  756e              STRB     r6,[r5,#0x15]
;;;1346   																		led_off_flag = 0;
000d32  762e              STRB     r6,[r5,#0x18]
;;;1347   																		speed_count_direct = 0;
000d34  70ee              STRB     r6,[r5,#3]
                  |L1.3382|
;;;1348   																	}																		
;;;1349   																	/***************/
;;;1350   																	switch (dc_motor_speed_count)
000d36  7d28              LDRB     r0,[r5,#0x14]  ; dc_motor_speed_count
000d38  2805              CMP      r0,#5
000d3a  d250              BCS      |L1.3550|
000d3c  e8dff000          TBB      [pc,r0]
000d40  30261d03          DCB      0x30,0x26,0x1d,0x03
000d44  3a00              DCB      0x3a,0x00
;;;1351   																	{
;;;1352   																			case 3: 
;;;1353   																				      if(speed_count_direct == 0 )
000d46  78e8              LDRB     r0,[r5,#3]  ; speed_count_direct
000d48  b908              CBNZ     r0,|L1.3406|
;;;1354   																							{
;;;1355   																								speed_count_direct = 1;
000d4a  2001              MOVS     r0,#1
000d4c  70e8              STRB     r0,[r5,#3]
                  |L1.3406|
;;;1356                                                 }
;;;1357   																							TIM3->CCR2 = DC_MOTOR_LOW_SPEED;//22
000d4e  49bf              LDR      r1,|L1.4172|
000d50  2003              MOVS     r0,#3
000d52  3138              ADDS     r1,r1,#0x38
000d54  8008              STRH     r0,[r1,#0]
;;;1358   																			        DC_MOTOR_EN;
000d56  0340              LSLS     r0,r0,#13
000d58  f8aa0000          STRH     r0,[r10,#0]
000d5c  2101              MOVS     r1,#1
000d5e  48bb              LDR      r0,|L1.4172|
000d60  f7fffffe          BL       TIM_CtrlPWMOutputs
000d64  2101              MOVS     r1,#1
000d66  48b9              LDR      r0,|L1.4172|
000d68  f7fffffe          BL       TIM_Cmd
;;;1359   																							//display_graphic_speed_33x64(display_low_speed);
;;;1360   																			        LCD_buffer[1] |= 0x08;//led speed
000d6c  7860              LDRB     r0,[r4,#1]  ; LCD_buffer
000d6e  f0400008          ORR      r0,r0,#8
000d72  7060              STRB     r0,[r4,#1]
;;;1361   																						  LCD_buffer[2]  = 0x08;
000d74  2008              MOVS     r0,#8
                  |L1.3446|
000d76  70a0              STRB     r0,[r4,#2]
000d78  e02b              B        |L1.3538|
;;;1362   																							break;
;;;1363   																			case 2: 
;;;1364   																							TIM3->CCR2 = DC_MOTOR_MID_SPEED;//48;
000d7a  48b4              LDR      r0,|L1.4172|
000d7c  3038              ADDS     r0,r0,#0x38
000d7e  8007              STRH     r7,[r0,#0]
;;;1365   																							//display_graphic_speed_33x64(display_mid_speed);
;;;1366   																			        LCD_buffer[1] |= 0x08;//led speed
000d80  7860              LDRB     r0,[r4,#1]  ; LCD_buffer
000d82  f0400008          ORR      r0,r0,#8
000d86  7060              STRB     r0,[r4,#1]
;;;1367   																						  LCD_buffer[2]  = 0x0C;
000d88  200c              MOVS     r0,#0xc
;;;1368   																							break;
000d8a  e7f4              B        |L1.3446|
;;;1369   																			case 1: 
;;;1370   																							TIM3->CCR2 = DC_MOTOR_HIGH_SPEED;//78;
000d8c  49af              LDR      r1,|L1.4172|
000d8e  2009              MOVS     r0,#9
000d90  3138              ADDS     r1,r1,#0x38
000d92  8008              STRH     r0,[r1,#0]
;;;1371   																							//display_graphic_speed_33x64(display_high_speed);
;;;1372   																			        LCD_buffer[1] |= 0x08;//led speed
000d94  7860              LDRB     r0,[r4,#1]  ; LCD_buffer
000d96  f0400008          ORR      r0,r0,#8
000d9a  7060              STRB     r0,[r4,#1]
;;;1373   																						  LCD_buffer[2]  = 0x0E;
000d9c  200e              MOVS     r0,#0xe
;;;1374   																							break;
000d9e  e7ea              B        |L1.3446|
;;;1375   																			case 0: 
;;;1376   																							TIM3->CCR2 = DC_MOTOR_STRONG_SPEED;//120;
000da0  48aa              LDR      r0,|L1.4172|
000da2  21f9              MOVS     r1,#0xf9
000da4  3038              ADDS     r0,r0,#0x38
000da6  8001              STRH     r1,[r0,#0]
;;;1377   																							//display_graphic_speed_33x64(display_strong_speed);
;;;1378   																			        LCD_buffer[1] |= 0x08;//led speed
000da8  7860              LDRB     r0,[r4,#1]  ; LCD_buffer
000daa  f0400008          ORR      r0,r0,#8
000dae  7060              STRB     r0,[r4,#1]
;;;1379   																						  LCD_buffer[2]  = 0x0F;
000db0  200f              MOVS     r0,#0xf
;;;1380   																							break;
000db2  e7e0              B        |L1.3446|
;;;1381   																			case 4: 
;;;1382   																							TIM3->CCR2 = 0;
000db4  48a5              LDR      r0,|L1.4172|
000db6  3038              ADDS     r0,r0,#0x38
000db8  8006              STRH     r6,[r0,#0]
;;;1383   																							DC_MOTOR_DISABLE;
000dba  1401              ASRS     r1,r0,#16
000dbc  f8aa1000          STRH     r1,[r10,#0]
000dc0  2100              MOVS     r1,#0
000dc2  48a2              LDR      r0,|L1.4172|
000dc4  f7fffffe          BL       TIM_Cmd
;;;1384   																							//display_graphic_speed_33x64(display_no_speed);
;;;1385   																			        LCD_buffer[1] &= 0x07;//led speed
000dc8  7860              LDRB     r0,[r4,#1]  ; LCD_buffer
000dca  f0000007          AND      r0,r0,#7
                  |L1.3534|
000dce  7060              STRB     r0,[r4,#1]
;;;1386   																						  LCD_buffer[2]  = 0x00;
000dd0  70a6              STRB     r6,[r4,#2]
                  |L1.3538|
;;;1387   																							break;
;;;1388   																			default:
;;;1389   																							TIM3->CCR2 = 0;
;;;1390   																							DC_MOTOR_DISABLE;
;;;1391   																							//display_graphic_speed_33x64(display_no_speed);
;;;1392   																			        LCD_buffer[1] |= 0x08;//led speed
;;;1393   																						  LCD_buffer[2]  = 0x00;
;;;1394   																							break;
;;;1395   																	}
;;;1396   																	
;;;1397   																	 manul_flag = 1;
000dd2  2001              MOVS     r0,#1
000dd4  7328              STRB     r0,[r5,#0xc]
;;;1398   																	 LCD_buffer[0]  = 0x0C;//display manual
000dd6  200c              MOVS     r0,#0xc
000dd8  7020              STRB     r0,[r4,#0]
;;;1399   																	 mode_time_switch_flag = 0;
000dda  726e              STRB     r6,[r5,#9]
                  |L1.3548|
000ddc  e12f              B        |L1.4158|
                  |L1.3550|
000dde  489b              LDR      r0,|L1.4172|
000de0  3038              ADDS     r0,r0,#0x38           ;1389
000de2  8006              STRH     r6,[r0,#0]            ;1389
000de4  1401              ASRS     r1,r0,#16             ;1390
000de6  f8aa1000          STRH     r1,[r10,#0]           ;1390
000dea  2100              MOVS     r1,#0                 ;1390
000dec  4897              LDR      r0,|L1.4172|
000dee  f7fffffe          BL       TIM_Cmd
000df2  7860              LDRB     r0,[r4,#1]            ;1392  ; LCD_buffer
000df4  f0400008          ORR      r0,r0,#8              ;1392
000df8  e7e9              B        |L1.3534|
                  |L1.3578|
;;;1400   													  }
;;;1401   														
;;;1402   					                  break;
;;;1403   															
;;;1404   				case KEY_DOWN_K4:	//air detect power
;;;1405           case IR_KEY_RECYCLE:			
;;;1406   					                  
;;;1407   					                  if(all_power_state==1&&manul_flag==1&&step_motor_moving_flag==0)
000dfa  7b68              LDRB     r0,[r5,#0xd]  ; all_power_state
000dfc  2801              CMP      r0,#1
000dfe  d134              BNE      |L1.3690|
000e00  7b28              LDRB     r0,[r5,#0xc]  ; manul_flag
000e02  2801              CMP      r0,#1
000e04  d131              BNE      |L1.3690|
000e06  7968              LDRB     r0,[r5,#5]  ; step_motor_moving_flag
000e08  2800              CMP      r0,#0
000e0a  d12e              BNE      |L1.3690|
;;;1408   														{	
;;;1409   															    speak_one_time();
000e0c  f7fffffe          BL       speak_one_time
;;;1410   															    if(air_dir_recycle_count<2)
000e10  7d68              LDRB     r0,[r5,#0x15]  ; air_dir_recycle_count
000e12  2802              CMP      r0,#2
000e14  d202              BCS      |L1.3612|
000e16  1c40              ADDS     r0,r0,#1
;;;1411   																	{
;;;1412   																		air_dir_recycle_count++;
000e18  7568              STRB     r0,[r5,#0x15]
000e1a  e000              B        |L1.3614|
                  |L1.3612|
;;;1413   																	}
;;;1414   																	else
;;;1415   																	{
;;;1416   																		air_dir_recycle_count = 0;
000e1c  756e              STRB     r6,[r5,#0x15]
                  |L1.3614|
;;;1417   																	}	
;;;1418   																	last_dc_motor_speed_count = dc_motor_speed_count;													    																	
000e1e  7d28              LDRB     r0,[r5,#0x14]  ; dc_motor_speed_count
000e20  75e8              STRB     r0,[r5,#0x17]
;;;1419   																	switch(air_dir_recycle_count)
000e22  7d68              LDRB     r0,[r5,#0x15]  ; air_dir_recycle_count
000e24  b310              CBZ      r0,|L1.3692|
000e26  2801              CMP      r0,#1
000e28  d051              BEQ      |L1.3790|
000e2a  2802              CMP      r0,#2
000e2c  d05b              BEQ      |L1.3814|
000e2e  2803              CMP      r0,#3
000e30  d01b              BEQ      |L1.3690|
;;;1420   																	{
;;;1421   																			case 0:
;;;1422   																				     
;;;1423   																				     if(last_recycle_shut_flag==1)
;;;1424   																						 {
;;;1425   																							 last_recycle_shut_flag = 0;
;;;1426   																							 
;;;1427   																							 ANION_EN;
;;;1428   																							 anion_PW_state = 1;
;;;1429   																							 LCD_buffer[7] |= 0x08;//display_graphic_tree_32x64(display_tree);
;;;1430   																							 
;;;1431   																							 start_delay_30_flag = 0;
;;;1432   																							 bsp_StartTimer(3,30000);//led start question
;;;1433   																							 PM2_5_Green_Led();
;;;1434   																							 co2_Green_Led();
;;;1435   																							 
;;;1436                                                }
;;;1437   																			       shut_off_all_sensor = 0;
;;;1438   																					   PM2_5_Green_Led();
;;;1439   																						 flag_PM_PW = 1;
;;;1440   																						 //LCD_buffer[6] |= 0x08;//speed led
;;;1441   																						 flag_CO_PW = 1;
;;;1442   																			       //power_on_init_time_flag = 0;
;;;1443   																			       co2_Green_Led();
;;;1444   																						 CO2_PW_EN;
;;;1445   																			       
;;;1446   																						 {
;;;1447   																							 LCD_buffer[1] &= 0x08;//display_graphic_win_dir_39x56(display_in_dir);
;;;1448   																							 LCD_buffer[1] |= 0x03;
;;;1449   																						 }
;;;1450   																						 //display_graphic_speed_33x64(display_mid_speed);
;;;1451   																						 LCD_buffer[1] |= 0x08;//led speed
;;;1452   																						 LCD_buffer[2]  = 0x0C;
;;;1453   																						 dc_motor_speed_count = 2;
;;;1454   																						 Refresh_LCD();
;;;1455   																						 start_motor();
;;;1456   																						 TIM3->CCR2 = DC_MOTOR_MID_SPEED;//48;
;;;1457   																							
;;;1458   																						 step_motor_in();
;;;1459   																						 
;;;1460   																						
;;;1461   																						 break;
;;;1462   																			case 1:
;;;1463   																				      
;;;1464   																						 {
;;;1465   																							 //display_graphic_win_dir_39x64(display_out_dir);
;;;1466   																							 LCD_buffer[1] &= 0x08;
;;;1467   																							 LCD_buffer[1] |= 0x02;
;;;1468   																						 }
;;;1469   																						 Refresh_LCD();
;;;1470   																					   step_motor_out();
;;;1471   																				     shut_off_all_sensor = 0;																			       
;;;1472   																						 break;
;;;1473   																			case 2:
;;;1474   																				     
;;;1475   																						 	
;;;1476   // 																						 power_off();
;;;1477   // 																		         //flag_CO_PW = 1;
;;;1478   // 																			       
;;;1479   // 																             all_power_state = 0;
;;;1480   // 																			       bsp_LedOn(7);
;;;1481   																			       led_off_flag = 0;
;;;1482   																			       last_recycle_shut_flag = 1;
;;;1483   																			       shut_off_all_sensor = 1;
;;;1484   																			
;;;1485   																			       TIM3->CCR2 = 0;
;;;1486   																						 dc_motor_speed_count = 4;
;;;1487   																						 //display_graphic_speed_33x64(display_no_speed);
;;;1488   																						 LCD_buffer[1] |= 0x08;//led speed
;;;1489   																						 LCD_buffer[2]  = 0x00;
;;;1490   																			
;;;1491   																			       mode_time_switch_flag = 0;
;;;1492   																						 CO2_PW_DISABLE;
;;;1493   																						 flag_CO_PW = 0;
;;;1494   																			       power_on_init_time_flag = 0;
;;;1495   																			       bsp_LedOff(1);
;;;1496   																						 bsp_LedOff(2);
;;;1497   																						 bsp_LedOff(3);
;;;1498   																			       //LCD_buffer[6] &= 0x07;//speed led
;;;1499   																			       flag_PM_PW = 0;
;;;1500                                                bsp_LedOff(4);
;;;1501   																						 bsp_LedOff(5);
;;;1502   																						 bsp_LedOff(6);
;;;1503   																			       
;;;1504   																			       ANION_DISABLE;
;;;1505   																		         anion_PW_state = 0;
;;;1506   // 																		        // LCD_buffer[7] &= 0x07;//display_graphic_tree_clear();
;;;1507    																						 LCD_buffer[7] = 0x00;
;;;1508   																			      // Clear_LCD();
;;;1509                                                {
;;;1510   																							 //display_graphic_win_dir_39x64(display_stright_dir);
;;;1511   																							 LCD_buffer[1] &= 0x08;
;;;1512   																							 LCD_buffer[1] |= 0x04;
;;;1513   																						 }
;;;1514   																						 Refresh_LCD();
;;;1515   																						 step_motor_out();																			
;;;1516   																						 break;
;;;1517   																			case 3:
;;;1518   																						 																		
;;;1519   																						 break;
;;;1520   																			default:
;;;1521   																				     CO2_PW_DISABLE;
000e32  4985              LDR      r1,|L1.4168|
000e34  1d09              ADDS     r1,r1,#4
000e36  f8c1b000          STR      r11,[r1,#0]
;;;1522   																			       bsp_LedOff(1);
000e3a  2001              MOVS     r0,#1
000e3c  f7fffffe          BL       bsp_LedOff
;;;1523   																						 bsp_LedOff(2);
000e40  2002              MOVS     r0,#2
000e42  f7fffffe          BL       bsp_LedOff
;;;1524   																						 bsp_LedOff(3);
000e46  2003              MOVS     r0,#3
000e48  f7fffffe          BL       bsp_LedOff
;;;1525   																			       bsp_LedOff(4);
000e4c  2004              MOVS     r0,#4
000e4e  f7fffffe          BL       bsp_LedOff
;;;1526   																						 bsp_LedOff(5);
000e52  2005              MOVS     r0,#5
000e54  f7fffffe          BL       bsp_LedOff
;;;1527   																						 bsp_LedOff(6);
000e58  2006              MOVS     r0,#6
000e5a  f7fffffe          BL       bsp_LedOff
;;;1528   																						 flag_PM_PW = 0;
000e5e  702e              STRB     r6,[r5,#0]
;;;1529   																			       LCD_buffer[6] &= 0x07;//speed led
000e60  79a0              LDRB     r0,[r4,#6]  ; LCD_buffer
000e62  f0000007          AND      r0,r0,#7
000e66  71a0              STRB     r0,[r4,#6]
;;;1530   																						 flag_CO_PW = 0;
000e68  706e              STRB     r6,[r5,#1]
                  |L1.3690|
;;;1531   																						 break;
000e6a  e0e8              B        |L1.4158|
                  |L1.3692|
000e6c  79a8              LDRB     r0,[r5,#6]            ;1423  ; last_recycle_shut_flag
000e6e  2801              CMP      r0,#1                 ;1423
000e70  d111              BNE      |L1.3734|
000e72  71ae              STRB     r6,[r5,#6]            ;1425
000e74  f8c89010          STR      r9,[r8,#0x10]         ;1427
000e78  7228              STRB     r0,[r5,#8]            ;1428
000e7a  79e0              LDRB     r0,[r4,#7]            ;1429  ; LCD_buffer
000e7c  f2475130          MOV      r1,#0x7530            ;1432
000e80  f0400008          ORR      r0,r0,#8              ;1429
000e84  71e0              STRB     r0,[r4,#7]            ;1429
000e86  74ee              STRB     r6,[r5,#0x13]         ;1431
000e88  2003              MOVS     r0,#3                 ;1432
000e8a  f7fffffe          BL       bsp_StartTimer
000e8e  f7fffffe          BL       PM2_5_Green_Led
000e92  f7fffffe          BL       co2_Green_Led
                  |L1.3734|
000e96  70ae              STRB     r6,[r5,#2]            ;1437
000e98  f7fffffe          BL       PM2_5_Green_Led
000e9c  2001              MOVS     r0,#1                 ;1439
000e9e  7028              STRB     r0,[r5,#0]            ;1439
000ea0  7068              STRB     r0,[r5,#1]            ;1441
000ea2  f7fffffe          BL       co2_Green_Led
000ea6  4968              LDR      r1,|L1.4168|
000ea8  f8c1b000          STR      r11,[r1,#0]           ;1444
000eac  7860              LDRB     r0,[r4,#1]            ;1447  ; LCD_buffer
000eae  200b              MOVS     r0,#0xb               ;1451
000eb0  7060              STRB     r0,[r4,#1]            ;1451
000eb2  200c              MOVS     r0,#0xc               ;1452
000eb4  70a0              STRB     r0,[r4,#2]            ;1452
000eb6  2002              MOVS     r0,#2                 ;1453
000eb8  7528              STRB     r0,[r5,#0x14]         ;1453
000eba  f7fffffe          BL       Refresh_LCD
000ebe  f7fffffe          BL       start_motor
000ec2  4862              LDR      r0,|L1.4172|
000ec4  3038              ADDS     r0,r0,#0x38           ;1456
000ec6  8007              STRH     r7,[r0,#0]            ;1456
000ec8  f7fffffe          BL       step_motor_in
000ecc  e0b7              B        |L1.4158|
                  |L1.3790|
000ece  7860              LDRB     r0,[r4,#1]            ;1466  ; LCD_buffer
000ed0  f0000008          AND      r0,r0,#8              ;1466
000ed4  f0400002          ORR      r0,r0,#2              ;1467
000ed8  7060              STRB     r0,[r4,#1]            ;1467
000eda  f7fffffe          BL       Refresh_LCD
000ede  f7fffffe          BL       step_motor_out
                  |L1.3810|
000ee2  70ae              STRB     r6,[r5,#2]            ;1471
000ee4  e0ab              B        |L1.4158|
                  |L1.3814|
000ee6  762e              STRB     r6,[r5,#0x18]         ;1481
000ee8  2001              MOVS     r0,#1                 ;1482
000eea  71a8              STRB     r0,[r5,#6]            ;1482
000eec  70a8              STRB     r0,[r5,#2]            ;1483
000eee  4857              LDR      r0,|L1.4172|
000ef0  3038              ADDS     r0,r0,#0x38           ;1485
000ef2  8006              STRH     r6,[r0,#0]            ;1485
000ef4  752f              STRB     r7,[r5,#0x14]         ;1486
000ef6  7860              LDRB     r0,[r4,#1]            ;1488  ; LCD_buffer
000ef8  4953              LDR      r1,|L1.4168|
000efa  f0400008          ORR      r0,r0,#8              ;1488
000efe  7060              STRB     r0,[r4,#1]            ;1488
000f00  70a6              STRB     r6,[r4,#2]            ;1489
000f02  1d09              ADDS     r1,r1,#4              ;1492
000f04  726e              STRB     r6,[r5,#9]            ;1491
000f06  f8c1b000          STR      r11,[r1,#0]           ;1492
000f0a  706e              STRB     r6,[r5,#1]            ;1493
000f0c  746e              STRB     r6,[r5,#0x11]         ;1494
000f0e  2001              MOVS     r0,#1                 ;1495
000f10  f7fffffe          BL       bsp_LedOff
000f14  2002              MOVS     r0,#2                 ;1496
000f16  f7fffffe          BL       bsp_LedOff
000f1a  2003              MOVS     r0,#3                 ;1497
000f1c  f7fffffe          BL       bsp_LedOff
000f20  702e              STRB     r6,[r5,#0]            ;1499
000f22  2004              MOVS     r0,#4                 ;1500
000f24  f7fffffe          BL       bsp_LedOff
000f28  2005              MOVS     r0,#5                 ;1501
000f2a  f7fffffe          BL       bsp_LedOff
000f2e  2006              MOVS     r0,#6                 ;1502
000f30  f7fffffe          BL       bsp_LedOff
000f34  f8c89014          STR      r9,[r8,#0x14]         ;1504
000f38  722e              STRB     r6,[r5,#8]            ;1505
000f3a  71e6              STRB     r6,[r4,#7]            ;1507
000f3c  7860              LDRB     r0,[r4,#1]            ;1511  ; LCD_buffer
000f3e  f0000008          AND      r0,r0,#8              ;1511
000f42  f0400004          ORR      r0,r0,#4              ;1512
000f46  7060              STRB     r0,[r4,#1]            ;1512
000f48  f7fffffe          BL       Refresh_LCD
000f4c  f7fffffe          BL       step_motor_out
000f50  e075              B        |L1.4158|
                  |L1.3922|
;;;1532   																			
;;;1533   																	}
;;;1534                                     																
;;;1535   																	
;;;1536   													  }
;;;1537   														
;;;1538   														break;
;;;1539   														
;;;1540   				case KEY_DOWN_K5:	//anion power
;;;1541           case IR_KEY_ANION:			
;;;1542   					                  
;;;1543   					                  if(all_power_state==1)
000f52  7b68              LDRB     r0,[r5,#0xd]  ; all_power_state
000f54  2801              CMP      r0,#1
000f56  d172              BNE      |L1.4158|
;;;1544   														{			
;;;1545   															    speak_one_time();
000f58  f7fffffe          BL       speak_one_time
;;;1546   																	if(anion_PW_state==0)
000f5c  7a28              LDRB     r0,[r5,#8]  ; anion_PW_state
;;;1547   																	{
;;;1548   																		ANION_EN;
;;;1549   																		anion_PW_state = 1;
;;;1550   																		LCD_buffer[7] |= 0x08;//display_graphic_tree_32x64(display_tree);
;;;1551   																	}
;;;1552   																	else
;;;1553   																	{
;;;1554   																		ANION_DISABLE;
000f5e  4641              MOV      r1,r8
000f60  2800              CMP      r0,#0                 ;1546
000f62  4648              MOV      r0,r9
000f64  d006              BEQ      |L1.3956|
000f66  6148              STR      r0,[r1,#0x14]
;;;1555   																		anion_PW_state = 0;
000f68  722e              STRB     r6,[r5,#8]
;;;1556   																		LCD_buffer[7] &= 0x07;//display_graphic_tree_clear();
000f6a  79e0              LDRB     r0,[r4,#7]  ; LCD_buffer
000f6c  f0000007          AND      r0,r0,#7
                  |L1.3952|
000f70  71e0              STRB     r0,[r4,#7]            ;1550
000f72  e064              B        |L1.4158|
                  |L1.3956|
000f74  6108              STR      r0,[r1,#0x10]         ;1548
000f76  2001              MOVS     r0,#1                 ;1549
000f78  7228              STRB     r0,[r5,#8]            ;1549
000f7a  79e0              LDRB     r0,[r4,#7]            ;1550  ; LCD_buffer
000f7c  f0400008          ORR      r0,r0,#8              ;1550
000f80  e7f6              B        |L1.3952|
                  |L1.3970|
;;;1557   																	}
;;;1558   													  }
;;;1559   														
;;;1560   														break;
;;;1561   														
;;;1562   			  case KEY_DOWN_K6:	//TIME
;;;1563           case IR_KEY_TIME:	//第6键		
;;;1564   					                  
;;;1565   					                  if(all_power_state==1)
000f82  7b68              LDRB     r0,[r5,#0xd]  ; all_power_state
000f84  2801              CMP      r0,#1
000f86  d15a              BNE      |L1.4158|
;;;1566   														{	
;;;1567   															    speak_one_time();
000f88  f7fffffe          BL       speak_one_time
;;;1568   															    if(timing_state<5)
000f8c  7da8              LDRB     r0,[r5,#0x16]  ; timing_state
000f8e  2805              CMP      r0,#5
000f90  d205              BCS      |L1.3998|
000f92  1c40              ADDS     r0,r0,#1
;;;1569   																	{
;;;1570   																		timing_state++;
000f94  b2c0              UXTB     r0,r0
000f96  75a8              STRB     r0,[r5,#0x16]
;;;1571   																	}
;;;1572   																	else
;;;1573   																	{
;;;1574   																		timing_state = 0;
;;;1575   																	}
;;;1576   																	
;;;1577   																	if(timing_state!=5)
000f98  2805              CMP      r0,#5
000f9a  d101              BNE      |L1.4000|
000f9c  e003              B        |L1.4006|
                  |L1.3998|
000f9e  75ae              STRB     r6,[r5,#0x16]         ;1574
                  |L1.4000|
;;;1578   																	{
;;;1579   																		timing_flag = 1;
000fa0  2001              MOVS     r0,#1
000fa2  71e8              STRB     r0,[r5,#7]
000fa4  e000              B        |L1.4008|
                  |L1.4006|
;;;1580   																	}
;;;1581   																	else
;;;1582   																	{
;;;1583   																		timing_flag = 0;
000fa6  71ee              STRB     r6,[r5,#7]
                  |L1.4008|
;;;1584   																	}
;;;1585   																	bsp_StartAutoTimer(0,60000);
000fa8  f64e2160          MOV      r1,#0xea60
000fac  2000              MOVS     r0,#0
000fae  f7fffffe          BL       bsp_StartAutoTimer
;;;1586   																	switch(timing_state)
000fb2  7da8              LDRB     r0,[r5,#0x16]  ; timing_state
000fb4  2806              CMP      r0,#6
000fb6  d240              BCS      |L1.4154|
000fb8  e8dff000          TBB      [pc,r0]
000fbc  030a0f1d          DCB      0x03,0x0a,0x0f,0x1d
000fc0  2a33              DCB      0x2a,0x33
;;;1587   																	{
;;;1588   																		case 0:
;;;1589   																					 timing_time_min_value = 120;
000fc2  2078              MOVS     r0,#0x78
;;;1590   																		       //display_graphic_54x64_single_clear();
;;;1591   																		       //display_graphic_27x64_single(display_time_2);
;;;1592   																		       LCD_buffer[3]  = 0x00;//speed led
000fc4  6268              STR      r0,[r5,#0x24]  ; timing_time_min_value
000fc6  70e6              STRB     r6,[r4,#3]
;;;1593   																					 LCD_buffer[4]  = 0x08;//speed led
000fc8  2008              MOVS     r0,#8
000fca  7120              STRB     r0,[r4,#4]
;;;1594   																					 LCD_buffer[5]  = 0x0D;//speed led
000fcc  200d              MOVS     r0,#0xd
;;;1595   																					 LCD_buffer[6] &= 0x08;//speed led
;;;1596   																					 LCD_buffer[6] |= 0x03;//speed led
;;;1597   																					 break;
000fce  e018              B        |L1.4098|
;;;1598   																		case 1:
;;;1599   																					 timing_time_min_value = 240;
000fd0  20f0              MOVS     r0,#0xf0
;;;1600   																	         //display_graphic_27x64_single(display_time_4);
;;;1601   																		       LCD_buffer[3]  = 0x00;//speed led
000fd2  6268              STR      r0,[r5,#0x24]  ; timing_time_min_value
000fd4  70e6              STRB     r6,[r4,#3]
;;;1602   																					 LCD_buffer[4]  = 0x08;//speed led
000fd6  2008              MOVS     r0,#8
;;;1603   																					 LCD_buffer[5]  = 0x02;//speed led
;;;1604   																					 LCD_buffer[6] &= 0x08;//speed led
;;;1605   																					 LCD_buffer[6] |= 0x07;//speed led
;;;1606   																					 break;
000fd8  e020              B        |L1.4124|
;;;1607   																		case 2:
;;;1608   																					 timing_time_min_value = 480;
000fda  f44f70f0          MOV      r0,#0x1e0
;;;1609   																		       //display_graphic_27x64_single(display_time_8);
;;;1610   																		       LCD_buffer[3]  = 0x00;//speed led
000fde  6268              STR      r0,[r5,#0x24]  ; timing_time_min_value
000fe0  70e6              STRB     r6,[r4,#3]
;;;1611   																					 LCD_buffer[4]  = 0x08;//speed led
000fe2  2008              MOVS     r0,#8
000fe4  7120              STRB     r0,[r4,#4]
;;;1612   																					 LCD_buffer[5]  = 0x0F;//speed led
000fe6  200f              MOVS     r0,#0xf
                  |L1.4072|
000fe8  7160              STRB     r0,[r4,#5]            ;1603
000fea  79a0              LDRB     r0,[r4,#6]            ;1604  ; LCD_buffer
000fec  f0000008          AND      r0,r0,#8              ;1604
000ff0  f0400007          ORR      r0,r0,#7              ;1605
000ff4  e01f              B        |L1.4150|
;;;1613   																					 LCD_buffer[6] &= 0x08;//speed led
;;;1614   																					 LCD_buffer[6] |= 0x07;//speed led
;;;1615   																					 break;
;;;1616   																		case 3:
;;;1617   																					 timing_time_min_value = 720;
000ff6  f44f7034          MOV      r0,#0x2d0
;;;1618   																		       //display_graphic_27x64_1(display_time_1);
;;;1619   																		       //display_graphic_27x64_2(display_time_2);
;;;1620   																					 LCD_buffer[3]  = 0x00;//speed led
000ffa  6268              STR      r0,[r5,#0x24]  ; timing_time_min_value
000ffc  70e6              STRB     r6,[r4,#3]
;;;1621   																					 LCD_buffer[4]  = 0x0D;//speed led
000ffe  200d              MOVS     r0,#0xd
001000  7120              STRB     r0,[r4,#4]
                  |L1.4098|
001002  7160              STRB     r0,[r4,#5]            ;1594
001004  79a0              LDRB     r0,[r4,#6]            ;1595  ; LCD_buffer
001006  f0000008          AND      r0,r0,#8              ;1595
00100a  f0400003          ORR      r0,r0,#3              ;1596
00100e  e012              B        |L1.4150|
;;;1622   																					 LCD_buffer[5]  = 0x0D;//speed led
;;;1623   																					 LCD_buffer[6] &= 0x08;//speed led
;;;1624   																					 LCD_buffer[6] |= 0x03;//speed led
;;;1625   																					 break;
;;;1626   																		
;;;1627   																		case 4:
;;;1628   																					 timing_time_min_value = 1440;
001010  f44f60b4          MOV      r0,#0x5a0
;;;1629   																		       //display_graphic_27x64_1(display_time_2);
;;;1630   																		       //display_graphic_27x64_2(display_time_4);																	
;;;1631   																		       LCD_buffer[3]  = 0x0D;//speed led
001014  6268              STR      r0,[r5,#0x24]  ; timing_time_min_value
001016  200d              MOVS     r0,#0xd
001018  70e0              STRB     r0,[r4,#3]
;;;1632   																					 LCD_buffer[4]  = 0x0B;//speed led
00101a  200b              MOVS     r0,#0xb
                  |L1.4124|
00101c  7120              STRB     r0,[r4,#4]
;;;1633   																					 LCD_buffer[5]  = 0x02;//speed led
00101e  2002              MOVS     r0,#2
001020  e7e2              B        |L1.4072|
;;;1634   																					 LCD_buffer[6] &= 0x08;//speed led
;;;1635   																					 LCD_buffer[6] |= 0x07;//speed led
;;;1636   																					 break;
;;;1637   																		case 5:
;;;1638   //                                         //ff																	
;;;1639   																		       LCD_buffer[3]  = 0x0F;//speed led
001022  200f              MOVS     r0,#0xf
001024  70e0              STRB     r0,[r4,#3]
;;;1640   																					 LCD_buffer[4]  = 0x0D;//speed led
001026  210d              MOVS     r1,#0xd
001028  7121              STRB     r1,[r4,#4]
;;;1641   																					 LCD_buffer[5]  = 0x0F;//speed led
00102a  7160              STRB     r0,[r4,#5]
;;;1642   																					 LCD_buffer[6] &= 0x08;//speed led
00102c  79a0              LDRB     r0,[r4,#6]  ; LCD_buffer
00102e  f0000008          AND      r0,r0,#8
;;;1643   																					 LCD_buffer[6] |= 0x05;//speed led
001032  f0400005          ORR      r0,r0,#5
                  |L1.4150|
001036  71a0              STRB     r0,[r4,#6]
001038  e001              B        |L1.4158|
                  |L1.4154|
;;;1644   																					 break;
;;;1645   																		default:
;;;1646   																					 timing_time_min_value = 60;
00103a  203c              MOVS     r0,#0x3c
00103c  6268              STR      r0,[r5,#0x24]  ; timing_time_min_value
                  |L1.4158|
;;;1647   																					 break;
;;;1648   																	}
;;;1649   																	
;;;1650   													  }
;;;1651   														
;;;1652   														break;
;;;1653   				
;;;1654   				default:
;;;1655   														if (ucKeyCode >= IR_KEY_STRAT)
;;;1656   														{
;;;1657   														}
;;;1658   														break;
;;;1659   			}
;;;1660   			
;;;1661   			Refresh_LCD();
00103e  f7fffffe          BL       Refresh_LCD
001042  f7ffbadb          B        |L1.1532|
;;;1662   		}
;;;1663   		
;;;1664   	}
;;;1665   }
                          ENDP

001046  0000              DCW      0x0000
                  |L1.4168|
                          DCD      0x40010810
                  |L1.4172|
                          DCD      0x40000400

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  display_num_PM
                          %        12

                          AREA ||area_number.4||, DATA, NOINIT, ALIGN=0

                          EXPORTAS ||area_number.4||, ||.bss||
                  keys_show
                          %        30

                          AREA ||.data||, DATA, ALIGN=2

                  flag_PM_PW
000000  00                DCB      0x00
                  flag_CO_PW
000001  00                DCB      0x00
                  shut_off_all_sensor
000002  00                DCB      0x00
                  speed_count_direct
000003  00                DCB      0x00
                  step_motor_position
000004  00                DCB      0x00
                  step_motor_moving_flag
000005  00                DCB      0x00
                  last_recycle_shut_flag
000006  00                DCB      0x00
                  timing_flag
000007  00                DCB      0x00
                  anion_PW_state
000008  00                DCB      0x00
                  mode_time_switch_flag
000009  00                DCB      0x00
                  work_0_1_mode_state
00000a  00                DCB      0x00
                  work_mode
00000b  00                DCB      0x00
                  manul_flag
00000c  00                DCB      0x00
                  all_power_state
00000d  00                DCB      0x00
                  display_chang_face_flag
00000e  00                DCB      0x00
                  co2_pollute_flag
00000f  00                DCB      0x00
                  PM2_5_pollute_flag
000010  00                DCB      0x00
                  power_on_init_time_flag
000011  00                DCB      0x00
                  pollute_flag_last
000012  00                DCB      0x00
                  start_delay_30_flag
000013  00                DCB      0x00
                  dc_motor_speed_count
000014  00                DCB      0x00
                  air_dir_recycle_count
000015  00                DCB      0x00
                  timing_state
000016  00                DCB      0x00
                  last_dc_motor_speed_count
000017  00                DCB      0x00
                  led_off_flag
000018  0000              DCB      0x00,0x00
                  Co2_value
00001a  0000              DCB      0x00,0x00
                  PM2_5_concentration
00001c  00000000          DCB      0x00,0x00,0x00,0x00
                  timing_count
                          DCD      0x00000000
                  timing_time_min_value
                          DCD      0x00000000
                  mode_time_count
                          DCD      0x00000000
                  step_state
                          DCD      0x00000000
                  step_state_init
                          DCD      0x00000000
                  PM2_5_value
                          DCD      0x00000000
                  display_conc_PM
000038  00000000          DCB      0x00,0x00,0x00,0x00
00003c  000000            DCB      0x00,0x00,0x00
                  display_CO2_conc
00003f  00                DCB      0x00
                          DCD      0x00000000
000044  0000              DCB      0x00,0x00
                  get_CO2_CMD
000046  ff01              DCB      0xff,0x01
000048  86000000          DCB      0x86,0x00,0x00,0x00
00004c  000079            DCB      0x00,0x00,0x79

                          AREA ||area_number.7||, DATA, ALIGN=2

                          EXPORTAS ||area_number.7||, ||.data||
                  Ctr_Flag
                          DCD      0x00000000

                          AREA ||area_number.8||, DATA, ALIGN=1

                          EXPORTAS ||area_number.8||, ||.data||
                  gyro_zero_compansate
000000  0000              DCB      0x00,0x00

                  __ARM_use_no_argv EQU 0
