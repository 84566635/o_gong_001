; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\interrup_init.o --asm_dir=.\lis\ --list_dir=.\lis\ --depend=.\interrup_init.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931 -I.\user\inc -I.\stdperiph_driver\inc -I.\cmsis -ID:\Keil_v5\ARM\RV31\INC -Id:\Keil_v5\ARM\RV31\INC -Id:\Keil_v5\ARM\CMSIS\Include -Id:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=521 -DUSE_STDPERIPH_DRIVER -DSTM32F10X_MD --omf_browse=.\interrup_init.crf user\src\interrup_init.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  TIM2_Configuration PROC
;;;10     
;;;11     void TIM2_Configuration(void) //64/2*2=64MHZ
000000  b53e              PUSH     {r1-r5,lr}
;;;12     {
;;;13     		TIM_TimeBaseInitTypeDef TIM_TimeBase;                                     
;;;14     		TIM_DeInit(TIM2);
000002  f04f4480          MOV      r4,#0x40000000
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       TIM_DeInit
;;;15     		TIM_TimeBase.TIM_Period=(3000-1);
00000c  f64030b7          MOV      r0,#0xbb7
000010  f8ad0004          STRH     r0,[sp,#4]
;;;16     		TIM_TimeBase.TIM_Prescaler=63;
000014  203f              MOVS     r0,#0x3f
000016  f8ad0000          STRH     r0,[sp,#0]
;;;17     		TIM_TimeBase.TIM_ClockDivision = TIM_CKD_DIV1;  
00001a  2100              MOVS     r1,#0
00001c  f8ad1006          STRH     r1,[sp,#6]
;;;18     		TIM_TimeBase.TIM_CounterMode = TIM_CounterMode_Up;
000020  f8ad1002          STRH     r1,[sp,#2]
;;;19     		TIM_TimeBaseInit(TIM2,&TIM_TimeBase);
000024  4669              MOV      r1,sp
000026  4620              MOV      r0,r4
000028  f7fffffe          BL       TIM_TimeBaseInit
;;;20     		TIM_ClearITPendingBit(TIM2,TIM_IT_Update);
00002c  2101              MOVS     r1,#1
00002e  4620              MOV      r0,r4
000030  f7fffffe          BL       TIM_ClearITPendingBit
;;;21     		TIM_ClearFlag(TIM2,TIM_FLAG_Update);
000034  2101              MOVS     r1,#1
000036  4620              MOV      r0,r4
000038  f7fffffe          BL       TIM_ClearFlag
;;;22     		TIM_ITConfig(TIM2,TIM_IT_Update,ENABLE);
00003c  2201              MOVS     r2,#1
00003e  4611              MOV      r1,r2
000040  4620              MOV      r0,r4
000042  f7fffffe          BL       TIM_ITConfig
;;;23         //TIM_Cmd(TIM2,ENABLE);
;;;24     	  //TIM2->CR1 |= TIM_CR1_CEN;
;;;25     }
000046  bd3e              POP      {r1-r5,pc}
;;;26     
                          ENDP

                  TIM3_Configuration PROC
;;;27     	void TIM3_Configuration(void)
000048  b530              PUSH     {r4,r5,lr}
;;;28     {
;;;29         TIM_OCInitTypeDef  TIM_OCInitStructure;
;;;30     		TIM_TimeBaseInitTypeDef TIM_TimeBase;                                     
;;;31     		TIM_DeInit(TIM3);
00004a  4ddc              LDR      r5,|L1.956|
00004c  b087              SUB      sp,sp,#0x1c           ;28
00004e  4628              MOV      r0,r5
000050  f7fffffe          BL       TIM_DeInit
;;;32     		TIM_TimeBase.TIM_Period=249;
000054  20f9              MOVS     r0,#0xf9
000056  f8ad0014          STRH     r0,[sp,#0x14]
;;;33     		TIM_TimeBase.TIM_Prescaler=31;//36/144=0.25MHZ=4us//64/256 = 0.25MHZ=4us
00005a  201f              MOVS     r0,#0x1f
00005c  f8ad0010          STRH     r0,[sp,#0x10]
;;;34     		TIM_TimeBase.TIM_ClockDivision = TIM_CKD_DIV1;  
000060  2400              MOVS     r4,#0
000062  f8ad4016          STRH     r4,[sp,#0x16]
;;;35     		TIM_TimeBase.TIM_CounterMode = TIM_CounterMode_Up;
000066  f8ad4012          STRH     r4,[sp,#0x12]
;;;36     		TIM_TimeBaseInit(TIM3,&TIM_TimeBase);
00006a  a904              ADD      r1,sp,#0x10
00006c  4628              MOV      r0,r5
00006e  f7fffffe          BL       TIM_TimeBaseInit
;;;37     		TIM_ClearITPendingBit(TIM3,TIM_IT_Update);
000072  2101              MOVS     r1,#1
000074  4628              MOV      r0,r5
000076  f7fffffe          BL       TIM_ClearITPendingBit
;;;38     		TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;        
00007a  2060              MOVS     r0,#0x60
00007c  f8ad0000          STRH     r0,[sp,#0]
;;;39     		TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;
;;;40     		TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
000080  2001              MOVS     r0,#1
000082  f8ad0002          STRH     r0,[sp,#2]
000086  f8ad4008          STRH     r4,[sp,#8]            ;39
;;;41     		TIM_OCInitStructure.TIM_Pulse = 0;
00008a  f8ad4006          STRH     r4,[sp,#6]
;;;42     		TIM_OC2Init(TIM3, &TIM_OCInitStructure);
00008e  4669              MOV      r1,sp
000090  4628              MOV      r0,r5
000092  f7fffffe          BL       TIM_OC2Init
;;;43     		TIM_OC2PreloadConfig(TIM3, TIM_OCPreload_Enable);
000096  2108              MOVS     r1,#8
000098  4628              MOV      r0,r5
00009a  f7fffffe          BL       TIM_OC2PreloadConfig
;;;44     		TIM_ARRPreloadConfig(TIM3, ENABLE);
00009e  2101              MOVS     r1,#1
0000a0  4628              MOV      r0,r5
0000a2  f7fffffe          BL       TIM_ARRPreloadConfig
;;;45     	  TIM_CtrlPWMOutputs(TIM3,ENABLE);
0000a6  2101              MOVS     r1,#1
0000a8  4628              MOV      r0,r5
0000aa  f7fffffe          BL       TIM_CtrlPWMOutputs
;;;46     	
;;;47     
;;;48     				 
;;;49     				 
;;;50     	//TIM_Cmd(TIM3,ENABLE);
;;;51     }
0000ae  b007              ADD      sp,sp,#0x1c
0000b0  bd30              POP      {r4,r5,pc}
;;;52     
                          ENDP

                  USART_InitFun PROC
;;;54     
;;;55     void USART_InitFun(void)
0000b2  b5f0              PUSH     {r4-r7,lr}
;;;56     {
;;;57     		/*	波特率为9600bps;
;;;58     	*	8位数据长度;
;;;59     	*	1个停止位，校验;
;;;60     	*	禁用硬件流控制;
;;;61     	*	禁止USART时钟;
;;;62     	*	时钟极性低;
;;;63     	*	在第1个边沿捕获数据
;;;64     	*	最后一位数据的时钟脉冲不从 SCLK 输出； 
;;;65     	*/
;;;66     	/* 定义 USART 初始化结构体 USART_InitStructure */
;;;67       USART_InitTypeDef USART_InitStructure;
;;;68     	/* 定义 USART 初始化结构体 USART_ClockInitStructure */
;;;69       USART_ClockInitTypeDef  USART_ClockInitStructure;
;;;70     	DMA_InitTypeDef DMA_InitStructure; 
;;;71     
;;;72     	
;;;73     	USART_DeInit(USART1);
0000b4  4fc2              LDR      r7,|L1.960|
0000b6  b08f              SUB      sp,sp,#0x3c           ;56
0000b8  4638              MOV      r0,r7
0000ba  f7fffffe          BL       USART_DeInit
;;;74     	
;;;75     	USART_InitStructure.USART_BaudRate = 9600;
;;;76     	USART_InitStructure.USART_WordLength = USART_WordLength_8b;
0000be  2400              MOVS     r4,#0
0000c0  f44f5516          MOV      r5,#0x2580            ;75
0000c4  f8ad4004          STRH     r4,[sp,#4]
;;;77     	USART_InitStructure.USART_StopBits = USART_StopBits_1;
;;;78     	USART_InitStructure.USART_Parity = USART_Parity_No;
0000c8  f8ad4008          STRH     r4,[sp,#8]
;;;79     	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
;;;80     	USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
0000cc  260c              MOVS     r6,#0xc
0000ce  9500              STR      r5,[sp,#0]            ;76
0000d0  f8ad4006          STRH     r4,[sp,#6]            ;77
0000d4  f8ad400c          STRH     r4,[sp,#0xc]          ;79
0000d8  f8ad600a          STRH     r6,[sp,#0xa]
;;;81     	USART_Init(USART1 , &USART_InitStructure);
0000dc  4669              MOV      r1,sp
0000de  4638              MOV      r0,r7
0000e0  f7fffffe          BL       USART_Init
;;;82     
;;;83     	USART_ITConfig(USART1,USART_IT_RXNE,ENABLE);
0000e4  2201              MOVS     r2,#1
0000e6  f2405125          MOV      r1,#0x525
0000ea  4638              MOV      r0,r7
0000ec  f7fffffe          BL       USART_ITConfig
;;;84     	USART_Cmd(USART1,ENABLE);
0000f0  2101              MOVS     r1,#1
0000f2  4638              MOV      r0,r7
0000f4  f7fffffe          BL       USART_Cmd
;;;85     	
;;;86     
;;;87     /****************************USART2***********************************/	
;;;88     	USART_DeInit(USART2);
0000f8  4fb2              LDR      r7,|L1.964|
0000fa  4638              MOV      r0,r7
0000fc  f7fffffe          BL       USART_DeInit
;;;89     	
;;;90     	USART_InitStructure.USART_BaudRate = 9600;
;;;91     	USART_InitStructure.USART_WordLength = USART_WordLength_8b;
000100  f8ad4004          STRH     r4,[sp,#4]
;;;92     	USART_InitStructure.USART_StopBits = USART_StopBits_1;
;;;93     	USART_InitStructure.USART_Parity = USART_Parity_No;
000104  f8ad4008          STRH     r4,[sp,#8]
000108  9500              STR      r5,[sp,#0]            ;91
00010a  f8ad4006          STRH     r4,[sp,#6]            ;92
;;;94     	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
00010e  f8ad400c          STRH     r4,[sp,#0xc]
;;;95     	USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
000112  f8ad600a          STRH     r6,[sp,#0xa]
;;;96     	USART_Init(USART2 , &USART_InitStructure);
000116  4669              MOV      r1,sp
000118  4638              MOV      r0,r7
00011a  f7fffffe          BL       USART_Init
;;;97     	//下面是时钟初始化
;;;98     	
;;;99     
;;;100    /* DMA1 Channel6 (triggered by USART2 Rx event) Config */ //?? STM32 datasheet 
;;;101    	DMA_DeInit(DMA1_Channel6); 
00011e  4daa              LDR      r5,|L1.968|
000120  4628              MOV      r0,r5
000122  f7fffffe          BL       DMA_DeInit
;;;102    	DMA_InitStructure.DMA_PeripheralBaseAddr = (u32)(&USART2->DR); 
000126  1d38              ADDS     r0,r7,#4
;;;103    	DMA_InitStructure.DMA_MemoryBaseAddr = (u32)PM25DMABuffer; 
000128  9004              STR      r0,[sp,#0x10]
00012a  48a8              LDR      r0,|L1.972|
00012c  e9cd0405          STRD     r0,r4,[sp,#0x14]
;;;104    	DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralSRC; 
;;;105    	DMA_InitStructure.DMA_BufferSize = sizeof(PM25DMABuffer); 
000130  2023              MOVS     r0,#0x23
000132  e9cd0407          STRD     r0,r4,[sp,#0x1c]
;;;106    	DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable; 
;;;107    	DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable; 
000136  2080              MOVS     r0,#0x80
000138  e9cd0409          STRD     r0,r4,[sp,#0x24]
;;;108    	DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Byte; 
;;;109    	DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_Byte; 
;;;110    	DMA_InitStructure.DMA_Mode = DMA_Mode_Circular; 
00013c  2020              MOVS     r0,#0x20
00013e  e9cd400b          STRD     r4,r0,[sp,#0x2c]
;;;111    	DMA_InitStructure.DMA_Priority = DMA_Priority_VeryHigh; 
000142  02b0              LSLS     r0,r6,#10
;;;112    	DMA_InitStructure.DMA_M2M = DMA_M2M_Disable; 
;;;113    	DMA_Init(DMA1_Channel6, &DMA_InitStructure);
000144  e9cd040d          STRD     r0,r4,[sp,#0x34]
000148  a904              ADD      r1,sp,#0x10
00014a  4628              MOV      r0,r5
00014c  f7fffffe          BL       DMA_Init
;;;114    //	
;;;115    	DMA_ITConfig(DMA1_Channel6, DMA_IT_TC, ENABLE); 
000150  2201              MOVS     r2,#1
000152  2102              MOVS     r1,#2
000154  4628              MOV      r0,r5
000156  f7fffffe          BL       DMA_ITConfig
;;;116    	
;;;117    		/* Enable USART2 DMA Rxrequest */ 
;;;118    	USART_DMACmd(USART2, USART_DMAReq_Rx, ENABLE); 
00015a  2201              MOVS     r2,#1
00015c  2140              MOVS     r1,#0x40
00015e  4638              MOV      r0,r7
000160  f7fffffe          BL       USART_DMACmd
;;;119    	/* Enable DMA1 Channel6 */ 
;;;120    	DMA_Cmd(DMA1_Channel6, ENABLE);
000164  2101              MOVS     r1,#1
000166  4628              MOV      r0,r5
000168  f7fffffe          BL       DMA_Cmd
;;;121    //	//USART_ITConfig(USART2,USART_IT_RXNE,ENABLE);
;;;122    	USART_Cmd(USART2,ENABLE);
00016c  2101              MOVS     r1,#1
00016e  4638              MOV      r0,r7
000170  f7fffffe          BL       USART_Cmd
;;;123    	
;;;124    	
;;;125    }
000174  b00f              ADD      sp,sp,#0x3c
000176  bdf0              POP      {r4-r7,pc}
;;;126    
                          ENDP

                  NVIC_Configuration PROC
;;;127    void NVIC_Configuration(void)
000178  b538              PUSH     {r3-r5,lr}
;;;128    
;;;129    {
;;;130    
;;;131    		NVIC_InitTypeDef NVIC_InitStructure;
;;;132    		NVIC_PriorityGroupConfig(NVIC_PriorityGroup_1);
00017a  f44f60c0          MOV      r0,#0x600
00017e  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;133    	
;;;134    		NVIC_InitStructure.NVIC_IRQChannel = USART2_IRQn;
000182  2026              MOVS     r0,#0x26
000184  f88d0000          STRB     r0,[sp,#0]
;;;135    		NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
000188  2401              MOVS     r4,#1
00018a  f88d4001          STRB     r4,[sp,#1]
;;;136    		NVIC_InitStructure.NVIC_IRQChannelSubPriority = 2;
00018e  2002              MOVS     r0,#2
000190  f88d0002          STRB     r0,[sp,#2]
;;;137    		NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
000194  f88d4003          STRB     r4,[sp,#3]
;;;138    		NVIC_Init(&NVIC_InitStructure);
000198  4668              MOV      r0,sp
00019a  f7fffffe          BL       NVIC_Init
;;;139    	
;;;140    		
;;;141     		NVIC_InitStructure.NVIC_IRQChannel = DMA1_Channel6_IRQn;
00019e  2010              MOVS     r0,#0x10
0001a0  f88d0000          STRB     r0,[sp,#0]
;;;142        NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
0001a4  2500              MOVS     r5,#0
0001a6  f88d5001          STRB     r5,[sp,#1]
;;;143     		NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;
0001aa  f88d4002          STRB     r4,[sp,#2]
;;;144     		NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
0001ae  f88d4003          STRB     r4,[sp,#3]
;;;145     		NVIC_Init(&NVIC_InitStructure);
0001b2  4668              MOV      r0,sp
0001b4  f7fffffe          BL       NVIC_Init
;;;146    		
;;;147    		NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn;
0001b8  201c              MOVS     r0,#0x1c
0001ba  f88d0000          STRB     r0,[sp,#0]
;;;148        NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
0001be  f88d4001          STRB     r4,[sp,#1]
;;;149    		NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
0001c2  f88d5002          STRB     r5,[sp,#2]
;;;150    		NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
0001c6  f88d4003          STRB     r4,[sp,#3]
;;;151    		NVIC_Init(&NVIC_InitStructure);
0001ca  4668              MOV      r0,sp
0001cc  f7fffffe          BL       NVIC_Init
;;;152    		
;;;153    		NVIC_InitStructure.NVIC_IRQChannel = USART1_IRQn;
0001d0  2025              MOVS     r0,#0x25
0001d2  f88d0000          STRB     r0,[sp,#0]
;;;154        NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
0001d6  f88d5001          STRB     r5,[sp,#1]
;;;155    		NVIC_InitStructure.NVIC_IRQChannelSubPriority = 3;
0001da  2003              MOVS     r0,#3
0001dc  f88d0002          STRB     r0,[sp,#2]
;;;156    		NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
0001e0  f88d4003          STRB     r4,[sp,#3]
;;;157    		NVIC_Init(&NVIC_InitStructure);
0001e4  4668              MOV      r0,sp
0001e6  f7fffffe          BL       NVIC_Init
;;;158    
;;;159    }
0001ea  bd38              POP      {r3-r5,pc}
;;;160    
                          ENDP

                  GPIO_Configuration PROC
;;;161    	void GPIO_Configuration(void)
0001ec  e92d4ff8          PUSH     {r3-r11,lr}
;;;162    	{
;;;163    			GPIO_InitTypeDef GPIO_InitStruct;
;;;164    		
;;;165    
;;;166    		
;;;167    		//HALL	
;;;168    			GPIO_InitStruct.GPIO_Mode = GPIO_Mode_IN_FLOATING;
0001f0  2604              MOVS     r6,#4
0001f2  f88d6003          STRB     r6,[sp,#3]
;;;169    			GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
0001f6  2403              MOVS     r4,#3
0001f8  f88d4002          STRB     r4,[sp,#2]
;;;170    			GPIO_InitStruct.GPIO_Pin = GPIO_Pin_5;	
0001fc  f04f0920          MOV      r9,#0x20
000200  f8ad9000          STRH     r9,[sp,#0]
;;;171    			GPIO_Init(GPIOA,&GPIO_InitStruct);
000204  4669              MOV      r1,sp
000206  4872              LDR      r0,|L1.976|
000208  f7fffffe          BL       GPIO_Init
;;;172    						
;;;173    
;;;174    /**********************************************************************OUT************************/		
;;;175    // 	   //PWM
;;;176    		
;;;177    		GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable, ENABLE);//< JTAG-DP Disabled and SW-DP Enabled *///PA15/JTDI  PB4/JNRST PB3/JTDO
00020c  2101              MOVS     r1,#1
00020e  4871              LDR      r0,|L1.980|
000210  f7fffffe          BL       GPIO_PinRemapConfig
;;;178    		
;;;179    // TIM3_CH2 PWM PA7			
;;;180     			GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF_PP;
000214  f04f0818          MOV      r8,#0x18
000218  f88d8003          STRB     r8,[sp,#3]
;;;181     			GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
00021c  f88d4002          STRB     r4,[sp,#2]
;;;182     			GPIO_InitStruct.GPIO_Pin = GPIO_Pin_7;	
000220  2080              MOVS     r0,#0x80
000222  f8ad0000          STRH     r0,[sp,#0]
;;;183     			GPIO_Init(GPIOA,&GPIO_InitStruct);
000226  4669              MOV      r1,sp
000228  4869              LDR      r0,|L1.976|
00022a  f7fffffe          BL       GPIO_Init
;;;184    			
;;;185    			// PM_P_C  PA12			
;;;186     			GPIO_InitStruct.GPIO_Mode = GPIO_Mode_Out_PP;
00022e  2510              MOVS     r5,#0x10
000230  f88d5003          STRB     r5,[sp,#3]
;;;187     			GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
000234  f88d4002          STRB     r4,[sp,#2]
;;;188     			GPIO_InitStruct.GPIO_Pin = GPIO_Pin_12;	
000238  022f              LSLS     r7,r5,#8
00023a  f8ad7000          STRH     r7,[sp,#0]
;;;189     			GPIO_Init(GPIOA,&GPIO_InitStruct);
00023e  4669              MOV      r1,sp
000240  4863              LDR      r0,|L1.976|
000242  f7fffffe          BL       GPIO_Init
;;;190    			
;;;191    			// CO_P_C  PA15			
;;;192     			GPIO_InitStruct.GPIO_Mode = GPIO_Mode_Out_PP;
000246  f88d5003          STRB     r5,[sp,#3]
;;;193     			GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
00024a  f88d4002          STRB     r4,[sp,#2]
;;;194     			GPIO_InitStruct.GPIO_Pin = GPIO_Pin_15;	
00024e  02e8              LSLS     r0,r5,#11
000250  f8ad0000          STRH     r0,[sp,#0]
;;;195     			GPIO_Init(GPIOA,&GPIO_InitStruct);
000254  4669              MOV      r1,sp
000256  485e              LDR      r0,|L1.976|
000258  f7fffffe          BL       GPIO_Init
;;;196    			
;;;197    			// ANION_C PC8			
;;;198     			GPIO_InitStruct.GPIO_Mode = GPIO_Mode_Out_PP;
00025c  f88d5003          STRB     r5,[sp,#3]
;;;199     			GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
000260  f88d4002          STRB     r4,[sp,#2]
;;;200     			GPIO_InitStruct.GPIO_Pin = GPIO_Pin_8;	
000264  0128              LSLS     r0,r5,#4
;;;201     			GPIO_Init(GPIOC,&GPIO_InitStruct);
000266  f8dfa170          LDR      r10,|L1.984|
00026a  f8ad0000          STRH     r0,[sp,#0]            ;200
00026e  4669              MOV      r1,sp
000270  4650              MOV      r0,r10
000272  f7fffffe          BL       GPIO_Init
;;;202    			
;;;203    			// PM_RST  PA6			
;;;204     			GPIO_InitStruct.GPIO_Mode = GPIO_Mode_Out_PP;
000276  f88d5003          STRB     r5,[sp,#3]
;;;205     			GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
00027a  f88d4002          STRB     r4,[sp,#2]
;;;206     			GPIO_InitStruct.GPIO_Pin = GPIO_Pin_6;	
00027e  2040              MOVS     r0,#0x40
000280  f8ad0000          STRH     r0,[sp,#0]
;;;207     			GPIO_Init(GPIOA,&GPIO_InitStruct);
000284  4669              MOV      r1,sp
000286  4852              LDR      r0,|L1.976|
000288  f7fffffe          BL       GPIO_Init
;;;208    			
;;;209    			// calib_CO2 PB14			
;;;210     			GPIO_InitStruct.GPIO_Mode = GPIO_Mode_Out_PP;
00028c  f88d5003          STRB     r5,[sp,#3]
;;;211     			GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
000290  f88d4002          STRB     r4,[sp,#2]
;;;212     			GPIO_InitStruct.GPIO_Pin = GPIO_Pin_14;	
000294  02a8              LSLS     r0,r5,#10
;;;213     			GPIO_Init(GPIOB,&GPIO_InitStruct);
000296  f8dfb144          LDR      r11,|L1.988|
00029a  f8ad0000          STRH     r0,[sp,#0]            ;212
00029e  4669              MOV      r1,sp
0002a0  4658              MOV      r0,r11
0002a2  f7fffffe          BL       GPIO_Init
;;;214    			
;;;215    			// SPEAKER  PB12			
;;;216     			GPIO_InitStruct.GPIO_Mode = GPIO_Mode_Out_PP;
0002a6  f88d5003          STRB     r5,[sp,#3]
;;;217     			GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
0002aa  f88d4002          STRB     r4,[sp,#2]
;;;218     			GPIO_InitStruct.GPIO_Pin = GPIO_Pin_12;	
0002ae  f8ad7000          STRH     r7,[sp,#0]
;;;219     			GPIO_Init(GPIOB,&GPIO_InitStruct);
0002b2  4669              MOV      r1,sp
0002b4  4658              MOV      r0,r11
0002b6  f7fffffe          BL       GPIO_Init
;;;220    			
;;;221    			// M_EN1 PC12			
;;;222     			GPIO_InitStruct.GPIO_Mode = GPIO_Mode_Out_PP;
0002ba  f88d5003          STRB     r5,[sp,#3]
;;;223     			GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
0002be  f88d4002          STRB     r4,[sp,#2]
;;;224     			GPIO_InitStruct.GPIO_Pin = GPIO_Pin_12;	
0002c2  f8ad7000          STRH     r7,[sp,#0]
;;;225     			GPIO_Init(GPIOC,&GPIO_InitStruct);
0002c6  4669              MOV      r1,sp
0002c8  4650              MOV      r0,r10
0002ca  f7fffffe          BL       GPIO_Init
;;;226    			
;;;227    			// M_EN2  PD2			
;;;228     			GPIO_InitStruct.GPIO_Mode = GPIO_Mode_Out_PP;
0002ce  f88d5003          STRB     r5,[sp,#3]
;;;229     			GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
0002d2  f88d4002          STRB     r4,[sp,#2]
;;;230     			GPIO_InitStruct.GPIO_Pin = GPIO_Pin_2;	
0002d6  f8ad6000          STRH     r6,[sp,#0]
;;;231     			GPIO_Init(GPIOD,&GPIO_InitStruct);
0002da  4669              MOV      r1,sp
0002dc  4840              LDR      r0,|L1.992|
0002de  f7fffffe          BL       GPIO_Init
;;;232    			
;;;233    			// M_IN1 PC10			
;;;234     			GPIO_InitStruct.GPIO_Mode = GPIO_Mode_Out_PP;
0002e2  f88d5003          STRB     r5,[sp,#3]
;;;235     			GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
0002e6  f88d4002          STRB     r4,[sp,#2]
;;;236     			GPIO_InitStruct.GPIO_Pin = GPIO_Pin_10;	
0002ea  01af              LSLS     r7,r5,#6
0002ec  f8ad7000          STRH     r7,[sp,#0]
;;;237     			GPIO_Init(GPIOC,&GPIO_InitStruct);
0002f0  4669              MOV      r1,sp
0002f2  4650              MOV      r0,r10
0002f4  f7fffffe          BL       GPIO_Init
;;;238    			
;;;239    			// M_IN2 PC11			
;;;240     			GPIO_InitStruct.GPIO_Mode = GPIO_Mode_Out_PP;
0002f8  f88d5003          STRB     r5,[sp,#3]
;;;241     			GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
0002fc  f88d4002          STRB     r4,[sp,#2]
;;;242     			GPIO_InitStruct.GPIO_Pin = GPIO_Pin_11;	
000300  01e8              LSLS     r0,r5,#7
000302  f8ad0000          STRH     r0,[sp,#0]
;;;243     			GPIO_Init(GPIOC,&GPIO_InitStruct);
000306  4669              MOV      r1,sp
000308  4650              MOV      r0,r10
00030a  f7fffffe          BL       GPIO_Init
;;;244    			
;;;245    			// M_IN3  PA0			
;;;246     			GPIO_InitStruct.GPIO_Mode = GPIO_Mode_Out_PP;
00030e  f88d5003          STRB     r5,[sp,#3]
;;;247     			GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
000312  f88d4002          STRB     r4,[sp,#2]
;;;248     			GPIO_InitStruct.GPIO_Pin = GPIO_Pin_0;	
000316  2001              MOVS     r0,#1
000318  f8ad0000          STRH     r0,[sp,#0]
;;;249     			GPIO_Init(GPIOA,&GPIO_InitStruct);
00031c  4669              MOV      r1,sp
00031e  482c              LDR      r0,|L1.976|
000320  f7fffffe          BL       GPIO_Init
;;;250    			
;;;251    			// M_IN4 PA4			
;;;252     			GPIO_InitStruct.GPIO_Mode = GPIO_Mode_Out_PP;
000324  f88d5003          STRB     r5,[sp,#3]
;;;253     			GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
000328  f88d4002          STRB     r4,[sp,#2]
;;;254     			GPIO_InitStruct.GPIO_Pin = GPIO_Pin_4;	
00032c  f8ad5000          STRH     r5,[sp,#0]
;;;255     			GPIO_Init(GPIOA,&GPIO_InitStruct);
000330  4669              MOV      r1,sp
000332  4827              LDR      r0,|L1.976|
000334  f7fffffe          BL       GPIO_Init
;;;256    			
;;;257    			// RST PB4/JNRST			
;;;258     			GPIO_InitStruct.GPIO_Mode = GPIO_Mode_Out_PP;
000338  f88d5003          STRB     r5,[sp,#3]
;;;259     			GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
00033c  f88d4002          STRB     r4,[sp,#2]
;;;260     			GPIO_InitStruct.GPIO_Pin = GPIO_Pin_4;	
000340  f8ad5000          STRH     r5,[sp,#0]
;;;261     			GPIO_Init(GPIOB,&GPIO_InitStruct);
000344  4669              MOV      r1,sp
000346  4658              MOV      r0,r11
000348  f7fffffe          BL       GPIO_Init
;;;262    			
;;;263    			// CD/RS PB5			
;;;264     			GPIO_InitStruct.GPIO_Mode = GPIO_Mode_Out_PP;
00034c  f88d5003          STRB     r5,[sp,#3]
;;;265     			GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
000350  f88d4002          STRB     r4,[sp,#2]
;;;266     			GPIO_InitStruct.GPIO_Pin = GPIO_Pin_5;	
000354  f8ad9000          STRH     r9,[sp,#0]
;;;267     			GPIO_Init(GPIOB,&GPIO_InitStruct);
000358  4669              MOV      r1,sp
00035a  4658              MOV      r0,r11
00035c  f7fffffe          BL       GPIO_Init
;;;268    			
;;;269    	/*********************************************************************/		
;;;270    
;;;271    		//AI输入		
;;;272    
;;;273    //UART1
;;;274    		/* Configure USART1 Tx (PA9) as alternate function push-pull */
;;;275    		GPIO_InitStruct.GPIO_Pin = GPIO_Pin_9;
000360  0168              LSLS     r0,r5,#5
000362  f8ad0000          STRH     r0,[sp,#0]
;;;276    		GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
000366  f88d4002          STRB     r4,[sp,#2]
;;;277    		GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF_PP;
00036a  f88d8003          STRB     r8,[sp,#3]
;;;278    		GPIO_Init(GPIOA, &GPIO_InitStruct);
00036e  4669              MOV      r1,sp
000370  4817              LDR      r0,|L1.976|
000372  f7fffffe          BL       GPIO_Init
;;;279    	//usart 
;;;280    		/* Configure USART1 Rx (PA10) as input floating */
;;;281    		GPIO_InitStruct.GPIO_Pin = GPIO_Pin_10;
000376  f8ad7000          STRH     r7,[sp,#0]
;;;282    		GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
00037a  f88d4002          STRB     r4,[sp,#2]
;;;283    		GPIO_InitStruct.GPIO_Mode = GPIO_Mode_IPU;
00037e  2548              MOVS     r5,#0x48
000380  f88d5003          STRB     r5,[sp,#3]
;;;284    		GPIO_Init(GPIOA, &GPIO_InitStruct);
000384  4669              MOV      r1,sp
000386  4812              LDR      r0,|L1.976|
000388  f7fffffe          BL       GPIO_Init
;;;285    //UART2
;;;286    		/* Configure USART2 Tx (PA2) as alternate function push-pull */
;;;287    		GPIO_InitStruct.GPIO_Pin = GPIO_Pin_2;
00038c  f8ad6000          STRH     r6,[sp,#0]
;;;288    		GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
000390  f88d4002          STRB     r4,[sp,#2]
;;;289    		GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF_PP;
000394  f88d8003          STRB     r8,[sp,#3]
;;;290    		GPIO_Init(GPIOA, &GPIO_InitStruct);
000398  4669              MOV      r1,sp
00039a  480d              LDR      r0,|L1.976|
00039c  f7fffffe          BL       GPIO_Init
;;;291    	//usart 
;;;292    		/* Configure USART2 Rx (PA3) as input floating */
;;;293    		GPIO_InitStruct.GPIO_Pin = GPIO_Pin_3;
0003a0  2008              MOVS     r0,#8
0003a2  f8ad0000          STRH     r0,[sp,#0]
;;;294    		GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
0003a6  f88d4002          STRB     r4,[sp,#2]
;;;295    		GPIO_InitStruct.GPIO_Mode = GPIO_Mode_IPU;
0003aa  f88d5003          STRB     r5,[sp,#3]
;;;296    		GPIO_Init(GPIOA, &GPIO_InitStruct);
0003ae  4669              MOV      r1,sp
0003b0  4807              LDR      r0,|L1.976|
0003b2  f7fffffe          BL       GPIO_Init
;;;297    
;;;298    		
;;;299    	}
0003b6  e8bd8ff8          POP      {r3-r11,pc}
                          ENDP

0003ba  0000              DCW      0x0000
                  |L1.956|
                          DCD      0x40000400
                  |L1.960|
                          DCD      0x40013800
                  |L1.964|
                          DCD      0x40004400
                  |L1.968|
                          DCD      0x4002006c
                  |L1.972|
                          DCD      ||.bss||
                  |L1.976|
                          DCD      0x40010800
                  |L1.980|
                          DCD      0x00300200
                  |L1.984|
                          DCD      0x40011000
                  |L1.988|
                          DCD      0x40010c00
                  |L1.992|
                          DCD      0x40011400

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  PM25DMABuffer
                          %        35

                          AREA ||.data||, DATA, ALIGN=1

                  AD_Value
                          DCDU     0x00000000
