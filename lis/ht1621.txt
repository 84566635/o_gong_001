; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\ht1621.o --asm_dir=.\lis\ --list_dir=.\lis\ --depend=.\ht1621.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931 -I.\user\inc -I.\stdperiph_driver\inc -I.\cmsis -ID:\Keil_v5\ARM\RV31\INC -Id:\Keil_v5\ARM\RV31\INC -Id:\Keil_v5\ARM\CMSIS\Include -Id:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=521 -DUSE_STDPERIPH_DRIVER -DSTM32F10X_MD --omf_browse=.\ht1621.crf user\src\HT1621.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  Ht1621Wr_Data PROC
;;;37     //-----------------------------------------------------------------------------------------
;;;38     void Ht1621Wr_Data(uchar Data,uchar cnt) 
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;39      { 
;;;40      uchar i; 
;;;41      for (i=0;i<cnt;i++)
;;;42        { 
;;;43        WR_1621_L;   //HT1621_WR=0; 
000004  f8df91e8          LDR      r9,|L1.496|
000008  2400              MOVS     r4,#0                 ;41
00000a  460f              MOV      r7,r1                 ;39
00000c  4605              MOV      r5,r0                 ;39
;;;44        Delay_uS(10);
;;;45        if((Data & 0x80)==0x80)
;;;46          {
;;;47          DATA_1621_H; //HT1621_DAT=1;
00000e  f04f0a80          MOV      r10,#0x80
000012  2640              MOVS     r6,#0x40              ;43
000014  f1a90804          SUB      r8,r9,#4
000018  e018              B        |L1.76|
00001a  bf00              NOP                            ;43
                  |L1.28|
00001c  f8c96000          STR      r6,[r9,#0]            ;43
000020  200a              MOVS     r0,#0xa               ;44
000022  f7fffffe          BL       delay_us
000026  0628              LSLS     r0,r5,#24             ;45
;;;48          }
;;;49          else
;;;50          {
;;;51          DATA_1621_L; //HT1621_DAT=0;
000028  4650              MOV      r0,r10
00002a  d501              BPL      |L1.48|
00002c  4641              MOV      r1,r8                 ;47
00002e  e000              B        |L1.50|
                  |L1.48|
000030  4649              MOV      r1,r9
                  |L1.50|
000032  6008              STR      r0,[r1,#0]
;;;52          };
;;;53        Delay_uS(10);
000034  200a              MOVS     r0,#0xa
000036  f7fffffe          BL       delay_us
;;;54        WR_1621_H;   //HT1621_WR=1; 
00003a  f8c86000          STR      r6,[r8,#0]
;;;55        Data<<=1;    
00003e  0668              LSLS     r0,r5,#25
000040  0e05              LSRS     r5,r0,#24
;;;56        Delay_uS(10);
000042  200a              MOVS     r0,#0xa
000044  f7fffffe          BL       delay_us
000048  1c64              ADDS     r4,r4,#1
00004a  b2e4              UXTB     r4,r4                 ;41
                  |L1.76|
00004c  42bc              CMP      r4,r7                 ;41
00004e  d3e5              BCC      |L1.28|
;;;57        }; 
;;;58      }
000050  e8bd87f0          POP      {r4-r10,pc}
;;;59     
                          ENDP

                  Ht1621WrOneData PROC
;;;69     //-----------------------------------------------------------------------------------------
;;;70     void Ht1621WrOneData(uchar Addr,uchar Data) 
000054  b570              PUSH     {r4-r6,lr}
;;;71      { 
000056  4606              MOV      r6,r0
;;;72      CS_1621_L;                   //HT1621_CS=0; 
000058  4865              LDR      r0,|L1.496|
00005a  2410              MOVS     r4,#0x10
00005c  460d              MOV      r5,r1                 ;71
00005e  6004              STR      r4,[r0,#0]
;;;73      Ht1621Wr_Data(WRITE_MODE,3); //写入数据标志101 
000060  2103              MOVS     r1,#3
000062  20a0              MOVS     r0,#0xa0
000064  f7fffffe          BL       Ht1621Wr_Data
000068  06b0              LSLS     r0,r6,#26
;;;74      Ht1621Wr_Data(Addr<<2,6);    //写入地址数据 
00006a  0e00              LSRS     r0,r0,#24
00006c  2106              MOVS     r1,#6
00006e  f7fffffe          BL       Ht1621Wr_Data
000072  0728              LSLS     r0,r5,#28
;;;75      Ht1621Wr_Data(Data<<4,4);    //写入数据 
000074  0e00              LSRS     r0,r0,#24
000076  2104              MOVS     r1,#4
000078  f7fffffe          BL       Ht1621Wr_Data
;;;76      CS_1621_H;                   //HT1621_CS=1; 
00007c  485c              LDR      r0,|L1.496|
00007e  1f00              SUBS     r0,r0,#4
000080  6004              STR      r4,[r0,#0]
;;;77      } 
000082  bd70              POP      {r4-r6,pc}
;;;78     
                          ENDP

                  Ht1621WrAllData PROC
;;;87     //-----------------------------------------------------------------------------------------
;;;88     void Ht1621WrAllData(unsigned char Dis_Status) 
000084  b570              PUSH     {r4-r6,lr}
;;;89      { 
000086  4606              MOV      r6,r0
;;;90      uchar i; 
;;;91      CS_1621_L;                //HT1621_CS=0; 
000088  4859              LDR      r0,|L1.496|
00008a  2510              MOVS     r5,#0x10
00008c  6005              STR      r5,[r0,#0]
;;;92      Ht1621Wr_Data(0xA0,3);    //写入数据标志101 
00008e  2103              MOVS     r1,#3
000090  20a0              MOVS     r0,#0xa0
000092  f7fffffe          BL       Ht1621Wr_Data
;;;93      Ht1621Wr_Data(0x00<<2,6); //写入地址数据 
000096  2106              MOVS     r1,#6
000098  2000              MOVS     r0,#0
00009a  f7fffffe          BL       Ht1621Wr_Data
;;;94      for (i=0;i<16;i++) 
00009e  2400              MOVS     r4,#0
                  |L1.160|
;;;95      { 
;;;96       Ht1621Wr_Data(Dis_Status,8);   //写入数据 
0000a0  2108              MOVS     r1,#8
0000a2  4630              MOV      r0,r6
0000a4  f7fffffe          BL       Ht1621Wr_Data
0000a8  1c64              ADDS     r4,r4,#1
0000aa  b2e4              UXTB     r4,r4                 ;94
0000ac  2c10              CMP      r4,#0x10              ;94
0000ae  d3f7              BCC      |L1.160|
;;;97       } 
;;;98       CS_1621_H;               //HT1621_CS=1; 
0000b0  484f              LDR      r0,|L1.496|
0000b2  1f00              SUBS     r0,r0,#4
0000b4  6005              STR      r5,[r0,#0]
;;;99      } 
0000b6  bd70              POP      {r4-r6,pc}
;;;100    
                          ENDP

                  Ht1621WrCmd PROC
;;;110    //-----------------------------------------------------------------------------------------
;;;111     void Ht1621WrCmd(uchar Cmd) 
0000b8  b570              PUSH     {r4-r6,lr}
;;;112     { 
0000ba  4605              MOV      r5,r0
;;;113     CS_1621_L;                //HT1621_CS=0; 
0000bc  484c              LDR      r0,|L1.496|
0000be  2410              MOVS     r4,#0x10
0000c0  6004              STR      r4,[r0,#0]
;;;114     Delay_uS(200);
0000c2  20c8              MOVS     r0,#0xc8
0000c4  f7fffffe          BL       delay_us
;;;115     Ht1621Wr_Data(COMMAND_MODE,4);    //写入命令标志100 
0000c8  2104              MOVS     r1,#4
0000ca  2080              MOVS     r0,#0x80
0000cc  f7fffffe          BL       Ht1621Wr_Data
;;;116     Ht1621Wr_Data(Cmd,8);     //写入命令数据 
0000d0  2108              MOVS     r1,#8
0000d2  4628              MOV      r0,r5
0000d4  f7fffffe          BL       Ht1621Wr_Data
;;;117     CS_1621_H;                //HT1621_CS=1; 
0000d8  4845              LDR      r0,|L1.496|
0000da  1f00              SUBS     r0,r0,#4
0000dc  6004              STR      r4,[r0,#0]
;;;118     Delay_uS(200);
0000de  e8bd4070          POP      {r4-r6,lr}
0000e2  20c8              MOVS     r0,#0xc8
0000e4  f7ffbffe          B.W      delay_us
;;;119     } 
;;;120    
                          ENDP

                  Ht1621_Init PROC
;;;127    //-----------------------------------------------------------------------------------------
;;;128    void Ht1621_Init()
0000e8  4841              LDR      r0,|L1.496|
;;;129     {
0000ea  b510              PUSH     {r4,lr}
;;;130     WR_1621_O;
0000ec  3814              SUBS     r0,r0,#0x14
0000ee  6801              LDR      r1,[r0,#0]
0000f0  f0216170          BIC      r1,r1,#0xf000000
0000f4  6001              STR      r1,[r0,#0]
0000f6  6801              LDR      r1,[r0,#0]
0000f8  f04161e0          ORR      r1,r1,#0x7000000
0000fc  6001              STR      r1,[r0,#0]
;;;131     DATA_1621_O;
0000fe  6801              LDR      r1,[r0,#0]
000100  f0214170          BIC      r1,r1,#0xf0000000
000104  6001              STR      r1,[r0,#0]
000106  6801              LDR      r1,[r0,#0]
000108  f04141e0          ORR      r1,r1,#0x70000000
00010c  6001              STR      r1,[r0,#0]
;;;132     CS_1621_O;
00010e  6801              LDR      r1,[r0,#0]
000110  f4212170          BIC      r1,r1,#0xf0000
000114  6001              STR      r1,[r0,#0]
000116  6801              LDR      r1,[r0,#0]
000118  f44121e0          ORR      r1,r1,#0x70000
00011c  6001              STR      r1,[r0,#0]
;;;133     CS_1621_H;                //HT1621_CS=1; 
00011e  4834              LDR      r0,|L1.496|
000120  2110              MOVS     r1,#0x10
000122  1f00              SUBS     r0,r0,#4
000124  6001              STR      r1,[r0,#0]
;;;134     WR_1621_H;                //HT1621_WR=1; 
000126  2140              MOVS     r1,#0x40
000128  6001              STR      r1,[r0,#0]
;;;135     DATA_1621_H;              //HT1621_DAT=1; 
00012a  2180              MOVS     r1,#0x80
00012c  6001              STR      r1,[r0,#0]
;;;136     Delay_mS(1);            //延时使LCD工作电压稳定 
00012e  2001              MOVS     r0,#1
000130  f7fffffe          BL       delay_ms
;;;137     Ht1621WrCmd(BIAS);        
000134  2052              MOVS     r0,#0x52
000136  f7fffffe          BL       Ht1621WrCmd
;;;138     Ht1621WrCmd(RC256);       //使用内部振荡器  
00013a  2030              MOVS     r0,#0x30
00013c  f7fffffe          BL       Ht1621WrCmd
;;;139     Ht1621WrCmd(SYSEN); 
000140  2002              MOVS     r0,#2
000142  f7fffffe          BL       Ht1621WrCmd
;;;140     Ht1621WrCmd(LCDON);
000146  2006              MOVS     r0,#6
000148  f7fffffe          BL       Ht1621WrCmd
;;;141     Ht1621WrCmd(TONEOFF);
00014c  e8bd4010          POP      {r4,lr}
000150  2010              MOVS     r0,#0x10
000152  e7fe              B        Ht1621WrCmd
;;;142     }
;;;143          
                          ENDP

                  S_Write_1621 PROC
;;;155    //**************************
;;;156    void S_Write_1621(uchar MemAddress,uchar *p,uchar i)
000154  e92d41f0          PUSH     {r4-r8,lr}
;;;157     { 
000158  4604              MOV      r4,r0
;;;158     uchar s; 
;;;159     CS_1621_L;                      //HT1621_CS=0; 
00015a  4825              LDR      r0,|L1.496|
00015c  2610              MOVS     r6,#0x10
00015e  4615              MOV      r5,r2                 ;157
000160  460f              MOV      r7,r1                 ;157
000162  6006              STR      r6,[r0,#0]
;;;160     Ht1621Wr_Data(WRITE_MODE,3);    //写入数据标志101 
000164  2103              MOVS     r1,#3
000166  20a0              MOVS     r0,#0xa0
000168  f7fffffe          BL       Ht1621Wr_Data
;;;161     Ht1621Wr_Data(MemAddress,6);    //写入地址数据 
00016c  2106              MOVS     r1,#6
00016e  4620              MOV      r0,r4
000170  f7fffffe          BL       Ht1621Wr_Data
;;;162     for (s=0;s<i;s++) 
000174  2400              MOVS     r4,#0
000176  e007              B        |L1.392|
                  |L1.376|
;;;163     { 
;;;164      Ht1621Wr_Data(*(p+s)<<4,4);    //写入数据  *(p+i) = p[i]
000178  5d38              LDRB     r0,[r7,r4]
00017a  2104              MOVS     r1,#4
00017c  0700              LSLS     r0,r0,#28
00017e  0e00              LSRS     r0,r0,#24
000180  f7fffffe          BL       Ht1621Wr_Data
000184  1c64              ADDS     r4,r4,#1
000186  b2e4              UXTB     r4,r4                 ;162
                  |L1.392|
000188  42ac              CMP      r4,r5                 ;162
00018a  d3f5              BCC      |L1.376|
;;;165      } 
;;;166      CS_1621_H;                     //HT1621_CS=1; 
00018c  4818              LDR      r0,|L1.496|
00018e  1f00              SUBS     r0,r0,#4
000190  6006              STR      r6,[r0,#0]
;;;167     } 
000192  e8bd81f0          POP      {r4-r8,pc}
;;;168    
                          ENDP

                  Refresh_LCD PROC
;;;177    //****************************************
;;;178    void Refresh_LCD(void)
000196  221f              MOVS     r2,#0x1f
;;;179    {
;;;180    
;;;181    S_Write_1621(0,LCD_buffer,31);
000198  4916              LDR      r1,|L1.500|
00019a  2000              MOVS     r0,#0
00019c  e7fe              B        S_Write_1621
;;;182    }
;;;183    
                          ENDP

                  Clear_LCD PROC
;;;184    void Clear_LCD(void)
00019e  2000              MOVS     r0,#0
;;;185    {
;;;186      char i;
;;;187    	for(i=0;i<31;i++)
;;;188    	{
;;;189    		LCD_buffer[i] = 0;
0001a0  4914              LDR      r1,|L1.500|
0001a2  4602              MOV      r2,r0                 ;187
                  |L1.420|
0001a4  540a              STRB     r2,[r1,r0]
0001a6  1c40              ADDS     r0,r0,#1
0001a8  b2c0              UXTB     r0,r0                 ;187
0001aa  281f              CMP      r0,#0x1f              ;187
0001ac  d3fa              BCC      |L1.420|
;;;190    	}
;;;191    }
0001ae  4770              BX       lr
;;;192    
                          ENDP

                  Buzzer PROC
;;;193    
;;;194    void Buzzer(int mS)
0001b0  b510              PUSH     {r4,lr}
;;;195    {
0001b2  4604              MOV      r4,r0
;;;196    #if BUZZER == USED
;;;197     Ht1621WrCmd(TONEON);
0001b4  2012              MOVS     r0,#0x12
0001b6  f7fffffe          BL       Ht1621WrCmd
;;;198    #endif
;;;199     Delay_mS(mS);
0001ba  4620              MOV      r0,r4
0001bc  f7fffffe          BL       delay_ms
;;;200     Ht1621WrCmd(TONEOFF);
0001c0  e8bd4010          POP      {r4,lr}
0001c4  2010              MOVS     r0,#0x10
0001c6  e7fe              B        Ht1621WrCmd
;;;201    }
;;;202    
                          ENDP

                  TEST PROC
;;;205    
;;;206     void TEST( void )
0001c8  b510              PUSH     {r4,lr}
;;;207     {
;;;208     uchar i=0x1d;
;;;209     Ht1621_Init(); //上电初始化LCD 
0001ca  f7fffffe          BL       Ht1621_Init
;;;210     Delay_uS(250);  //延时一段时间 
0001ce  20fa              MOVS     r0,#0xfa
0001d0  f7fffffe          BL       delay_us
;;;211     Ht1621WrAllData(0xff); 
0001d4  20ff              MOVS     r0,#0xff
0001d6  f7fffffe          BL       Ht1621WrAllData
;;;212     for(i=0;i<31;i++)
0001da  2400              MOVS     r4,#0
                  |L1.476|
;;;213     {
;;;214     Ht1621WrOneData(i,0);//9
0001dc  2100              MOVS     r1,#0
0001de  4620              MOV      r0,r4
0001e0  f7fffffe          BL       Ht1621WrOneData
0001e4  1c64              ADDS     r4,r4,#1
0001e6  b2e4              UXTB     r4,r4                 ;212
0001e8  2c1f              CMP      r4,#0x1f              ;212
0001ea  d3f7              BCC      |L1.476|
;;;215     };
;;;216     }
0001ec  bd10              POP      {r4,pc}
;;;217    
                          ENDP

0001ee  0000              DCW      0x0000
                  |L1.496|
                          DCD      0x40010c14
                  |L1.500|
                          DCD      ||.bss||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  LCD_buffer
                          %        31
