; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\stm32f10x_exti.o --asm_dir=.\lis\ --list_dir=.\lis\ --depend=.\stm32f10x_exti.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931 -I.\user\inc -I.\stdperiph_driver\inc -I.\cmsis -ID:\Keil_v5\ARM\RV31\INC -Id:\Keil_v5\ARM\RV31\INC -Id:\Keil_v5\ARM\CMSIS\Include -Id:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=521 -DUSE_STDPERIPH_DRIVER -DSTM32F10X_MD --omf_browse=.\stm32f10x_exti.crf stdperiph_driver\src\stm32f10x_exti.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  EXTI_DeInit PROC
;;;84       */
;;;85     void EXTI_DeInit(void)
000000  4937              LDR      r1,|L1.224|
;;;86     {
;;;87       EXTI->IMR = 0x00000000;
000002  2000              MOVS     r0,#0
000004  6008              STR      r0,[r1,#0]
;;;88       EXTI->EMR = 0x00000000;
000006  1d09              ADDS     r1,r1,#4
000008  6008              STR      r0,[r1,#0]
;;;89       EXTI->RTSR = 0x00000000; 
00000a  1d09              ADDS     r1,r1,#4
00000c  6008              STR      r0,[r1,#0]
;;;90       EXTI->FTSR = 0x00000000; 
00000e  1d09              ADDS     r1,r1,#4
000010  6008              STR      r0,[r1,#0]
;;;91       EXTI->PR = 0x000FFFFF;
000012  4933              LDR      r1,|L1.224|
000014  4833              LDR      r0,|L1.228|
000016  3114              ADDS     r1,r1,#0x14
000018  6008              STR      r0,[r1,#0]
;;;92     }
00001a  4770              BX       lr
;;;93     
                          ENDP

                  EXTI_Init PROC
;;;100      */
;;;101    void EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct)
00001c  b530              PUSH     {r4,r5,lr}
;;;102    {
;;;103      uint32_t tmp = 0;
;;;104    
;;;105      /* Check the parameters */
;;;106      assert_param(IS_EXTI_MODE(EXTI_InitStruct->EXTI_Mode));
;;;107      assert_param(IS_EXTI_TRIGGER(EXTI_InitStruct->EXTI_Trigger));
;;;108      assert_param(IS_EXTI_LINE(EXTI_InitStruct->EXTI_Line));  
;;;109      assert_param(IS_FUNCTIONAL_STATE(EXTI_InitStruct->EXTI_LineCmd));
;;;110    
;;;111      tmp = (uint32_t)EXTI_BASE;
00001e  4930              LDR      r1,|L1.224|
;;;112         
;;;113      if (EXTI_InitStruct->EXTI_LineCmd != DISABLE)
000020  7983              LDRB     r3,[r0,#6]
000022  6802              LDR      r2,[r0,#0]            ;102
000024  b353              CBZ      r3,|L1.124|
;;;114      {
;;;115        /* Clear EXTI line configuration */
;;;116        EXTI->IMR &= ~EXTI_InitStruct->EXTI_Line;
000026  680b              LDR      r3,[r1,#0]
000028  4393              BICS     r3,r3,r2
00002a  600b              STR      r3,[r1,#0]
;;;117        EXTI->EMR &= ~EXTI_InitStruct->EXTI_Line;
00002c  1d0a              ADDS     r2,r1,#4
00002e  6813              LDR      r3,[r2,#0]
000030  6804              LDR      r4,[r0,#0]
000032  43a3              BICS     r3,r3,r4
000034  6013              STR      r3,[r2,#0]
;;;118        
;;;119        tmp += EXTI_InitStruct->EXTI_Mode;
000036  7902              LDRB     r2,[r0,#4]
000038  440a              ADD      r2,r2,r1
;;;120    
;;;121        *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
00003a  6813              LDR      r3,[r2,#0]
00003c  6804              LDR      r4,[r0,#0]
00003e  4323              ORRS     r3,r3,r4
000040  6013              STR      r3,[r2,#0]
;;;122    
;;;123        /* Clear Rising Falling edge configuration */
;;;124        EXTI->RTSR &= ~EXTI_InitStruct->EXTI_Line;
000042  4a27              LDR      r2,|L1.224|
000044  3208              ADDS     r2,r2,#8
000046  6813              LDR      r3,[r2,#0]
000048  6804              LDR      r4,[r0,#0]
00004a  43a3              BICS     r3,r3,r4
00004c  6013              STR      r3,[r2,#0]
;;;125        EXTI->FTSR &= ~EXTI_InitStruct->EXTI_Line;
00004e  1d13              ADDS     r3,r2,#4
000050  681c              LDR      r4,[r3,#0]
000052  6805              LDR      r5,[r0,#0]
000054  43ac              BICS     r4,r4,r5
000056  601c              STR      r4,[r3,#0]
;;;126        
;;;127        /* Select the trigger for the selected external interrupts */
;;;128        if (EXTI_InitStruct->EXTI_Trigger == EXTI_Trigger_Rising_Falling)
000058  7944              LDRB     r4,[r0,#5]
00005a  2c10              CMP      r4,#0x10
00005c  d005              BEQ      |L1.106|
;;;129        {
;;;130          /* Rising Falling edge */
;;;131          EXTI->RTSR |= EXTI_InitStruct->EXTI_Line;
;;;132          EXTI->FTSR |= EXTI_InitStruct->EXTI_Line;
;;;133        }
;;;134        else
;;;135        {
;;;136          tmp = (uint32_t)EXTI_BASE;
;;;137          tmp += EXTI_InitStruct->EXTI_Trigger;
00005e  4421              ADD      r1,r1,r4
;;;138    
;;;139          *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
000060  680a              LDR      r2,[r1,#0]
000062  6800              LDR      r0,[r0,#0]
000064  4302              ORRS     r2,r2,r0
000066  600a              STR      r2,[r1,#0]
;;;140        }
;;;141      }
;;;142      else
;;;143      {
;;;144        tmp += EXTI_InitStruct->EXTI_Mode;
;;;145    
;;;146        /* Disable the selected external lines */
;;;147        *(__IO uint32_t *) tmp &= ~EXTI_InitStruct->EXTI_Line;
;;;148      }
;;;149    }
000068  bd30              POP      {r4,r5,pc}
                  |L1.106|
00006a  6811              LDR      r1,[r2,#0]            ;131
00006c  6804              LDR      r4,[r0,#0]            ;131
00006e  4321              ORRS     r1,r1,r4              ;131
000070  6011              STR      r1,[r2,#0]            ;131
000072  6819              LDR      r1,[r3,#0]            ;132
000074  6800              LDR      r0,[r0,#0]            ;132
000076  4301              ORRS     r1,r1,r0              ;132
000078  6019              STR      r1,[r3,#0]            ;132
00007a  bd30              POP      {r4,r5,pc}
                  |L1.124|
00007c  7900              LDRB     r0,[r0,#4]            ;144
00007e  4408              ADD      r0,r0,r1              ;144
000080  6801              LDR      r1,[r0,#0]            ;147
000082  4391              BICS     r1,r1,r2              ;147
000084  6001              STR      r1,[r0,#0]            ;147
000086  bd30              POP      {r4,r5,pc}
;;;150    
                          ENDP

                  EXTI_StructInit PROC
;;;156      */
;;;157    void EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct)
000088  2100              MOVS     r1,#0
;;;158    {
;;;159      EXTI_InitStruct->EXTI_Line = EXTI_LINENONE;
;;;160      EXTI_InitStruct->EXTI_Mode = EXTI_Mode_Interrupt;
00008a  6001              STR      r1,[r0,#0]
00008c  7101              STRB     r1,[r0,#4]
;;;161      EXTI_InitStruct->EXTI_Trigger = EXTI_Trigger_Falling;
00008e  220c              MOVS     r2,#0xc
000090  7142              STRB     r2,[r0,#5]
;;;162      EXTI_InitStruct->EXTI_LineCmd = DISABLE;
000092  7181              STRB     r1,[r0,#6]
;;;163    }
000094  4770              BX       lr
;;;164    
                          ENDP

                  EXTI_GenerateSWInterrupt PROC
;;;170      */
;;;171    void EXTI_GenerateSWInterrupt(uint32_t EXTI_Line)
000096  4912              LDR      r1,|L1.224|
;;;172    {
;;;173      /* Check the parameters */
;;;174      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;175      
;;;176      EXTI->SWIER |= EXTI_Line;
000098  3110              ADDS     r1,r1,#0x10
00009a  680a              LDR      r2,[r1,#0]
00009c  4302              ORRS     r2,r2,r0
00009e  600a              STR      r2,[r1,#0]
;;;177    }
0000a0  4770              BX       lr
;;;178    
                          ENDP

                  EXTI_GetFlagStatus PROC
;;;185      */
;;;186    FlagStatus EXTI_GetFlagStatus(uint32_t EXTI_Line)
0000a2  4601              MOV      r1,r0
;;;187    {
;;;188      FlagStatus bitstatus = RESET;
;;;189      /* Check the parameters */
;;;190      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;191      
;;;192      if ((EXTI->PR & EXTI_Line) != (uint32_t)RESET)
0000a4  4a0e              LDR      r2,|L1.224|
0000a6  2000              MOVS     r0,#0                 ;188
0000a8  3214              ADDS     r2,r2,#0x14
0000aa  6812              LDR      r2,[r2,#0]
0000ac  420a              TST      r2,r1
0000ae  d000              BEQ      |L1.178|
;;;193      {
;;;194        bitstatus = SET;
0000b0  2001              MOVS     r0,#1
                  |L1.178|
;;;195      }
;;;196      else
;;;197      {
;;;198        bitstatus = RESET;
;;;199      }
;;;200      return bitstatus;
;;;201    }
0000b2  4770              BX       lr
;;;202    
                          ENDP

                  EXTI_ClearFlag PROC
;;;208      */
;;;209    void EXTI_ClearFlag(uint32_t EXTI_Line)
0000b4  490a              LDR      r1,|L1.224|
;;;210    {
;;;211      /* Check the parameters */
;;;212      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;213      
;;;214      EXTI->PR = EXTI_Line;
0000b6  3114              ADDS     r1,r1,#0x14
0000b8  6008              STR      r0,[r1,#0]
;;;215    }
0000ba  4770              BX       lr
;;;216    
                          ENDP

                  EXTI_GetITStatus PROC
;;;223      */
;;;224    ITStatus EXTI_GetITStatus(uint32_t EXTI_Line)
0000bc  4a08              LDR      r2,|L1.224|
;;;225    {
0000be  4601              MOV      r1,r0
;;;226      ITStatus bitstatus = RESET;
0000c0  2000              MOVS     r0,#0
;;;227      uint32_t enablestatus = 0;
;;;228      /* Check the parameters */
;;;229      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;230      
;;;231      enablestatus =  EXTI->IMR & EXTI_Line;
0000c2  6812              LDR      r2,[r2,#0]
;;;232      if (((EXTI->PR & EXTI_Line) != (uint32_t)RESET) && (enablestatus != (uint32_t)RESET))
0000c4  4b06              LDR      r3,|L1.224|
0000c6  400a              ANDS     r2,r2,r1              ;231
0000c8  3314              ADDS     r3,r3,#0x14
0000ca  681b              LDR      r3,[r3,#0]
0000cc  420b              TST      r3,r1
0000ce  d002              BEQ      |L1.214|
0000d0  2a00              CMP      r2,#0
0000d2  d000              BEQ      |L1.214|
;;;233      {
;;;234        bitstatus = SET;
0000d4  2001              MOVS     r0,#1
                  |L1.214|
;;;235      }
;;;236      else
;;;237      {
;;;238        bitstatus = RESET;
;;;239      }
;;;240      return bitstatus;
;;;241    }
0000d6  4770              BX       lr
;;;242    
                          ENDP

                  EXTI_ClearITPendingBit PROC
;;;248      */
;;;249    void EXTI_ClearITPendingBit(uint32_t EXTI_Line)
0000d8  4901              LDR      r1,|L1.224|
;;;250    {
;;;251      /* Check the parameters */
;;;252      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;253      
;;;254      EXTI->PR = EXTI_Line;
0000da  3114              ADDS     r1,r1,#0x14
0000dc  6008              STR      r0,[r1,#0]
;;;255    }
0000de  4770              BX       lr
;;;256    
                          ENDP

                  |L1.224|
                          DCD      0x40010400
                  |L1.228|
                          DCD      0x000fffff
