; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\system_stm32f10x.o --asm_dir=.\lis\ --list_dir=.\lis\ --depend=.\system_stm32f10x.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931 -I.\user\inc -I.\stdperiph_driver\inc -I.\cmsis -ID:\Keil_v5\ARM\RV31\INC -Id:\Keil_v5\ARM\RV31\INC -Id:\Keil_v5\ARM\CMSIS\Include -Id:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=521 -DUSE_STDPERIPH_DRIVER -DSTM32F10X_MD --omf_browse=.\system_stm32f10x.crf cmsis\system_stm32f10x.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  SystemInit PROC
;;;211      */
;;;212    void SystemInit (void)
000000  4825              LDR      r0,|L1.152|
;;;213    {
;;;214      /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
;;;215      /* Set HSION bit */
;;;216      RCC->CR |= (uint32_t)0x00000001;
000002  6801              LDR      r1,[r0,#0]
000004  f0410101          ORR      r1,r1,#1
000008  6001              STR      r1,[r0,#0]
;;;217    
;;;218      /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
;;;219    #ifndef STM32F10X_CL
;;;220      RCC->CFGR &= (uint32_t)0xF8FF0000;
00000a  6841              LDR      r1,[r0,#4]
00000c  4a23              LDR      r2,|L1.156|
00000e  4011              ANDS     r1,r1,r2
000010  6041              STR      r1,[r0,#4]
;;;221    #else
;;;222      RCC->CFGR &= (uint32_t)0xF0FF0000;
;;;223    #endif /* STM32F10X_CL */   
;;;224      
;;;225      /* Reset HSEON, CSSON and PLLON bits */
;;;226      RCC->CR &= (uint32_t)0xFEF6FFFF;
000012  6801              LDR      r1,[r0,#0]
000014  4a22              LDR      r2,|L1.160|
000016  4011              ANDS     r1,r1,r2
000018  6001              STR      r1,[r0,#0]
;;;227    
;;;228      /* Reset HSEBYP bit */
;;;229      RCC->CR &= (uint32_t)0xFFFBFFFF;
00001a  6801              LDR      r1,[r0,#0]
00001c  f4212180          BIC      r1,r1,#0x40000
000020  6001              STR      r1,[r0,#0]
;;;230    
;;;231      /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
;;;232      RCC->CFGR &= (uint32_t)0xFF80FFFF;
000022  6841              LDR      r1,[r0,#4]
000024  f42101fe          BIC      r1,r1,#0x7f0000
000028  6041              STR      r1,[r0,#4]
;;;233    
;;;234    #ifdef STM32F10X_CL
;;;235      /* Reset PLL2ON and PLL3ON bits */
;;;236      RCC->CR &= (uint32_t)0xEBFFFFFF;
;;;237    
;;;238      /* Disable all interrupts and clear pending bits  */
;;;239      RCC->CIR = 0x00FF0000;
;;;240    
;;;241      /* Reset CFGR2 register */
;;;242      RCC->CFGR2 = 0x00000000;
;;;243    #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
;;;244      /* Disable all interrupts and clear pending bits  */
;;;245      RCC->CIR = 0x009F0000;
;;;246    
;;;247      /* Reset CFGR2 register */
;;;248      RCC->CFGR2 = 0x00000000;      
;;;249    #else
;;;250      /* Disable all interrupts and clear pending bits  */
;;;251      RCC->CIR = 0x009F0000;
00002a  f44f011f          MOV      r1,#0x9f0000
00002e  6081              STR      r1,[r0,#8]
;;;252    #endif /* STM32F10X_CL */
;;;253        
;;;254    #if defined (STM32F10X_HD) || (defined STM32F10X_XL) || (defined STM32F10X_HD_VL)
;;;255      #ifdef DATA_IN_ExtSRAM
;;;256        SystemInit_ExtMemCtl(); 
;;;257      #endif /* DATA_IN_ExtSRAM */
;;;258    #endif 
;;;259    
;;;260      /* Configure the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers */
;;;261      /* Configure the Flash Latency cycles and enable prefetch buffer */
;;;262    	
;;;263    	
;;;264      //SetSysClock();//这一个注释掉在外面用函数配置。//这里要注意呀
;;;265    
;;;266    #ifdef VECT_TAB_SRAM
;;;267      SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
;;;268    #else
;;;269      SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
000030  491c              LDR      r1,|L1.164|
000032  03c0              LSLS     r0,r0,#15
000034  6008              STR      r0,[r1,#0]
;;;270    #endif 
;;;271    }
000036  4770              BX       lr
;;;272    
                          ENDP

                  SystemCoreClockUpdate PROC
;;;307      */
;;;308    void SystemCoreClockUpdate (void)
000038  4a17              LDR      r2,|L1.152|
;;;309    {
00003a  b510              PUSH     {r4,lr}
;;;310      uint32_t tmp = 0, pllmull = 0, pllsource = 0;
;;;311    
;;;312    #ifdef  STM32F10X_CL
;;;313      uint32_t prediv1source = 0, prediv1factor = 0, prediv2factor = 0, pll2mull = 0;
;;;314    #endif /* STM32F10X_CL */
;;;315    
;;;316    #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
;;;317      uint32_t prediv1factor = 0;
;;;318    #endif /* STM32F10X_LD_VL or STM32F10X_MD_VL or STM32F10X_HD_VL */
;;;319        
;;;320      /* Get SYSCLK source -------------------------------------------------------*/
;;;321      tmp = RCC->CFGR & RCC_CFGR_SWS;
00003c  6850              LDR      r0,[r2,#4]
;;;322      
;;;323      switch (tmp)
;;;324      {
;;;325        case 0x00:  /* HSI used as system clock */
;;;326          SystemCoreClock = HSI_VALUE;
00003e  4b1a              LDR      r3,|L1.168|
000040  f010010c          ANDS     r1,r0,#0xc            ;321
000044  4819              LDR      r0,|L1.172|
000046  d003              BEQ      |L1.80|
000048  2904              CMP      r1,#4                 ;323
00004a  d003              BEQ      |L1.84|
00004c  2908              CMP      r1,#8                 ;323
00004e  d003              BEQ      |L1.88|
                  |L1.80|
;;;327          break;
000050  6003              STR      r3,[r0,#0]  ; SystemCoreClock
000052  e016              B        |L1.130|
                  |L1.84|
;;;328        case 0x04:  /* HSE used as system clock */
;;;329          SystemCoreClock = HSE_VALUE;
000054  4916              LDR      r1,|L1.176|
;;;330          break;
000056  e013              B        |L1.128|
                  |L1.88|
;;;331        case 0x08:  /* PLL used as system clock */
;;;332    
;;;333          /* Get PLL clock source and multiplication factor ----------------------*/
;;;334          pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
000058  6851              LDR      r1,[r2,#4]
;;;335          pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
00005a  6853              LDR      r3,[r2,#4]
00005c  f4011170          AND      r1,r1,#0x3c0000       ;334
;;;336          
;;;337    #ifndef STM32F10X_CL      
;;;338          pllmull = ( pllmull >> 18) + 2;
000060  f04f0402          MOV      r4,#2
000064  f4133f80          TST      r3,#0x10000           ;335
000068  eb044191          ADD      r1,r4,r1,LSR #18
;;;339          
;;;340          if (pllsource == 0x00)
00006c  d004              BEQ      |L1.120|
;;;341          {
;;;342            /* HSI oscillator clock divided by 2 selected as PLL clock entry */
;;;343            SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
;;;344          }
;;;345          else
;;;346          {
;;;347     #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
;;;348           prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
;;;349           /* HSE oscillator clock selected as PREDIV1 clock entry */
;;;350           SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull; 
;;;351     #else
;;;352            /* HSE selected as PLL clock entry */
;;;353            if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
00006e  6853              LDR      r3,[r2,#4]
000070  039b              LSLS     r3,r3,#14
000072  d503              BPL      |L1.124|
;;;354            {/* HSE oscillator clock divided by 2 */
;;;355              SystemCoreClock = (HSE_VALUE >> 1) * pllmull;
000074  4b0f              LDR      r3,|L1.180|
000076  e002              B        |L1.126|
                  |L1.120|
000078  4b0f              LDR      r3,|L1.184|
00007a  e000              B        |L1.126|
                  |L1.124|
;;;356            }
;;;357            else
;;;358            {
;;;359              SystemCoreClock = HSE_VALUE * pllmull;
00007c  4b0c              LDR      r3,|L1.176|
                  |L1.126|
00007e  4359              MULS     r1,r3,r1              ;355
                  |L1.128|
000080  6001              STR      r1,[r0,#0]            ;355  ; SystemCoreClock
                  |L1.130|
;;;360            }
;;;361     #endif
;;;362          }
;;;363    #else
;;;364          pllmull = pllmull >> 18;
;;;365          
;;;366          if (pllmull != 0x0D)
;;;367          {
;;;368             pllmull += 2;
;;;369          }
;;;370          else
;;;371          { /* PLL multiplication factor = PLL input clock * 6.5 */
;;;372            pllmull = 13 / 2; 
;;;373          }
;;;374                
;;;375          if (pllsource == 0x00)
;;;376          {
;;;377            /* HSI oscillator clock divided by 2 selected as PLL clock entry */
;;;378            SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
;;;379          }
;;;380          else
;;;381          {/* PREDIV1 selected as PLL clock entry */
;;;382            
;;;383            /* Get PREDIV1 clock source and division factor */
;;;384            prediv1source = RCC->CFGR2 & RCC_CFGR2_PREDIV1SRC;
;;;385            prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
;;;386            
;;;387            if (prediv1source == 0)
;;;388            { 
;;;389              /* HSE oscillator clock selected as PREDIV1 clock entry */
;;;390              SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull;          
;;;391            }
;;;392            else
;;;393            {/* PLL2 clock selected as PREDIV1 clock entry */
;;;394              
;;;395              /* Get PREDIV2 division factor and PLL2 multiplication factor */
;;;396              prediv2factor = ((RCC->CFGR2 & RCC_CFGR2_PREDIV2) >> 4) + 1;
;;;397              pll2mull = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> 8 ) + 2; 
;;;398              SystemCoreClock = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor) * pllmull;                         
;;;399            }
;;;400          }
;;;401    #endif /* STM32F10X_CL */ 
;;;402          break;
;;;403    
;;;404        default:
;;;405          SystemCoreClock = HSI_VALUE;
;;;406          break;
;;;407      }
;;;408      
;;;409      /* Compute HCLK clock frequency ----------------*/
;;;410      /* Get HCLK prescaler */
;;;411      tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
000082  6851              LDR      r1,[r2,#4]
000084  4a09              LDR      r2,|L1.172|
000086  f3c11103          UBFX     r1,r1,#4,#4
00008a  1d12              ADDS     r2,r2,#4
00008c  5c51              LDRB     r1,[r2,r1]
;;;412      /* HCLK clock frequency */
;;;413      SystemCoreClock >>= tmp;  
00008e  6802              LDR      r2,[r0,#0]  ; SystemCoreClock
000090  40ca              LSRS     r2,r2,r1
000092  6002              STR      r2,[r0,#0]  ; SystemCoreClock
;;;414    }
000094  bd10              POP      {r4,pc}
;;;415    
                          ENDP

000096  0000              DCW      0x0000
                  |L1.152|
                          DCD      0x40021000
                  |L1.156|
                          DCD      0xf8ff0000
                  |L1.160|
                          DCD      0xfef6ffff
                  |L1.164|
                          DCD      0xe000ed08
                  |L1.168|
                          DCD      0x007a1200
                  |L1.172|
                          DCD      ||.data||
                  |L1.176|
                          DCD      0x00b71b00
                  |L1.180|
                          DCD      0x005b8d80
                  |L1.184|
                          DCD      0x003d0900

                          AREA ||.data||, DATA, ALIGN=2

                  SystemCoreClock
                          DCD      0x03d09000
                  AHBPrescTable
000004  00000000          DCB      0x00,0x00,0x00,0x00
000008  00000000          DCB      0x00,0x00,0x00,0x00
00000c  01020304          DCB      0x01,0x02,0x03,0x04
000010  06070809          DCB      0x06,0x07,0x08,0x09
