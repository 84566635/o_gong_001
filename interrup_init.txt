; generated by ARM C/C++ Compiler, RVCT4.0 [Build 728]
; commandline ArmCC [--debug -c --asm --interleave -ointerrup_init.o --depend=interrup_init.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\user\inc -I.\stdperiph_driver\inc -I.\cmsis -ID:\ARM\INC -ID:\ARM\INC\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_MD --omf_browse=interrup_init.crf user\src\interrup_init.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  TIM2_Configuration PROC
;;;10     
;;;11     void TIM2_Configuration(void) //64/2*2=64MHZ
000000  b50e              PUSH     {r1-r3,lr}
;;;12     {
;;;13     		TIM_TimeBaseInitTypeDef TIM_TimeBase;                                     
;;;14     		TIM_DeInit(TIM2);
000002  f04f4080          MOV      r0,#0x40000000
000006  f7fffffe          BL       TIM_DeInit
;;;15     		TIM_TimeBase.TIM_Period=(3000-1);
00000a  f64030b7          MOV      r0,#0xbb7
00000e  f8ad0004          STRH     r0,[sp,#4]
;;;16     		TIM_TimeBase.TIM_Prescaler=63;
000012  203f              MOVS     r0,#0x3f
000014  f8ad0000          STRH     r0,[sp,#0]
;;;17     		TIM_TimeBase.TIM_ClockDivision = TIM_CKD_DIV1;  
000018  2000              MOVS     r0,#0
00001a  f8ad0006          STRH     r0,[sp,#6]
;;;18     		TIM_TimeBase.TIM_CounterMode = TIM_CounterMode_Up;
00001e  f8ad0002          STRH     r0,[sp,#2]
;;;19     		TIM_TimeBaseInit(TIM2,&TIM_TimeBase);
000022  4669              MOV      r1,sp
000024  f04f4080          MOV      r0,#0x40000000
000028  f7fffffe          BL       TIM_TimeBaseInit
;;;20     		TIM_ClearITPendingBit(TIM2,TIM_IT_Update);
00002c  2101              MOVS     r1,#1
00002e  0788              LSLS     r0,r1,#30
000030  f7fffffe          BL       TIM_ClearITPendingBit
;;;21     		TIM_ClearFlag(TIM2,TIM_FLAG_Update);
000034  2101              MOVS     r1,#1
000036  0788              LSLS     r0,r1,#30
000038  f7fffffe          BL       TIM_ClearFlag
;;;22     		TIM_ITConfig(TIM2,TIM_IT_Update,ENABLE);
00003c  2201              MOVS     r2,#1
00003e  4611              MOV      r1,r2
000040  0790              LSLS     r0,r2,#30
000042  f7fffffe          BL       TIM_ITConfig
;;;23         //TIM_Cmd(TIM2,ENABLE);
;;;24     	  //TIM2->CR1 |= TIM_CR1_CEN;
;;;25     }
000046  bd0e              POP      {r1-r3,pc}
;;;26     
                          ENDP

                  TIM3_Configuration PROC
;;;27     	void TIM3_Configuration(void)
000048  b500              PUSH     {lr}
;;;28     {
00004a  b087              SUB      sp,sp,#0x1c
;;;29         TIM_OCInitTypeDef  TIM_OCInitStructure;
;;;30     		TIM_TimeBaseInitTypeDef TIM_TimeBase;                                     
;;;31     		TIM_DeInit(TIM3);
00004c  48f9              LDR      r0,|L1.1076|
00004e  f7fffffe          BL       TIM_DeInit
;;;32     		TIM_TimeBase.TIM_Period=249;
000052  20f9              MOVS     r0,#0xf9
000054  f8ad0004          STRH     r0,[sp,#4]
;;;33     		TIM_TimeBase.TIM_Prescaler=31;//36/144=0.25MHZ=4us//64/256 = 0.25MHZ=4us
000058  201f              MOVS     r0,#0x1f
00005a  f8ad0000          STRH     r0,[sp,#0]
;;;34     		TIM_TimeBase.TIM_ClockDivision = TIM_CKD_DIV1;  
00005e  2000              MOVS     r0,#0
000060  f8ad0006          STRH     r0,[sp,#6]
;;;35     		TIM_TimeBase.TIM_CounterMode = TIM_CounterMode_Up;
000064  f8ad0002          STRH     r0,[sp,#2]
;;;36     		TIM_TimeBaseInit(TIM3,&TIM_TimeBase);
000068  4669              MOV      r1,sp
00006a  48f2              LDR      r0,|L1.1076|
00006c  f7fffffe          BL       TIM_TimeBaseInit
;;;37     		TIM_ClearITPendingBit(TIM3,TIM_IT_Update);
000070  2101              MOVS     r1,#1
000072  48f0              LDR      r0,|L1.1076|
000074  f7fffffe          BL       TIM_ClearITPendingBit
;;;38     		TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;        
000078  2060              MOVS     r0,#0x60
00007a  f8ad000c          STRH     r0,[sp,#0xc]
;;;39     		TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;
00007e  2000              MOVS     r0,#0
000080  f8ad0014          STRH     r0,[sp,#0x14]
;;;40     		TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
000084  2001              MOVS     r0,#1
000086  f8ad000e          STRH     r0,[sp,#0xe]
;;;41     		TIM_OCInitStructure.TIM_Pulse = 0;
00008a  2000              MOVS     r0,#0
00008c  f8ad0012          STRH     r0,[sp,#0x12]
;;;42     		TIM_OC2Init(TIM3, &TIM_OCInitStructure);
000090  a903              ADD      r1,sp,#0xc
000092  48e8              LDR      r0,|L1.1076|
000094  f7fffffe          BL       TIM_OC2Init
;;;43     		TIM_OC2PreloadConfig(TIM3, TIM_OCPreload_Enable);
000098  2108              MOVS     r1,#8
00009a  48e6              LDR      r0,|L1.1076|
00009c  f7fffffe          BL       TIM_OC2PreloadConfig
;;;44     		TIM_ARRPreloadConfig(TIM3, ENABLE);
0000a0  2101              MOVS     r1,#1
0000a2  48e4              LDR      r0,|L1.1076|
0000a4  f7fffffe          BL       TIM_ARRPreloadConfig
;;;45     	  TIM_CtrlPWMOutputs(TIM3,ENABLE);
0000a8  2101              MOVS     r1,#1
0000aa  48e2              LDR      r0,|L1.1076|
0000ac  f7fffffe          BL       TIM_CtrlPWMOutputs
;;;46     	
;;;47     
;;;48     				 
;;;49     				 
;;;50     	//TIM_Cmd(TIM3,ENABLE);
;;;51     }
0000b0  b007              ADD      sp,sp,#0x1c
0000b2  bd00              POP      {pc}
;;;52     
                          ENDP

                  USART_InitFun PROC
;;;54     
;;;55     void USART_InitFun(void)
0000b4  b500              PUSH     {lr}
;;;56     {
0000b6  b08f              SUB      sp,sp,#0x3c
;;;57     		/*	波特率为9600bps;
;;;58     	*	8位数据长度;
;;;59     	*	1个停止位，校验;
;;;60     	*	禁用硬件流控制;
;;;61     	*	禁止USART时钟;
;;;62     	*	时钟极性低;
;;;63     	*	在第1个边沿捕获数据
;;;64     	*	最后一位数据的时钟脉冲不从 SCLK 输出； 
;;;65     	*/
;;;66     	/* 定义 USART 初始化结构体 USART_InitStructure */
;;;67       USART_InitTypeDef USART_InitStructure;
;;;68     	/* 定义 USART 初始化结构体 USART_ClockInitStructure */
;;;69       USART_ClockInitTypeDef  USART_ClockInitStructure;
;;;70     	DMA_InitTypeDef DMA_InitStructure; 
;;;71     
;;;72     	
;;;73     	USART_DeInit(USART1);
0000b8  48df              LDR      r0,|L1.1080|
0000ba  f7fffffe          BL       USART_DeInit
;;;74     	
;;;75     	USART_InitStructure.USART_BaudRate = 9600;
0000be  f44f5016          MOV      r0,#0x2580
0000c2  900b              STR      r0,[sp,#0x2c]
;;;76     	USART_InitStructure.USART_WordLength = USART_WordLength_8b;
0000c4  2000              MOVS     r0,#0
0000c6  f8ad0030          STRH     r0,[sp,#0x30]
;;;77     	USART_InitStructure.USART_StopBits = USART_StopBits_1;
0000ca  f8ad0032          STRH     r0,[sp,#0x32]
;;;78     	USART_InitStructure.USART_Parity = USART_Parity_No;
0000ce  f8ad0034          STRH     r0,[sp,#0x34]
;;;79     	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
0000d2  f8ad0038          STRH     r0,[sp,#0x38]
;;;80     	USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
0000d6  200c              MOVS     r0,#0xc
0000d8  f8ad0036          STRH     r0,[sp,#0x36]
;;;81     	USART_Init(USART1 , &USART_InitStructure);
0000dc  a90b              ADD      r1,sp,#0x2c
0000de  48d6              LDR      r0,|L1.1080|
0000e0  f7fffffe          BL       USART_Init
;;;82     
;;;83     	USART_ITConfig(USART1,USART_IT_RXNE,ENABLE);
0000e4  2201              MOVS     r2,#1
0000e6  f2405125          MOV      r1,#0x525
0000ea  48d3              LDR      r0,|L1.1080|
0000ec  f7fffffe          BL       USART_ITConfig
;;;84     	USART_Cmd(USART1,ENABLE);
0000f0  2101              MOVS     r1,#1
0000f2  48d1              LDR      r0,|L1.1080|
0000f4  f7fffffe          BL       USART_Cmd
;;;85     	
;;;86     
;;;87     /****************************USART2***********************************/	
;;;88     	USART_DeInit(USART2);
0000f8  48d0              LDR      r0,|L1.1084|
0000fa  f7fffffe          BL       USART_DeInit
;;;89     	
;;;90     	USART_InitStructure.USART_BaudRate = 9600;
0000fe  f44f5016          MOV      r0,#0x2580
000102  900b              STR      r0,[sp,#0x2c]
;;;91     	USART_InitStructure.USART_WordLength = USART_WordLength_8b;
000104  2000              MOVS     r0,#0
000106  f8ad0030          STRH     r0,[sp,#0x30]
;;;92     	USART_InitStructure.USART_StopBits = USART_StopBits_1;
00010a  f8ad0032          STRH     r0,[sp,#0x32]
;;;93     	USART_InitStructure.USART_Parity = USART_Parity_No;
00010e  f8ad0034          STRH     r0,[sp,#0x34]
;;;94     	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
000112  f8ad0038          STRH     r0,[sp,#0x38]
;;;95     	USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
000116  200c              MOVS     r0,#0xc
000118  f8ad0036          STRH     r0,[sp,#0x36]
;;;96     	USART_Init(USART2 , &USART_InitStructure);
00011c  a90b              ADD      r1,sp,#0x2c
00011e  48c7              LDR      r0,|L1.1084|
000120  f7fffffe          BL       USART_Init
;;;97     	//下面是时钟初始化
;;;98     	
;;;99     
;;;100    /* DMA1 Channel6 (triggered by USART2 Rx event) Config */ //?? STM32 datasheet 
;;;101    	DMA_DeInit(DMA1_Channel6); 
000124  48c6              LDR      r0,|L1.1088|
000126  f7fffffe          BL       DMA_DeInit
;;;102    	DMA_InitStructure.DMA_PeripheralBaseAddr = (u32)(&USART2->DR); 
00012a  48c4              LDR      r0,|L1.1084|
00012c  1d00              ADDS     r0,r0,#4
00012e  9000              STR      r0,[sp,#0]
;;;103    	DMA_InitStructure.DMA_MemoryBaseAddr = (u32)PM25DMABuffer; 
000130  48c4              LDR      r0,|L1.1092|
000132  9001              STR      r0,[sp,#4]
;;;104    	DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralSRC; 
000134  2000              MOVS     r0,#0
000136  9002              STR      r0,[sp,#8]
;;;105    	DMA_InitStructure.DMA_BufferSize = sizeof(PM25DMABuffer); 
000138  2023              MOVS     r0,#0x23
00013a  9003              STR      r0,[sp,#0xc]
;;;106    	DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable; 
00013c  2000              MOVS     r0,#0
00013e  9004              STR      r0,[sp,#0x10]
;;;107    	DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable; 
000140  2080              MOVS     r0,#0x80
000142  9005              STR      r0,[sp,#0x14]
;;;108    	DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Byte; 
000144  2000              MOVS     r0,#0
000146  9006              STR      r0,[sp,#0x18]
;;;109    	DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_Byte; 
000148  9007              STR      r0,[sp,#0x1c]
;;;110    	DMA_InitStructure.DMA_Mode = DMA_Mode_Circular; 
00014a  2020              MOVS     r0,#0x20
00014c  9008              STR      r0,[sp,#0x20]
;;;111    	DMA_InitStructure.DMA_Priority = DMA_Priority_VeryHigh; 
00014e  f44f5040          MOV      r0,#0x3000
000152  9009              STR      r0,[sp,#0x24]
;;;112    	DMA_InitStructure.DMA_M2M = DMA_M2M_Disable; 
000154  2000              MOVS     r0,#0
000156  900a              STR      r0,[sp,#0x28]
;;;113    	DMA_Init(DMA1_Channel6, &DMA_InitStructure);
000158  4669              MOV      r1,sp
00015a  48b9              LDR      r0,|L1.1088|
00015c  f7fffffe          BL       DMA_Init
;;;114    //	
;;;115    	DMA_ITConfig(DMA1_Channel6, DMA_IT_TC, ENABLE); 
000160  2201              MOVS     r2,#1
000162  2102              MOVS     r1,#2
000164  48b6              LDR      r0,|L1.1088|
000166  f7fffffe          BL       DMA_ITConfig
;;;116    	
;;;117    		/* Enable USART2 DMA Rxrequest */ 
;;;118    	USART_DMACmd(USART2, USART_DMAReq_Rx, ENABLE); 
00016a  2201              MOVS     r2,#1
00016c  2140              MOVS     r1,#0x40
00016e  48b3              LDR      r0,|L1.1084|
000170  f7fffffe          BL       USART_DMACmd
;;;119    	/* Enable DMA1 Channel6 */ 
;;;120    	DMA_Cmd(DMA1_Channel6, ENABLE);
000174  2101              MOVS     r1,#1
000176  48b2              LDR      r0,|L1.1088|
000178  f7fffffe          BL       DMA_Cmd
;;;121    //	//USART_ITConfig(USART2,USART_IT_RXNE,ENABLE);
;;;122    	USART_Cmd(USART2,ENABLE);
00017c  2101              MOVS     r1,#1
00017e  48af              LDR      r0,|L1.1084|
000180  f7fffffe          BL       USART_Cmd
;;;123    	
;;;124    	
;;;125    }
000184  b00f              ADD      sp,sp,#0x3c
000186  bd00              POP      {pc}
;;;126    
                          ENDP

                  NVIC_Configuration PROC
;;;127    void NVIC_Configuration(void)
000188  b508              PUSH     {r3,lr}
;;;128    
;;;129    {
;;;130    
;;;131    		NVIC_InitTypeDef NVIC_InitStructure;
;;;132    		NVIC_PriorityGroupConfig(NVIC_PriorityGroup_1);
00018a  f44f60c0          MOV      r0,#0x600
00018e  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;133    	
;;;134    		NVIC_InitStructure.NVIC_IRQChannel = USART2_IRQn;
000192  2026              MOVS     r0,#0x26
000194  f88d0000          STRB     r0,[sp,#0]
;;;135    		NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
000198  2001              MOVS     r0,#1
00019a  f88d0001          STRB     r0,[sp,#1]
;;;136    		NVIC_InitStructure.NVIC_IRQChannelSubPriority = 2;
00019e  2002              MOVS     r0,#2
0001a0  f88d0002          STRB     r0,[sp,#2]
;;;137    		NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
0001a4  2001              MOVS     r0,#1
0001a6  f88d0003          STRB     r0,[sp,#3]
;;;138    		NVIC_Init(&NVIC_InitStructure);
0001aa  4668              MOV      r0,sp
0001ac  f7fffffe          BL       NVIC_Init
;;;139    	
;;;140    		
;;;141     		NVIC_InitStructure.NVIC_IRQChannel = DMA1_Channel6_IRQn;
0001b0  2010              MOVS     r0,#0x10
0001b2  f88d0000          STRB     r0,[sp,#0]
;;;142        NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
0001b6  2000              MOVS     r0,#0
0001b8  f88d0001          STRB     r0,[sp,#1]
;;;143     		NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;
0001bc  2001              MOVS     r0,#1
0001be  f88d0002          STRB     r0,[sp,#2]
;;;144     		NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
0001c2  f88d0003          STRB     r0,[sp,#3]
;;;145     		NVIC_Init(&NVIC_InitStructure);
0001c6  4668              MOV      r0,sp
0001c8  f7fffffe          BL       NVIC_Init
;;;146    		
;;;147    		NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn;
0001cc  201c              MOVS     r0,#0x1c
0001ce  f88d0000          STRB     r0,[sp,#0]
;;;148        NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
0001d2  2001              MOVS     r0,#1
0001d4  f88d0001          STRB     r0,[sp,#1]
;;;149    		NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
0001d8  2000              MOVS     r0,#0
0001da  f88d0002          STRB     r0,[sp,#2]
;;;150    		NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
0001de  2001              MOVS     r0,#1
0001e0  f88d0003          STRB     r0,[sp,#3]
;;;151    		NVIC_Init(&NVIC_InitStructure);
0001e4  4668              MOV      r0,sp
0001e6  f7fffffe          BL       NVIC_Init
;;;152    		
;;;153    		NVIC_InitStructure.NVIC_IRQChannel = USART1_IRQn;
0001ea  2025              MOVS     r0,#0x25
0001ec  f88d0000          STRB     r0,[sp,#0]
;;;154        NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
0001f0  2000              MOVS     r0,#0
0001f2  f88d0001          STRB     r0,[sp,#1]
;;;155    		NVIC_InitStructure.NVIC_IRQChannelSubPriority = 3;
0001f6  2003              MOVS     r0,#3
0001f8  f88d0002          STRB     r0,[sp,#2]
;;;156    		NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
0001fc  2001              MOVS     r0,#1
0001fe  f88d0003          STRB     r0,[sp,#3]
;;;157    		NVIC_Init(&NVIC_InitStructure);
000202  4668              MOV      r0,sp
000204  f7fffffe          BL       NVIC_Init
;;;158    
;;;159    }
000208  bd08              POP      {r3,pc}
;;;160    
                          ENDP

                  GPIO_Configuration PROC
;;;161    	void GPIO_Configuration(void)
00020a  b508              PUSH     {r3,lr}
;;;162    	{
;;;163    			GPIO_InitTypeDef GPIO_InitStruct;
;;;164    		
;;;165    
;;;166    		
;;;167    		//HALL	
;;;168    			GPIO_InitStruct.GPIO_Mode = GPIO_Mode_IN_FLOATING;
00020c  2004              MOVS     r0,#4
00020e  f88d0003          STRB     r0,[sp,#3]
;;;169    			GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
000212  2003              MOVS     r0,#3
000214  f88d0002          STRB     r0,[sp,#2]
;;;170    			GPIO_InitStruct.GPIO_Pin = GPIO_Pin_5;	
000218  2020              MOVS     r0,#0x20
00021a  f8ad0000          STRH     r0,[sp,#0]
;;;171    			GPIO_Init(GPIOA,&GPIO_InitStruct);
00021e  4669              MOV      r1,sp
000220  4889              LDR      r0,|L1.1096|
000222  f7fffffe          BL       GPIO_Init
;;;172    						
;;;173    
;;;174    /**********************************************************************OUT************************/		
;;;175    // 	   //PWM
;;;176    		
;;;177    		GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable, ENABLE);//< JTAG-DP Disabled and SW-DP Enabled *///PA15/JTDI  PB4/JNRST PB3/JTDO
000226  2101              MOVS     r1,#1
000228  4888              LDR      r0,|L1.1100|
00022a  f7fffffe          BL       GPIO_PinRemapConfig
;;;178    		
;;;179    // TIM3_CH2 PWM PA7			
;;;180     			GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF_PP;
00022e  2018              MOVS     r0,#0x18
000230  f88d0003          STRB     r0,[sp,#3]
;;;181     			GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
000234  2003              MOVS     r0,#3
000236  f88d0002          STRB     r0,[sp,#2]
;;;182     			GPIO_InitStruct.GPIO_Pin = GPIO_Pin_7;	
00023a  2080              MOVS     r0,#0x80
00023c  f8ad0000          STRH     r0,[sp,#0]
;;;183     			GPIO_Init(GPIOA,&GPIO_InitStruct);
000240  4669              MOV      r1,sp
000242  4881              LDR      r0,|L1.1096|
000244  f7fffffe          BL       GPIO_Init
;;;184    			
;;;185    			// PM_P_C  PA12			
;;;186     			GPIO_InitStruct.GPIO_Mode = GPIO_Mode_Out_PP;
000248  2010              MOVS     r0,#0x10
00024a  f88d0003          STRB     r0,[sp,#3]
;;;187     			GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
00024e  2003              MOVS     r0,#3
000250  f88d0002          STRB     r0,[sp,#2]
;;;188     			GPIO_InitStruct.GPIO_Pin = GPIO_Pin_12;	
000254  f44f5080          MOV      r0,#0x1000
000258  f8ad0000          STRH     r0,[sp,#0]
;;;189     			GPIO_Init(GPIOA,&GPIO_InitStruct);
00025c  4669              MOV      r1,sp
00025e  487a              LDR      r0,|L1.1096|
000260  f7fffffe          BL       GPIO_Init
;;;190    			
;;;191    			// CO_P_C  PA15			
;;;192     			GPIO_InitStruct.GPIO_Mode = GPIO_Mode_Out_PP;
000264  2010              MOVS     r0,#0x10
000266  f88d0003          STRB     r0,[sp,#3]
;;;193     			GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
00026a  2003              MOVS     r0,#3
00026c  f88d0002          STRB     r0,[sp,#2]
;;;194     			GPIO_InitStruct.GPIO_Pin = GPIO_Pin_15;	
000270  f44f4000          MOV      r0,#0x8000
000274  f8ad0000          STRH     r0,[sp,#0]
;;;195     			GPIO_Init(GPIOA,&GPIO_InitStruct);
000278  4669              MOV      r1,sp
00027a  4873              LDR      r0,|L1.1096|
00027c  f7fffffe          BL       GPIO_Init
;;;196    			
;;;197    			// ANION_C PC8			
;;;198     			GPIO_InitStruct.GPIO_Mode = GPIO_Mode_Out_PP;
000280  2010              MOVS     r0,#0x10
000282  f88d0003          STRB     r0,[sp,#3]
;;;199     			GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
000286  2003              MOVS     r0,#3
000288  f88d0002          STRB     r0,[sp,#2]
;;;200     			GPIO_InitStruct.GPIO_Pin = GPIO_Pin_8;	
00028c  f44f7080          MOV      r0,#0x100
000290  f8ad0000          STRH     r0,[sp,#0]
;;;201     			GPIO_Init(GPIOC,&GPIO_InitStruct);
000294  4669              MOV      r1,sp
000296  486e              LDR      r0,|L1.1104|
000298  f7fffffe          BL       GPIO_Init
;;;202    			
;;;203    			// PM_RST  PA6			
;;;204     			GPIO_InitStruct.GPIO_Mode = GPIO_Mode_Out_PP;
00029c  2010              MOVS     r0,#0x10
00029e  f88d0003          STRB     r0,[sp,#3]
;;;205     			GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
0002a2  2003              MOVS     r0,#3
0002a4  f88d0002          STRB     r0,[sp,#2]
;;;206     			GPIO_InitStruct.GPIO_Pin = GPIO_Pin_6;	
0002a8  2040              MOVS     r0,#0x40
0002aa  f8ad0000          STRH     r0,[sp,#0]
;;;207     			GPIO_Init(GPIOA,&GPIO_InitStruct);
0002ae  4669              MOV      r1,sp
0002b0  4865              LDR      r0,|L1.1096|
0002b2  f7fffffe          BL       GPIO_Init
;;;208    			
;;;209    			// calib_CO2 PB14			
;;;210     			GPIO_InitStruct.GPIO_Mode = GPIO_Mode_Out_PP;
0002b6  2010              MOVS     r0,#0x10
0002b8  f88d0003          STRB     r0,[sp,#3]
;;;211     			GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
0002bc  2003              MOVS     r0,#3
0002be  f88d0002          STRB     r0,[sp,#2]
;;;212     			GPIO_InitStruct.GPIO_Pin = GPIO_Pin_14;	
0002c2  f44f4080          MOV      r0,#0x4000
0002c6  f8ad0000          STRH     r0,[sp,#0]
;;;213     			GPIO_Init(GPIOB,&GPIO_InitStruct);
0002ca  4669              MOV      r1,sp
0002cc  4861              LDR      r0,|L1.1108|
0002ce  f7fffffe          BL       GPIO_Init
;;;214    			
;;;215    			// SPEAKER  PB12			
;;;216     			GPIO_InitStruct.GPIO_Mode = GPIO_Mode_Out_PP;
0002d2  2010              MOVS     r0,#0x10
0002d4  f88d0003          STRB     r0,[sp,#3]
;;;217     			GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
0002d8  2003              MOVS     r0,#3
0002da  f88d0002          STRB     r0,[sp,#2]
;;;218     			GPIO_InitStruct.GPIO_Pin = GPIO_Pin_12;	
0002de  f44f5080          MOV      r0,#0x1000
0002e2  f8ad0000          STRH     r0,[sp,#0]
;;;219     			GPIO_Init(GPIOB,&GPIO_InitStruct);
0002e6  4669              MOV      r1,sp
0002e8  485a              LDR      r0,|L1.1108|
0002ea  f7fffffe          BL       GPIO_Init
;;;220    			
;;;221    			// M_EN1 PC12			
;;;222     			GPIO_InitStruct.GPIO_Mode = GPIO_Mode_Out_PP;
0002ee  2010              MOVS     r0,#0x10
0002f0  f88d0003          STRB     r0,[sp,#3]
;;;223     			GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
0002f4  2003              MOVS     r0,#3
0002f6  f88d0002          STRB     r0,[sp,#2]
;;;224     			GPIO_InitStruct.GPIO_Pin = GPIO_Pin_12;	
0002fa  f44f5080          MOV      r0,#0x1000
0002fe  f8ad0000          STRH     r0,[sp,#0]
;;;225     			GPIO_Init(GPIOC,&GPIO_InitStruct);
000302  4669              MOV      r1,sp
000304  4852              LDR      r0,|L1.1104|
000306  f7fffffe          BL       GPIO_Init
;;;226    			
;;;227    			// M_EN2  PD2			
;;;228     			GPIO_InitStruct.GPIO_Mode = GPIO_Mode_Out_PP;
00030a  2010              MOVS     r0,#0x10
00030c  f88d0003          STRB     r0,[sp,#3]
;;;229     			GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
000310  2003              MOVS     r0,#3
000312  f88d0002          STRB     r0,[sp,#2]
;;;230     			GPIO_InitStruct.GPIO_Pin = GPIO_Pin_2;	
000316  2004              MOVS     r0,#4
000318  f8ad0000          STRH     r0,[sp,#0]
;;;231     			GPIO_Init(GPIOD,&GPIO_InitStruct);
00031c  4669              MOV      r1,sp
00031e  484e              LDR      r0,|L1.1112|
000320  f7fffffe          BL       GPIO_Init
;;;232    			
;;;233    			// M_IN1 PC10			
;;;234     			GPIO_InitStruct.GPIO_Mode = GPIO_Mode_Out_PP;
000324  2010              MOVS     r0,#0x10
000326  f88d0003          STRB     r0,[sp,#3]
;;;235     			GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
00032a  2003              MOVS     r0,#3
00032c  f88d0002          STRB     r0,[sp,#2]
;;;236     			GPIO_InitStruct.GPIO_Pin = GPIO_Pin_10;	
000330  f44f6080          MOV      r0,#0x400
000334  f8ad0000          STRH     r0,[sp,#0]
;;;237     			GPIO_Init(GPIOC,&GPIO_InitStruct);
000338  4669              MOV      r1,sp
00033a  4845              LDR      r0,|L1.1104|
00033c  f7fffffe          BL       GPIO_Init
;;;238    			
;;;239    			// M_IN2 PC11			
;;;240     			GPIO_InitStruct.GPIO_Mode = GPIO_Mode_Out_PP;
000340  2010              MOVS     r0,#0x10
000342  f88d0003          STRB     r0,[sp,#3]
;;;241     			GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
000346  2003              MOVS     r0,#3
000348  f88d0002          STRB     r0,[sp,#2]
;;;242     			GPIO_InitStruct.GPIO_Pin = GPIO_Pin_11;	
00034c  f44f6000          MOV      r0,#0x800
000350  f8ad0000          STRH     r0,[sp,#0]
;;;243     			GPIO_Init(GPIOC,&GPIO_InitStruct);
000354  4669              MOV      r1,sp
000356  483e              LDR      r0,|L1.1104|
000358  f7fffffe          BL       GPIO_Init
;;;244    			
;;;245    			// M_IN3  PA0			
;;;246     			GPIO_InitStruct.GPIO_Mode = GPIO_Mode_Out_PP;
00035c  2010              MOVS     r0,#0x10
00035e  f88d0003          STRB     r0,[sp,#3]
;;;247     			GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
000362  2003              MOVS     r0,#3
000364  f88d0002          STRB     r0,[sp,#2]
;;;248     			GPIO_InitStruct.GPIO_Pin = GPIO_Pin_0;	
000368  2001              MOVS     r0,#1
00036a  f8ad0000          STRH     r0,[sp,#0]
;;;249     			GPIO_Init(GPIOA,&GPIO_InitStruct);
00036e  4669              MOV      r1,sp
000370  4835              LDR      r0,|L1.1096|
000372  f7fffffe          BL       GPIO_Init
;;;250    			
;;;251    			// M_IN4 PA4			
;;;252     			GPIO_InitStruct.GPIO_Mode = GPIO_Mode_Out_PP;
000376  2010              MOVS     r0,#0x10
000378  f88d0003          STRB     r0,[sp,#3]
;;;253     			GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
00037c  2003              MOVS     r0,#3
00037e  f88d0002          STRB     r0,[sp,#2]
;;;254     			GPIO_InitStruct.GPIO_Pin = GPIO_Pin_4;	
000382  2010              MOVS     r0,#0x10
000384  f8ad0000          STRH     r0,[sp,#0]
;;;255     			GPIO_Init(GPIOA,&GPIO_InitStruct);
000388  4669              MOV      r1,sp
00038a  482f              LDR      r0,|L1.1096|
00038c  f7fffffe          BL       GPIO_Init
;;;256    			
;;;257    			// RST PB4/JNRST			
;;;258     			GPIO_InitStruct.GPIO_Mode = GPIO_Mode_Out_PP;
000390  2010              MOVS     r0,#0x10
000392  f88d0003          STRB     r0,[sp,#3]
;;;259     			GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
000396  2003              MOVS     r0,#3
000398  f88d0002          STRB     r0,[sp,#2]
;;;260     			GPIO_InitStruct.GPIO_Pin = GPIO_Pin_4;	
00039c  2010              MOVS     r0,#0x10
00039e  f8ad0000          STRH     r0,[sp,#0]
;;;261     			GPIO_Init(GPIOB,&GPIO_InitStruct);
0003a2  4669              MOV      r1,sp
0003a4  482b              LDR      r0,|L1.1108|
0003a6  f7fffffe          BL       GPIO_Init
;;;262    			
;;;263    			// CD/RS PB5			
;;;264     			GPIO_InitStruct.GPIO_Mode = GPIO_Mode_Out_PP;
0003aa  2010              MOVS     r0,#0x10
0003ac  f88d0003          STRB     r0,[sp,#3]
;;;265     			GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
0003b0  2003              MOVS     r0,#3
0003b2  f88d0002          STRB     r0,[sp,#2]
;;;266     			GPIO_InitStruct.GPIO_Pin = GPIO_Pin_5;	
0003b6  2020              MOVS     r0,#0x20
0003b8  f8ad0000          STRH     r0,[sp,#0]
;;;267     			GPIO_Init(GPIOB,&GPIO_InitStruct);
0003bc  4669              MOV      r1,sp
0003be  4825              LDR      r0,|L1.1108|
0003c0  f7fffffe          BL       GPIO_Init
;;;268    			
;;;269    	/*********************************************************************/		
;;;270    
;;;271    		//AI输入		
;;;272    
;;;273    //UART1
;;;274    		/* Configure USART1 Tx (PA9) as alternate function push-pull */
;;;275    		GPIO_InitStruct.GPIO_Pin = GPIO_Pin_9;
0003c4  f44f7000          MOV      r0,#0x200
0003c8  f8ad0000          STRH     r0,[sp,#0]
;;;276    		GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
0003cc  2003              MOVS     r0,#3
0003ce  f88d0002          STRB     r0,[sp,#2]
;;;277    		GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF_PP;
0003d2  2018              MOVS     r0,#0x18
0003d4  f88d0003          STRB     r0,[sp,#3]
;;;278    		GPIO_Init(GPIOA, &GPIO_InitStruct);
0003d8  4669              MOV      r1,sp
0003da  481b              LDR      r0,|L1.1096|
0003dc  f7fffffe          BL       GPIO_Init
;;;279    	//usart 
;;;280    		/* Configure USART1 Rx (PA10) as input floating */
;;;281    		GPIO_InitStruct.GPIO_Pin = GPIO_Pin_10;
0003e0  f44f6080          MOV      r0,#0x400
0003e4  f8ad0000          STRH     r0,[sp,#0]
;;;282    		GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
0003e8  2003              MOVS     r0,#3
0003ea  f88d0002          STRB     r0,[sp,#2]
;;;283    		GPIO_InitStruct.GPIO_Mode = GPIO_Mode_IPU;
0003ee  2048              MOVS     r0,#0x48
0003f0  f88d0003          STRB     r0,[sp,#3]
;;;284    		GPIO_Init(GPIOA, &GPIO_InitStruct);
0003f4  4669              MOV      r1,sp
0003f6  4814              LDR      r0,|L1.1096|
0003f8  f7fffffe          BL       GPIO_Init
;;;285    //UART2
;;;286    		/* Configure USART2 Tx (PA2) as alternate function push-pull */
;;;287    		GPIO_InitStruct.GPIO_Pin = GPIO_Pin_2;
0003fc  2004              MOVS     r0,#4
0003fe  f8ad0000          STRH     r0,[sp,#0]
;;;288    		GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
000402  2003              MOVS     r0,#3
000404  f88d0002          STRB     r0,[sp,#2]
;;;289    		GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF_PP;
000408  2018              MOVS     r0,#0x18
00040a  f88d0003          STRB     r0,[sp,#3]
;;;290    		GPIO_Init(GPIOA, &GPIO_InitStruct);
00040e  4669              MOV      r1,sp
000410  480d              LDR      r0,|L1.1096|
000412  f7fffffe          BL       GPIO_Init
;;;291    	//usart 
;;;292    		/* Configure USART2 Rx (PA3) as input floating */
;;;293    		GPIO_InitStruct.GPIO_Pin = GPIO_Pin_3;
000416  2008              MOVS     r0,#8
000418  f8ad0000          STRH     r0,[sp,#0]
;;;294    		GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
00041c  2003              MOVS     r0,#3
00041e  f88d0002          STRB     r0,[sp,#2]
;;;295    		GPIO_InitStruct.GPIO_Mode = GPIO_Mode_IPU;
000422  2048              MOVS     r0,#0x48
000424  f88d0003          STRB     r0,[sp,#3]
;;;296    		GPIO_Init(GPIOA, &GPIO_InitStruct);
000428  4669              MOV      r1,sp
00042a  4807              LDR      r0,|L1.1096|
00042c  f7fffffe          BL       GPIO_Init
;;;297    
;;;298    		
;;;299    	}
000430  bd08              POP      {r3,pc}
000432  0000              DCW      0x0000
                  |L1.1076|
                          DCD      0x40000400
                  |L1.1080|
                          DCD      0x40013800
                  |L1.1084|
                          DCD      0x40004400
                  |L1.1088|
                          DCD      0x4002006c
                  |L1.1092|
                          DCD      PM25DMABuffer
                  |L1.1096|
                          DCD      0x40010800
                  |L1.1100|
                          DCD      0x00300200
                  |L1.1104|
                          DCD      0x40011000
                  |L1.1108|
                          DCD      0x40010c00
                  |L1.1112|
                          DCD      0x40011400
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  PM25DMABuffer
                          %        35

                          AREA ||.data||, DATA, ALIGN=1

                  AD_Value
                          DCDU     0x00000000
